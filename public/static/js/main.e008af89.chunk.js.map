{"version":3,"sources":["assets/loading.svg","Components/Faqs/gen1.png","Components/Faqs/intelli.png","Components/Faqs/gen2.png","Components/Faqs/gen2grapg.png","Components/Faqs/googleapistorage.png","Components/Faqs/serviceacc.png","Components/redux/reducers/forms.js","Components/redux/reducers/index.js","Components/redux/reducers/intelli_creds.js","Components/redux/actions/ActionTypes.js","Components/redux/reducers/lake1_creds.js","Components/redux/reducers/lake2_creds.js","Components/redux/reducers/task_reducer.js","Components/redux/reducers/aw_creds.js","Components/redux/reducers/google_creds.js","Components/Loading.js","Components/Sidebar/SubMenu.js","Components/Sidebar/SideBar.js","Auth0/react-auth0-spa.js","config.js","apiCall/intelli.js","Components/Settings/Intelligence.js","apiCall/airwatch.js","Components/Settings/Airwatch.js","apiCall/midatalakes.js","Components/Settings/Datalakes.js","apiCall/google.js","Components/Settings/Google.js","Components/Reports/Report.js","Components/Reports/ReportsTransfer.js","Components/Reports/ReportsTransferv2.js","Components/Reports/ReportsTransGoogle.js","Components/scheduler/Weekly.js","apiCall/agenda.js","Components/scheduler/Tasks.js","Components/scheduler/Cron.js","Components/Reports/Scheduler.js","Components/Contacts/Contact.js","Components/PrivateRoute.js","Components/Faqs/Faq.js","Components/Faqs/FaqsList.js","Components/Airwatch/OtherSearch.js","Components/Airwatch/UserSearch.js","Components/Airwatch/Tabs/DeviceInfo.js","Components/Airwatch/Tabs/SingleApp.js","Components/Airwatch/Tabs/SingleProfile.js","Components/Airwatch/DeviceTabs.js","Components/Airwatch/AwData.js","Components/Airwatch/Admin.js","Components/Airwatch/Licences.js","Components/content/Content.js","Components/redux/actions/ActionCreators.js","Components/Dashboard.js","Components/Navbar/NavBar.js","utils/history.js","utils/initFontAwesome.js","App.js","Components/redux/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","intelliCreds","url","clientid","secret","lake1Creds","repname","tenantid","azureclientid","azuresecret","lake2Creds","container","azureconnectstring","tasks","items","awCreds","awurl","apikey","awadmin","awpassword","lgid","googles","bucket","fileName","rootReducer","combineReducers","icreds","state","action","type","Object","assign","payload","lake1creds","lake2creds","awcreds","goocreds","Loading","className","src","loading","alt","SubMenu","props","useState","collapsed","setCollapsed","icon","title","NavItem","onClick","classNames","NavLink","Collapse","isOpen","navbar","map","item","index","key","tag","Link","to","target","submenus","SideBar","color","toggle","style","Nav","vertical","menu","Fragment","faLightbulb","faBriefcase","faCopy","faQuestion","faPaperPlane","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","SERVER_URL","fetchTasks","email","sub","dispatch","a","data","axios","get","params","creds","dbcreds","fetchIntelliData","testCreds","region","encoded","post","jwt","getToken","axiosListReportRec","token","reportId","urlavail","ListReportRec","searchAllReports","reports","axiosGetLink","id","linkAvail","axiosGetLink2","tokenMi","axiosGetLink3","axiosGetLink4","Intelligence","user","disabled2","setState","setOpen","toggleEdit","isDisabled","setDisabled","toggleDisabled","useEffect","retrieveCreds","handleChange","evt","selectCreds","name","value","message","testCred","base64","encode","split","then","_","isEmpty","toString","startsWith","saveCreds","status","Container","Row","Col","sm","textAlign","Form","onSubmit","e","preventDefault","stopPropagation","FormGroup","Label","for","Input","onChange","required","disabled","Button","size","block","active","Spinner","animation","variant","fetchAwData","awencoded","username","admins","getAdmins","getOgs","ogs","getLgId","lg","changePass","adminid","pass","getDevPerUser","devices","fetchUsers","getAppId","bundleid","appid","getDevPerApp","getAlldevOg","Airwatch","stripTrailingSlash","str","endsWith","slice","saveAwCreds","trim","newurl","toLowerCase","admin","isString","fetchData","getTokenMi","tesTokenMi","testAccount","datalake","account","testBlobMi","connectString","Datalakes","disabled3","disabled4","color1","isOpen2","setOpen2","toggleEdit2","isDisabled2","setDisabled2","toggleDisabled2","miretrieveCreds","miretrieve2Creds","miselectCreds","message1","loading1","handleChange2","miselect2Creds","message2","loading2","micreds","saveCreds2","mi2creds","testCred1","testCred2","color2","response","isSuccessful","fetchGoogleData","buckets","Google","getTokenSilently","invalidFile","messupload","handleFileChange","files","length","headers","Authorization","formData","FormData","append","res","projectId","CustomInput","label","invalid","event","Report","_isMounted","link","reportDownload","date","time","checkStatusCompleted","completedReports","filter","i","reduce","b","created_at","dateFormat","optionsAr","v","detect","toggleClass","linksReport","linkReport","currentState","this","reporting","allReports","el","href","Component","ReportsTransfer","isSelected","check","checked","markedreports","checkedBoxes","links","handleCheckedAll","listReports","handleCheckbox","push","findIndex","ch","splice","Promise","all","getData","toggleClassTransfer","onTransfer","find","TransferGoogle","gooRetrieveCreds","Weekly","getHours","hours","leap","parseInt","createElement","concat","getMinutes","minutes","onAtHourChange","val","onAtMinuteChange","onCheck","indexOf","replace","resetMessage","CardBody","CardTitle","sm-auto","defaultChecked","search","offset","createJob","urlapi","job","deleteTask","cancelTask","startTask","interval","Tasks","callCancelTask","index0","onButton","callStartTask","callDeleteTask","Table","striped","borderless","width","scope","scheduled","align","repo","position","itemrem","delitem","Cron","gen","onValueChange","parentChange","newVal","inorder","Number","sort","getVal","cronstrue","unique","handleTaskSubmit","uniq","uniqid","saveTasks","onButtonPosition","newItem","onItemDel","newtem","result","retrieveTasks","Card","showResultCron","inline","Scheduler","selectTasks","showResultText","Contact","sendFeedback","object","feedback","feed","handleInputChange","bind","handleSubmit","row","htmlFor","md","minLength","rows","PrivateRoute","component","path","rest","isAuthenticated","loginWithRedirect","appState","targetUrl","fn","render","Faq","question","answer","toggleOpen","useResizeAware","resizeListener","height","animProps","useSpring","opacity","div","genv1","perm","faqsData","intelligraph","gen2","gen2utils","googleapistorage","serviceacc","FaqsList","faq","Parser","OtherSearch","form","handleChangeSearch","deviceId","placeholder","UserSearch","users","fetchDev","addmessage","newadmins","Uuid","UserName","Group","selectedOption","options","disable","DeviceInfo","deviceData","UserEmailAddress","LocationGroupName","Model","Platform","OperatingSystem","LastSeen","SecurityPatchDate","EnrollmentStatus","ComplianceStatus","SerialNumber","MacAddress","Imei","Udid","BatteryLevel","AvailablePhysicalMemory","TotalPhysicalMemory","toFixed","AvailableDeviceCapacity","DeviceCapacity","CellularNetworkInfo","CurrentOperator","SubscriberCarrierNetwork","RoamingStatus","IsCompromised","IsPasscodePresent","IsPasscodeCompliant","SingleApp","apps","smartgroup","actionApp","DeviceId","act","includes","Id","Value","searchApp","platform","createSm","gid","handleSm","LocationGroupId","handleChangeAction","handleChangeType","handleChangeApp","appsArray","DeviceApps","IsManaged","appsEvenArray","product","appsOddArray","BundleId","ApplicationName","AppVersion","Badge","ApplicationIdentifier","Type","mb","profiles","profileid","actionProfile","searchProfiles","DeviceProfiles","Status","ProfileName","Name","Description","CurrentVersion","InstalledProfileVersion","DeviceTabs","activeTab","setActiveTab","tabs","TabContent","TabPane","tabId","SingleProfile","radioswitch","disuser","handleChangeRadio1","handleChangeRadio2","handleChangeUser","isObject","getDeviceData","onDevChange","persist","onSubmitUser","filterdevices","Devices","renderDeviceTable","DeviceFriendlyName","isArray","Admin","selectedOptionAdmin","selectedOptionOg","loadingOg","passwords","lgtoogle","popoverOpen","togglePopOver","handleChangeAdmin","messageLg","messageOg","handleChangeOgs","handleChangepass","handleRandomPass","generator","generateMultiple","symbols","numbers","uppercase","strict","handleChangeLgId","onSubmitLgId","lgids","mess","passes","Array","og","newogs","customStyles","control","base","border","boxShadow","styles","bordered","GroupId","LocationGroupType","Users","Popover","placement","PopoverHeader","PopoverBody","Admins","maxLength","LgLevel","Licences","switch","compareArray","arr1","arr2","final","forEach","e1","e2","Apps","appids","deviceids","Set","Application","alldevfromog","OrganizationGroup","applefromog","androidfromog","macfromog","winfromog","alldevids","DeviceID","advancedArr","advanced","basic","totalDev","apple","mac","windows","android","mapDispatchToProps","selectIntelliCreds","intelliname","intellivalue","retrieveIntelliCreds","intellicreds","selectLake1Creds","lake1name","lake1value","retrieveLake1Creds","selectLake2Creds","lake2name","lake2value","retrieveLake2Creds","taskname","taskvalue","task","selectAwCreds","awname","awvalue","retrieveAwCreds","selectGoogleCreds","gooname","goovalue","retrieveGoogleCreds","withRouter","connect","intellicredentials","lake1credentials","lake2credentials","exact","AwData","Dashboard","fluid","class","rel","NavBar","setIsOpen","logout","logoutWithRedirect","returnTo","origin","setMenu","Navbar","light","expand","NavbarBrand","NavbarToggler","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","picture","DropdownMenu","DropdownItem","header","minHeight","offset-sm-1","createBrowserHistory","library","add","faLink","faUser","faHome","faPowerOff","faCog","faMobileAlt","faDesktop","faCheck","initFontAwesome","store","createStore","App","Boolean","hostname","match","ReactDOM","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","handleRedirectCallback","getUser","initAuth0","loginWithPopup","Provider","getIdTokenClaims","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","audience","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sQAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oTCA9BC,EAAe,CAAEC,IAAK,GACLC,SAAU,GACTC,OAAO,IAIzBC,EAAa,CACEC,QAAQ,GACRC,SAAU,GACVC,cAAe,GACfC,YAAY,IAE3BC,EAAa,CACEC,UAAU,GACTC,mBAAoB,IAGpCC,EAAQ,CACSC,MAAO,IAGvBC,EAAU,CAClBC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,WAAW,GACXC,KAAK,IAIGC,EAAU,CACNC,OAAQ,GACRC,SAAS,ICXZC,EAVKC,YAAgB,CAClCC,OCPa,WAAwC,IAA9BC,EAA6B,uDAArB1B,EAAc2B,EAAO,uCAClD,OAAOA,EAAOC,MACV,ICPwB,mBDWpB,ICRoB,oBDUZ,OAAOC,OAAOC,OAAO,GAAGJ,EAAOC,EAAOI,SAElD,QACI,OAAOL,IDHjBM,WGRa,WAAsC,IAA5BN,EAA2B,uDAAnBtB,EAAYuB,EAAO,uCAChD,OAAOA,EAAOC,MACV,IDFsB,iBCMlB,IDJkB,kBCMV,OAAOC,OAAOC,OAAO,GAAGJ,EAAOC,EAAOI,SAElD,QACI,OAAOL,IHFjBO,WITa,WAAsC,IAA5BP,EAA2B,uDAAnBjB,EAAYkB,EAAO,uCAChD,OAAOA,EAAOC,MACV,IFEsB,iBEElB,IFAkB,kBEEV,OAAOC,OAAOC,OAAO,GAAGJ,EAAOC,EAAOI,SAElD,QACI,OAAOL,IJDjBd,MKVa,WAAiC,IAAvBc,EAAsB,uDAAdd,EAAOe,EAAO,uCAC3C,OAAOA,EAAOC,MACV,IHMqB,gBGFjB,IHIiB,iBGFT,OAAOC,OAAOC,OAAO,GAAGJ,EAAOC,EAAOI,SAElD,QACI,OAAOL,ILAjBQ,QMXa,WAAmC,IAAzBR,EAAwB,uDAAhBZ,EAASa,EAAO,uCAC7C,OAAOA,EAAOC,MACV,IJUmB,cINf,IJQe,eINP,OAAOC,OAAOC,OAAO,GAAGJ,EAAOC,EAAOI,SAElD,QACI,OAAOL,INCjBS,SOZa,WAAmC,IAAzBT,EAAwB,uDAAhBN,EAASO,EAAO,uCAC7C,OAAOA,EAAOC,MACV,ILcuB,kBKVnB,ILYmB,mBKVX,OAAOC,OAAOC,OAAO,GAAGJ,EAAOC,EAAOI,SAElD,QACI,OAAOL,M,kBCPJU,EANC,kBACd,yBAAKC,UAAU,WACb,yBAAKC,IAAKC,IAASC,IAAI,c,2EC2BZC,EA1BC,SAAAC,GAAU,IAAD,EAEWC,oBAAS,GAFpB,mBAEhBC,EAFgB,KAELC,EAFK,KAIfC,EAAuBJ,EAAvBI,KAAMC,EAAiBL,EAAjBK,MAAOlC,EAAU6B,EAAV7B,MAErB,OACE,6BACE,kBAACmC,EAAA,EAAD,CAASC,QALQ,kBAAMJ,GAAcD,IAKLP,UAAWa,IAAW,CAAC,aAAcN,KACnE,kBAACO,EAAA,EAAD,CAASd,UAAU,mBACjB,kBAAC,IAAD,CAAiBS,KAAMA,EAAMT,UAAU,SAASU,IAGpD,kBAACK,EAAA,EAAD,CAAUC,QAAST,EAAWU,QAAM,EAACjB,UAAWa,IAAW,aAAa,CAAC,QAASN,KAC/E/B,EAAM0C,KAAI,SAACC,EAAMC,GAAP,OACP,kBAACT,EAAA,EAAD,CAASU,IAAKD,EAAOpB,UAAU,QAC7B,kBAACc,EAAA,EAAD,CAASQ,IAAKC,IAAMC,GAAIL,EAAKM,QAC1BN,EAAKT,c,SCwBdgB,EAAW,CACf,CACE,CACEhB,MAAO,cACPe,OAAQ,WAEV,CACEf,MAAO,6BACPe,OAAQ,YAEV,CACEf,MAAO,6BACPe,OAAQ,aAEV,CACEf,MAAO,2BACPe,OAAQ,kBAEV,CACEf,MAAO,oBACPe,OAAQ,aAGZ,CACE,CACEf,MAAO,QACPe,OAAQ,SAEV,CACEf,MAAO,gBACPe,OAAQ,YAEV,CACEf,MAAO,WACPe,OAAQ,aAIZ,CAEE,CACEf,MAAO,MACPe,OAAQ,aAIZ,CACE,CACEf,MAAO,eACPe,OAAQ,WAGV,CACEf,MAAO,uBACPe,OAAQ,aAEV,CACEf,MAAO,eACPe,OAAQ,SAMDE,EAvGC,SAAAtB,GAEhB,OAAW,yBAAKL,UAAWa,IAAW,UAAW,CAAC,UAAWR,EAAMW,UAC7D,yBAAKhB,UAAU,kBACb,0BAAM4B,MAAM,OAAOhB,QAASP,EAAMwB,OAAQC,MAAO,CAACF,MAAO,SAAzD,QACA,0CAEF,yBAAK5B,UAAU,aACb,kBAAC+B,EAAA,EAAD,CAAKC,UAAQ,EAAChC,UAAU,sBAEL,IAAfK,EAAM4B,KACR,kBAAC,IAAMC,SAAP,KACF,kBAAC,EAAD,CAASxB,MAAM,eAAeD,KAAM0B,IAAa3D,MAAOkD,EAAS,KACjE,kBAAC,EAAD,CAAShB,MAAM,WAAWD,KAAM2B,IAAa5D,MAAOkD,EAAS,MAC1C,GAGH,IAAfrB,EAAM4B,KACR,kBAAC,IAAMC,SAAP,KACG,kBAAC,EAAD,CAASxB,MAAM,MAAMD,KAAM4B,IAAQ7D,MAAOkD,EAAS,KACrD,kBAAC,EAAD,CAAShB,MAAM,WAAWD,KAAM2B,IAAa5D,MAAOkD,EAAS,MAC3C,GAEhB,kBAACf,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAASQ,IAAKC,IAAMC,GAAI,QACtB,kBAAC,IAAD,CAAiBf,KAAM6B,IAAYtC,UAAU,SAD/C,QAIF,kBAACW,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAASQ,IAAKC,IAAMC,GAAI,YACtB,kBAAC,IAAD,CAAiBf,KAAM8B,IAAcvC,UAAU,SADjD,gB,0ICjCNwC,EAA4B,kBAChCC,OAAOC,QAAQC,aAAa,GAAIC,SAASlC,MAAO+B,OAAOI,SAASC,WAErDC,EAAeC,IAAMC,gBACrBC,EAAW,kBAAMC,qBAAWJ,I,yBCP5BK,GAAY,6BCKZC,GAAU,uCAAG,WAAOC,EAAOC,EAAKC,GAAnB,qBAAAC,EAAA,6DAClB7F,EADkB,UACTwF,GADS,SAGlBM,EAAO,CACTJ,QACAC,OALoB,SAQNI,IAAMC,IAAIhG,EAAI,CAACiG,OAAOH,IARhB,QAQpBI,EARoB,QAUdJ,KAAK,KAGLK,EAAU,CAACvF,MAAOsF,EAAMJ,KAAK,GAAGlF,OAEpCgF,EAASO,IAfS,2CAAH,0DAuBVC,GAAgB,uCAAG,WAAOV,EAAOC,EAAKC,GAAnB,qBAAAC,EAAA,6DACxB7F,EADwB,UACfwF,GADe,gBAGtBM,EAAO,CACTJ,QACAC,OALwB,SAQVI,IAAMC,IAAIhG,EAAI,CAACiG,OAAOH,IARZ,QAQxBI,EARwB,QAUlBJ,KAAK,KAGLK,EAAU,CAAClG,SAAUiG,EAAMJ,KAAK,GAAG7F,SACvCD,IAAKkG,EAAMJ,KAAK,GAAG9F,IACnBE,OAAQgG,EAAMJ,KAAK,GAAG5F,QAEtB0F,EAASO,IAjBa,2CAAH,0DA0BZE,GAAS,uCAAG,WAAOC,EAAQC,GAAf,mBAAAV,EAAA,6DACjB7F,EADiB,UACRwF,GADQ,qBAKjBM,EAAO,CACTQ,SACAC,WAPmB,SAWLR,IAAMS,KAAKxG,EAAI8F,GAXV,cAWjBW,EAXiB,yBAahBA,GAbgB,2CAAH,wDAgBTC,GAAQ,uCAAE,WAAOhB,EAAOC,GAAd,mBAAAE,EAAA,6DAKd7F,EALc,UAKLwF,GALK,oBAOdM,EAAQ,CACbJ,QACAC,OATmB,kBAYEI,IAAMS,KAAKxG,EAAI8F,GAZjB,YAYVW,EAZU,QAedX,KAfc,yCAgBdW,EAAIX,MAhBU,mHAAF,wDAyBNa,GAAkB,uCAAG,WAAOjB,EAAOC,EAAKiB,EAAOC,GAA1B,mBAAAhB,EAAA,6DAC5BiB,EAD4B,UACbtB,GADa,0BAE1BM,EAAQ,CACZJ,QACAC,MACDiB,QACCC,YAN8B,SASJd,IAAMS,KAAKM,EAAUhB,GATjB,cAS1BiB,EAT0B,yBAWzBA,EAAcjB,MAXW,2CAAH,4DAcxBkB,GAAgB,uCAAG,WAAOtB,EAAOC,EAAKiB,GAAnB,mBAAAf,EAAA,6DACpB7F,EADoB,UACXwF,GADW,yBAEpBM,EAAQ,CACZJ,QACAC,MACAiB,SALwB,SAOJb,IAAMS,KAAKxG,EAAI8F,GAPX,cAOpBmB,EAPoB,yBAUnBA,GAVmB,2CAAH,0DAcZC,GAAY,uCAAG,WAAOxB,EAAOC,EAAKiB,EAAMO,GAAzB,mBAAAtB,EAAA,6DAEtBiB,EAFsB,UAEPtB,GAFO,mBAGpBM,EAAQ,CACZJ,QACAC,MACAiB,QACAO,MAPwB,SASFpB,IAAMS,KAAKM,EAAUhB,GATnB,cASpBsB,EAToB,yBAWnBA,EAAUtB,MAXS,2CAAH,4DAgBZuB,GAAa,uCAAG,WAAQ3B,EAAOC,EAAKiB,EAAMO,EAAIG,GAA9B,mBAAAzB,EAAA,6DAEvBiB,EAFuB,UAERtB,GAFQ,oBAGrBM,EAAQ,CACZJ,QACAC,MACAiB,QACAO,KACAG,WARyB,SAUHvB,IAAMS,KAAKM,EAAUhB,GAVlB,cAUrBsB,EAVqB,yBAYpBA,EAAUtB,MAZU,2CAAH,8DAgBbyB,GAAa,uCAAG,WAAO7B,EAAOC,EAAKiB,EAAMO,GAAzB,mBAAAtB,EAAA,6DAEvBiB,EAFuB,UAERtB,GAFQ,oBAGrBM,EAAQ,CACZJ,QACAC,MACAiB,QACAO,MAPyB,SASHpB,IAAMS,KAAKM,EAAUhB,GATlB,cASrBsB,EATqB,yBAWpBA,EAAUtB,MAXU,2CAAH,4DAeb0B,GAAa,uCAAG,WAAO9B,EAAOC,EAAKiB,EAAMO,GAAzB,mBAAAtB,EAAA,6DAEvBiB,EAFuB,UAERtB,GAFQ,oBAGrBM,EAAQ,CACZJ,QACAC,MACAiB,QACAO,MAPyB,SASHpB,IAAMS,KAAKM,EAAUhB,GATlB,cASrBsB,EATqB,yBAWpBA,EAAUtB,MAXU,2CAAH,4D,oBCuDf2B,GAzNM,SAAChF,GAAY,IAEtBiF,EAASpC,IAAToC,KAFqB,EAMHhF,mBAAS,CACjCgD,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACVrD,SAAS,EACTqF,WAAW,IAVgB,mBAMtBlG,EANsB,KAMfmG,EANe,OAgBHlF,oBAAS,GAhBN,mBAgBtBU,EAhBsB,KAgBdyE,EAhBc,KAiBzBC,EAAY,kBAAMD,GAASzE,IAjBF,EAmBGV,oBAAS,GAnBZ,mBAmBxBqF,EAnBwB,KAmBZC,EAnBY,KAoBzBC,EAAiB,kBAAMD,GAAaD,IAGvCG,qBAAW,WAOV9B,GAAiBsB,EAAKhC,MAAOgC,EAAK/B,IAAKlD,EAAM0F,iBAI1C,IAIH,IAAMC,EAAe,SAACC,GAEpB5F,EAAM6F,YAEJD,EAAIxE,OAAO0E,KAAKF,EAAIxE,OAAO2E,OAG3BZ,EAAS,eACJnG,EADG,CAENkG,WAAW,EACXc,QAAS,GACTnG,SAAS,MAMToG,EAAQ,uCAAG,8BAAA7C,EAAA,6DACTU,EAAUoC,IAAOC,OAAP,UAAiBnG,EAAMyD,MAAMjG,SAA7B,YAAyCwC,EAAMyD,MAAMhG,SAE/DoG,EAAS7D,EAAMyD,MAAMlG,IAAI6I,MAAM,IAAI,GAAG,GAC5CjB,EAAS,eACJnG,EADG,CAENgH,QAAQ,GACVnG,SAAS,KAPM,SAQT+D,GAAWC,EAAQC,GAASuC,MAChC,SAAArC,GACKsC,KAAEC,QAAQvC,EAAIX,OAASW,EAAIX,KAAKmD,WAAWC,WAAW,mBAGvDtB,EAAS,eACJnG,EADG,CAENgH,QAAS,sCACTd,WAAW,EACX3D,MAAO,MACP1B,SAAS,KAKXsF,EAAS,eACNnG,EADK,CAGRkG,WAAW,EACX3D,MAAO,QACTyE,QAAQ,kBACRnG,SAAS,QA7BE,2CAAH,qDAoCR6G,EAAS,uCAAG,oCAAAtD,EAAA,6DAGV7F,EAHU,UAGDwF,GAHC,gBAIVe,EAAUoC,IAAOC,OAAP,UAAiBnG,EAAMyD,MAAMjG,SAA7B,YAAyCwC,EAAMyD,MAAMhG,SAE/DoG,EAAS7D,EAAMyD,MAAMlG,IAAI6I,MAAM,IAAI,GAAG,GACtC/C,EAAM,CACVJ,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACV3F,IAAKyC,EAAMyD,MAAMlG,IACjBC,SAAUwC,EAAMyD,MAAMjG,SACtBC,OAAQuC,EAAMyD,MAAMhG,OACpBqG,UACAD,UAdc,kBAiBMP,IAAMS,KAAKxG,EAAK8F,GAjBtB,UAoBG,OAHTW,EAjBM,QAoBR2C,OApBQ,wBAuBPtB,IACAG,IAMHxF,EAAM0F,cAAc,CAACnI,IAAKyC,EAAMyD,MAAMlG,IACpCC,SAAUwC,EAAMyD,MAAMjG,SACtBC,OAAQuC,EAAMyD,MAAMhG,SAhCZ,kBAmCHuG,GAnCG,oHAAH,qDAmEjB,OAEI,kBAAC4C,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,+CAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAGZ,kBAACsH,EAAA,EAAD,CAAMC,SAtCU,SAACC,GACjBA,EAAEC,iBACFD,EAAEE,kBACFX,IACAvB,EAAS,eAAInG,EAAL,CACNkG,WAAW,EACbc,QAAQ,QAiCR,kBAACc,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,sBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAK,MAAMC,MAAO/F,EAAMyD,MAAMlG,IAAKmK,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAEpI,kBAACgC,EAAA,EAAD,KACK,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,gBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAM,WAAWC,MAAO/F,EAAMyD,MAAMjG,SAAUkK,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAE1I,kBAACgC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,mBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,WAAWS,UAAU,eAAemG,KAAM,SAASC,MAAO/F,EAAMyD,MAAMhG,OAAQiK,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAExI,kBAACgC,EAAA,EAAD,KACK3G,EACF,kBAACkG,EAAA,EAAD,KACA,kBAACgB,EAAA,EAAD,CAAQtG,MAAM,UAAUuG,KAAK,KAAKC,OAAK,EAACC,QAAM,EAAEzH,QAAW,WAAKiF,IAAkBH,MAAlF,SAFU,mBAvCV,WAAO,OAAO,kBAACwB,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAASqC,MAAM,UAAUwG,OAAK,EAACD,KAAK,KAAKvH,QAAW0F,GAAjE,SAA8F,kBAACa,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAAS6G,MAAM,OAAOgC,OAAK,EAACH,SAAU5I,EAAMkG,UAAWvF,UAAU,oBAA9E,cAuCjI,SAQpB,kBAACkH,EAAA,EAAD,KACM,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP/H,EAAMa,QAAU,kBAACoI,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,GACrE,kBAACrB,EAAA,EAAD,CAAKC,GAAG,QAAR,IAAgB,wBAAItF,MAAQ,CAACF,MAAOvC,EAAMuC,QAASvC,EAAMgH,aChNzDoC,GAAW,uCAAG,WAAOnF,EAAOC,EAAKC,GAAnB,qBAAAC,EAAA,6DACnB7F,EADmB,UACVwF,GADU,aAGjBM,EAAO,CACTJ,QACAC,OALmB,SAQLI,IAAMC,IAAIhG,EAAI,CAACiG,OAAOH,IARjB,QAQnBI,EARmB,QAUbJ,KAAK,KAGLK,EAAU,CAACpF,OAAQmF,EAAMJ,KAAK,GAAG/E,OACrCD,MAAOoF,EAAMJ,KAAK,GAAGhF,MACrBE,QAASkF,EAAMJ,KAAK,GAAG9E,QACvBC,WAAYiF,EAAMJ,KAAK,GAAG7E,WAC1BC,KAAMgF,EAAMJ,KAAK,GAAG5E,MAGpB0E,EAASO,IApBQ,2CAAH,0DA4BPE,GAAS,uCAAG,WAAOvF,EAAOC,EAAQ+J,EAAWC,GAAjC,mBAAAlF,EAAA,6DACjB7F,EADiB,UACRwF,GADQ,kBAKjBM,EAAO,CACThF,QACAC,SACA+J,YACAC,YATmB,SAYFhF,IAAMS,KAAKxG,EAAI8F,GAZb,cAYjBkF,EAZiB,yBAchBA,GAdgB,2CAAH,4DAiBTC,GAAS,uCAAG,WAAOvF,EAAOC,GAAd,mBAAAE,EAAA,6DACjB7F,EADiB,UACRwF,GADQ,qBAKjBM,EAAO,CACTJ,QACAC,OAPmB,SAUFI,IAAMS,KAAKxG,EAAI8F,GAVb,cAUjBkF,EAViB,yBAYhBA,GAZgB,2CAAH,wDAeTE,GAAM,uCAAG,WAAOxF,EAAOC,GAAd,mBAAAE,EAAA,6DACd7F,EADc,UACLwF,GADK,iBAKdM,EAAO,CACTJ,QACAC,OAPgB,SAUFI,IAAMS,KAAKxG,EAAI8F,GAVb,cAUdqF,EAVc,yBAYbA,GAZa,2CAAH,wDAeNC,GAAO,uCAAG,WAAO1F,EAAOC,EAAKzE,GAAnB,mBAAA2E,EAAA,6DACf7F,EADe,UACNwF,GADM,mBAKfM,EAAO,CACTJ,QACAC,MACAzE,QARiB,SAWJ6E,IAAMS,KAAKxG,EAAI8F,GAXX,cAWfuF,EAXe,yBAadA,GAbc,2CAAH,0DAmBPC,GAAU,uCAAG,WAAO5F,EAAOC,EAAK4F,EAASC,GAA5B,mBAAA3F,EAAA,6DAClB7F,EADkB,UACTwF,GADS,mBAKlBM,EAAO,CACTJ,QACAC,MACA4F,UACAC,QAToB,SAYHzF,IAAMS,KAAKxG,EAAI8F,GAZZ,cAYlBkF,EAZkB,yBAcjBA,GAdiB,2CAAH,4DAkBVS,GAAa,uCAAG,WAAO/F,EAAOC,EAAKoF,EAAU7J,GAA7B,mBAAA2E,EAAA,6DACrB7F,EADqB,UACZwF,GADY,4BAKrBM,EAAO,CACTJ,QACAC,MACAoF,WACA7J,QATuB,SAYL6E,IAAMS,KAAKxG,EAAI8F,GAZV,cAYrB4F,EAZqB,yBAcpBA,GAdoB,2CAAH,4DAiBbC,GAAU,uCAAG,WAAOjG,EAAOC,EAAMzE,GAApB,mBAAA2E,EAAA,6DAClB7F,EADkB,UACTwF,GADS,oBAKlBM,EAAO,CACTJ,QACAC,MAEAzE,QAToB,SAYF6E,IAAMS,KAAKxG,EAAI8F,GAZb,cAYlB4F,EAZkB,yBAcjBA,GAdiB,2CAAH,0DAqBdE,GAAQ,uCAAG,WAAOlG,EAAOC,EAAMzE,EAAM2K,GAA1B,mBAAAhG,EAAA,6DAChB7F,EADgB,UACPwF,GADO,iBAKZM,EAAO,CACTJ,QACAC,MACAzE,OACA2K,YATc,SAYE9F,IAAMS,KAAKxG,EAAI8F,GAZjB,cAYZgG,EAZY,yBAcXA,GAdW,2CAAH,4DAkBJC,GAAY,uCAAG,WAAOrG,EAAOC,EAAMzE,EAAM4K,GAA1B,mBAAAjG,EAAA,6DACpB7F,EADoB,UACXwF,GADW,2BAKpBM,EAAO,CACTJ,QACAC,MACAzE,OACA4K,SATsB,SAYT/F,IAAMS,KAAKxG,EAAI8F,GAZN,cAYpBqB,EAZoB,yBAcnBA,GAdmB,2CAAH,4DAmDZ6E,GAAW,uCAAG,WAAOtG,EAAOC,EAAMzE,GAApB,mBAAA2E,EAAA,6DACnB7F,EADmB,UACVwF,GADU,uBAKnBM,EAAO,CACTJ,QACAC,MACAzE,QARqB,SAWH6E,IAAMS,KAAKxG,EAAI8F,GAXZ,cAWnB4F,EAXmB,yBAalBA,GAbkB,2CAAH,0DC4BbO,GAnPE,SAACxJ,GAAY,IAElBiF,EAASpC,IAAToC,KAFiB,EAKChF,mBAAS,CACjCgD,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACVrD,SAAS,EACTqF,WAAW,IATY,mBAKlBlG,EALkB,KAKXmG,EALW,OAeDlF,oBAAS,GAfR,mBAepBU,EAfoB,KAeZyE,EAfY,KAgBrBC,EAAY,kBAAMD,GAASzE,IAhBN,EAkBOV,oBAAS,GAlBhB,mBAkBpBqF,EAlBoB,KAkBRC,EAlBQ,KAmBrBC,EAAiB,kBAAMD,GAAaD,IAGvCG,qBAAW,WAIR2C,GAAYnD,EAAKhC,MAAOgC,EAAK/B,IAAKlD,EAAM0F,iBAEvC,IAIH,IAAMC,EAAe,SAACC,GAEpB5F,EAAM6F,YAEJD,EAAIxE,OAAO0E,KAAKF,EAAIxE,OAAO2E,OAG3BZ,EAAS,eACDnG,EADA,CAEHkG,WAAW,EACXc,QAAS,GACTnG,SAAS,MAKZ4J,EAAqB,SAACC,GAE1B,OAAIA,EAAIC,SAAS,SACPD,EAAIE,MAAM,GAAI,GAChBF,EAAIC,SAAS,QACXD,EAAIE,MAAM,GAAI,GACfF,EAAIC,SAAS,KACZD,EAAIE,MAAM,GAAI,GACXF,GAGTG,EAAW,uCAAG,oCAAAzG,EAAA,6DAGZ7F,EAHY,UAGHwF,GAHG,aAIZsF,EAAYnC,IAAOC,OAAP,UAAiBG,KAAEwD,KAAK9J,EAAMR,QAAQjB,SAAtC,YAAkDyB,EAAMR,QAAQhB,aAC9EuL,EAASzD,KAAEwD,KAAKL,EAAmBzJ,EAAMR,QAAQnB,MAAM2L,gBAErD3G,EAAM,CACVJ,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACV7E,MAAO0L,EACPzL,OAAQgI,KAAEwD,KAAK9J,EAAMR,QAAQlB,QAC7BC,QAAS+H,KAAEwD,KAAK9J,EAAMR,QAAQjB,SAC9BC,WAAYwB,EAAMR,QAAQhB,WAC1B6J,YAED5J,KAAMuB,EAAMR,QAAQf,MAhBH,kBAmBI6E,IAAMS,KAAKxG,EAAK8F,GAnBpB,UAsBC,OAHTW,EAnBQ,QAsBV2C,OAtBU,wBA0BTtB,IACAG,IAMHxF,EAAM0F,cAAc,CAACrH,MAAO2B,EAAMR,QAAQnB,MACxCC,OAAQ0B,EAAMR,QAAQlB,OACtBC,QAASyB,EAAMR,QAAQjB,QACvBC,WAAYwB,EAAMR,QAAQhB,aApChB,kBAyCLwF,GAzCK,oHAAH,qDAwDbiC,EAAQ,uCAAG,8BAAA7C,EAAA,6DAETiF,EAAYnC,IAAOC,OAAP,UAAiBG,KAAEwD,KAAK9J,EAAMR,QAAQjB,SAAtC,YAAkDyB,EAAMR,QAAQhB,aAElF2G,EAAS,eACJnG,EADG,CAENgH,QAAQ,GACVnG,SAAS,KAEHkK,EAASN,EAAmBzJ,EAAMR,QAAQnB,MAAM2L,eATvC,SAYTpG,GAAU0C,KAAEwD,KAAKC,GAASzD,KAAEwD,KAAK9J,EAAMR,QAAQlB,QAAQ+J,EAAW/B,KAAEwD,KAAK9J,EAAMR,QAAQjB,UAAU8H,MACrG,SAAA4D,GACM3D,KAAE4D,SAASD,EAAM5G,MACnB8B,EAAS,eACJnG,EADG,CAENgH,QAASiE,EAAM5G,KACf6B,WAAW,EACX3D,MAAO,MACP1B,SAAS,MAIXG,EAAM0F,cAAc,CAACjH,KAAMuB,EAAMR,QAAQf,OACzC0G,EAAS,eACNnG,EADK,CAGRkG,WAAW,EACX3D,MAAO,QACTyE,QAAQ,kBACRnG,SAAS,SA/BE,2CAAH,qDA0CNqH,EAAQ,uCAAI,WAAOC,GAAP,SAAA/D,EAAA,sDAChB+D,EAAEC,iBACFD,EAAEE,kBAGFwC,IAOA1E,EAAS,eAAInG,EAAL,CACNkG,WAAW,EACbc,QAAQ,MAdQ,2CAAJ,sDAyBhB,OAEI,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEL,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eACtB,wBAAIA,UAAU,cAAd,6BAGC,kBAACkH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIZ,kBAACsH,EAAA,EAAD,CAAMC,SAAUA,GAChB,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,sBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAe+E,GAAG,QAAQoB,KAAK,QAAQC,MAAO/F,EAAMR,QAAQnB,MAAMyL,OAAQpC,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAE5J,kBAACgC,EAAA,EAAD,KACK,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,cACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAe+E,GAAG,SAASoB,KAAM,SAASC,MAAO/F,EAAMR,QAAQlB,OAAOwL,OAAQpC,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAEvJ,kBAACgC,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,qBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAM,UAAUC,MAAOO,KAAEwD,KAAK9J,EAAMR,QAAQjB,SAAUmJ,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAGlJ,kBAACgC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,cAAX,cACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,WAAWS,UAAU,eAAemG,KAAM,aAAaC,MAAO/F,EAAMR,QAAQhB,WAAYkJ,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAElJ,kBAACgC,EAAA,EAAD,KACK3G,EACF,kBAACkG,EAAA,EAAD,KACA,kBAACgB,EAAA,EAAD,CAAQtG,MAAM,UAAUuG,KAAK,KAAKC,OAAK,EAACC,QAAM,EAAEzH,QAAW,WAAKiF,IAAkBH,MAAlF,SAFU,mBA5CV,WAAO,OAAO,kBAACwB,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAASqC,MAAM,UAAUwG,OAAK,EAACD,KAAK,KAAKvH,QAAW0F,GAAjE,SAA8F,kBAACa,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAAS6G,MAAM,OAAOgC,OAAK,EAACH,SAAU5I,EAAMkG,UAAW3D,MAAM,OAAOuG,KAAK,MAAtF,cA4CjI,SAQhB,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP/H,EAAMa,QAAU,kBAACoI,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,GACrE,kBAACrB,EAAA,EAAD,CAAKC,GAAG,QAAR,IAAgB,wBAAItF,MAAQ,CAACF,MAAOvC,EAAMuC,QAASvC,EAAMgH,aC9OzDmE,GAAS,uCAAG,WAAOlH,EAAOC,EAAKC,GAAnB,qBAAAC,EAAA,6DACf7F,EADe,UACNwF,GADM,kBAGfM,EAAO,CACTJ,QACAC,OALiB,SAQHI,IAAMC,IAAIhG,EAAI,CAACiG,OAAOH,IARnB,QAQjBI,EARiB,QAUXJ,KAAK,KAGLK,EAAU,CAAC7F,cAAe4F,EAAMJ,KAAK,GAAG7F,SAC5CG,QAAS8F,EAAMJ,KAAK,GAAG1F,QACvBC,SAAU6F,EAAMJ,KAAK,GAAGzF,SACxBE,YAAa2F,EAAMJ,KAAK,GAAG5F,OAC1BO,UAAWyF,EAAMJ,KAAK,GAAGrF,UACzBC,mBAAoBwF,EAAMJ,KAAK,GAAGpF,oBAEnCkF,EAASO,IApBM,2CAAH,0DAuDL0G,GAAU,uCAAE,WAAQnH,EAAOC,GAAf,mBAAAE,EAAA,6DAKhB7F,EALgB,UAKPwF,GALO,wBAOhBM,EAAQ,CACbJ,QACAC,OATqB,kBAYAI,IAAMS,KAAKxG,EAAI8F,GAZf,cAYZW,EAZY,QAehBX,KAfgB,kBAiBhBW,EAAIX,MAjBY,4FAAF,wDA0BPgH,GAAU,uCAAE,WAAQzM,EAAUJ,EAAUC,GAA5B,mBAAA2F,EAAA,6DAKjB7F,EALiB,UAKRwF,GALQ,uBAOjBM,EAAQ,CACbzF,WACAJ,WACAC,UAVsB,kBAaD6F,IAAMS,KAAKxG,EAAI8F,GAbd,cAabW,EAba,QAgBjBX,KAhBiB,kBAkBjBW,EAAIX,MAlBa,4FAAF,0DA2BTiH,GAAW,uCAAE,WAAQC,EAAUvG,GAAlB,mBAAAZ,EAAA,6DAKjB7F,EALiB,UAKRwF,GALQ,0BAOjBM,EAAQ,CACbkH,WACAvG,OATsB,kBAYGV,IAAMS,KAAKxG,EAAI8F,GAZlB,cAYbmH,EAZa,OAerBxG,EAAIX,KAfiB,kBAiBjBmH,EAAQnH,MAjBS,4FAAF,wDA0BXoH,GAAU,uCAAE,WAAQC,GAAR,mBAAAtH,EAAA,6DAKhB7F,EALgB,UAKPwF,GALO,sBAOhBM,EAAQ,CACbqH,iBARqB,kBAWApH,IAAMS,KAAKxG,EAAI8F,GAXf,cAWZW,EAXY,yBAehBA,EAAIX,MAfY,2HAAF,sDCuRhBsH,GAzZG,SAAC3K,GAAY,IAEnBiF,EAASpC,IAAToC,KAFkB,EAMAhF,mBAAS,CACjCgD,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACV0H,WAAW,EACXC,WAAW,EACXC,OAAQ,QAXgB,mBAMnB9L,EANmB,KAMZmG,EANY,OAiBAlF,oBAAS,GAjBT,mBAiBnBU,EAjBmB,KAiBXyE,EAjBW,KAkBtBC,EAAY,kBAAMD,GAASzE,IAlBL,EAoBAV,oBAAS,GApBT,mBAoBrB8K,EApBqB,KAoBZC,EApBY,KAqBtBC,EAAa,kBAAMD,GAAUD,IArBP,EAuBM9K,oBAAS,GAvBf,mBAuBrBqF,EAvBqB,KAuBTC,EAvBS,KAwBtBC,EAAiB,kBAAMD,GAAaD,IAxBd,EA0BQrF,oBAAS,GA1BjB,mBA0BrBiL,EA1BqB,KA0BRC,EA1BQ,KA2BtBC,EAAkB,kBAAMD,GAAcD,IAGzCzF,qBAAW,WAOR0E,GAAUlF,EAAKhC,MAAOgC,EAAK/B,IAAKlD,EAAMqL,iBACtClB,GAAUlF,EAAKhC,MAAOgC,EAAK/B,IAAKlD,EAAMsL,oBAErC,IAIH,IAAM3F,EAAe,SAACC,GAEpB5F,EAAMuL,cAEJ3F,EAAIxE,OAAO0E,KAAKF,EAAIxE,OAAO2E,OAE3BZ,EAAS,eACJnG,EADG,CAEN4L,WAAW,EACXY,SAAU,GACVC,UAAU,MAIVC,EAAgB,SAAC9F,GAErB5F,EAAM2L,eAEJ/F,EAAIxE,OAAO0E,KAAKF,EAAIxE,OAAO2E,OAG3BZ,EAAS,eAAInG,EAAL,CACN6L,WAAW,EACbe,SAAS,GACTC,UAAU,MAIRnF,EAAS,uCAAG,gCAAAtD,EAAA,6DAGV7F,EAHU,UAGDwF,GAHC,kBAKVM,EAAM,CACVJ,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACVvF,QAASqC,EAAM8L,QAAQnO,QACvBC,SAAUoC,EAAM8L,QAAQlO,SACxBJ,SAAUwC,EAAM8L,QAAQjO,cACxBJ,OAAQuC,EAAM8L,QAAQhO,aAXR,kBAeMwF,IAAMS,KAAKxG,EAAK8F,GAftB,UAkBG,OAHTW,EAfM,QAkBR2C,OAlBQ,wBAuBPtB,IACAG,IAKHxF,EAAMqL,gBAAgB,CACpB1N,QAASqC,EAAM8L,QAAQnO,QACvBC,SAAUoC,EAAM8L,QAAQlO,SACxBC,cAAemC,EAAM8L,QAAQjO,cAC7BC,YAAakC,EAAM8L,QAAQhO,cAjCnB,kBAmCHkG,GAnCG,oHAAH,qDAgDb+H,EAAU,uCAAG,gCAAA3I,EAAA,6DAGX7F,EAHW,UAGFwF,GAHE,kBAKXM,EAAM,CACVJ,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACVlF,UAAWgC,EAAMgM,SAAShO,UAC1BC,mBAAoB+B,EAAMgM,SAAS/N,oBATpB,kBAcKqF,IAAMS,KAAKxG,EAAK8F,GAdrB,UAiBE,OAHTW,EAdO,QAiBT2C,OAjBS,wBAsBRsE,IACAG,IAKHpL,EAAMsL,iBAAiB,CACrBtN,UAAWgC,EAAMgM,SAAShO,UAChCC,mBAAoB+B,EAAMgM,SAAS/N,qBA9BpB,kBAgCJ+F,GAhCI,oHAAH,qDAsEZiI,EAAS,uCAAG,sBAAA7I,EAAA,6DAEhB+B,EAAS,eACJnG,EADG,CAENwM,SAAS,GACXC,UAAU,KALM,SAMVpB,GAAYrK,EAAM8L,QAAQlO,SAASoC,EAAM8L,QAAQjO,cAAemC,EAAM8L,QAAQhO,aAAauI,KAA3F,uCACJ,WAAMrC,GAAN,SAAAZ,EAAA,0DACKkD,KAAEC,QAAQvC,KAAQA,EAAIwC,WAAWC,WAAW,mBADjD,gBAIItB,EAAS,eACJnG,EADG,CAENwM,SAAU,sCACVZ,WAAW,EACXE,OAAQ,MACRW,UAAU,KAThB,sCAcQnB,GAAYtK,EAAM8L,QAAQnO,QAASqG,GAAKqC,MAAM,SAAAhD,GAE7CiD,KAAE4D,SAAS7G,IAAkB,oBAATA,EAEzB8B,EAAS,eACJnG,EADG,CAENwM,SAAU,6BACVZ,WAAW,EACXE,OAAQ,MACRW,UAAU,KAIRtG,EAAS,eACJnG,EADG,CAEN4L,WAAW,EACXE,OAAQ,QACVU,SAAS,kBACTC,UAAU,QAhClB,2CADI,uDANU,2CAAH,qDAwDTS,EAAS,uCAAG,sBAAA9I,EAAA,0DACbpD,EAAMgM,SAAShO,UADF,uBAEhBmH,EAAS,eACJnG,EADG,CAEN4M,SAAS,GACXC,UAAU,KALM,SAMVpB,GAAYzK,EAAMgM,SAAS/N,oBAAoBoI,MACnD,SAAArC,GAEKsC,KAAEC,QAAQvC,GAGbmB,EAAS,eACJnG,EADG,CAEN4M,SAAU,sCACVf,WAAW,EACXsB,OAAQ,MACRN,UAAU,KAKJ7H,EAAIoI,SAASC,cACrBlH,EAAS,eACJnG,EADG,CAEN6L,WAAW,EACXsB,OAAQ,QACVP,SAAS,kBACTC,UAAU,QA5BE,6BAmCT1G,EAAS,eACTnG,EADQ,CAEX4M,SAAU,4BAEVrK,MAAO,SAvCK,2CAAH,qDAgDX,OACE,6BACE,kBAACqF,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,8BAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAKZ,kBAACsH,EAAA,EAAD,CAAMC,SAvJM,SAACC,GACjBA,EAAEC,iBACFD,EAAEE,kBAEFX,IACAvB,EAAS,eAAInG,EAAL,CACN4L,WAAW,EACbY,SAAS,QAiJL,kBAAC1E,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,QACtB,kBAAC2H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,2CACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAK,UAAUC,MAAO/F,EAAM8L,QAAQnO,QAAS+J,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAE7I,kBAACgC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,iBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAK,WAAWC,MAAO/F,EAAM8L,QAAQlO,SAAU8J,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAEhJ,kBAACgC,EAAA,EAAD,KACK,kBAACC,EAAA,EAAD,CAAOC,IAAI,iBAAX,gBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAM,gBAAgBC,MAAO/F,EAAM8L,QAAQjO,cAAe6J,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAEtJ,kBAACgC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,mBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAM,cAAcC,MAAO/F,EAAM8L,QAAQhO,YAAa4J,SAAU/B,EAAcgC,UAAQ,EAACC,UAAWtC,KAEhJ,kBAACgC,EAAA,EAAD,KACK3G,EACF,kBAACkG,EAAA,EAAD,KACA,kBAACgB,EAAA,EAAD,CAAQtG,MAAM,UAAUuG,KAAK,KAAKC,OAAK,EAACC,QAAM,EAAEzH,QAAW,WAAKiF,IAAkBH,MAAlF,SAFU,mBA7Cb,WAAO,OAAO,kBAACwB,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAASqC,MAAM,UAAUwG,OAAK,EAACD,KAAK,KAAKvH,QAAW0L,GAAjE,SAA+F,kBAACnF,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAAS6G,MAAM,OAAOgC,OAAK,EAACH,SAAU5I,EAAM4L,UAAWjL,UAAU,oBAA9E,cA6C/H,SAOpB,kBAACkH,EAAA,EAAD,KACM,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP/H,EAAMyM,SAAW,kBAACxD,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,GACtE,kBAACrB,EAAA,EAAD,CAAKC,GAAG,QAAR,IAAgB,wBAAItF,MAAQ,CAAEF,MAAOvC,EAAM8L,SAAU9L,EAAMwM,aAMxE,kBAAC5E,EAAA,EAAD,CAAWjH,UAAU,QACrB,kBAACkH,EAAA,EAAD,KACQ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,8BAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAMpB,kBAACsH,EAAA,EAAD,CAAMC,SAlMa,SAACC,GAClBA,EAAEC,iBACFD,EAAEE,kBACF0E,IACA5G,EAAS,eAAInG,EAAL,CACN6L,WAAW,EACbe,SAAS,QA6LX,kBAAC9E,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,QACtB,kBAAC2H,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAK,YAAYC,MAAO/F,EAAMgM,SAAShO,UAAW0J,SAAUgE,EAAe9D,UAAWsD,EAAavD,UAAQ,KAE3J,kBAACL,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,uCACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAemG,KAAK,qBAAqBC,MAAO/F,EAAMgM,SAAS/N,mBAAoByJ,SAAUgE,EAAe/D,UAAQ,EAACC,UAAWsD,KAG/J,kBAAC5D,EAAA,EAAD,KACKyD,EACF,kBAAClE,EAAA,EAAD,KACA,kBAACgB,EAAA,EAAD,CAAQtG,MAAM,UAAUuG,KAAK,KAAKC,OAAK,EAACC,QAAM,EAAEzH,QAAW,WAAK6K,IAAmBH,MAAnF,SAFW,mBA7FF,WAAO,OAAO,kBAACpE,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAASqC,MAAM,UAAUwG,OAAK,EAACD,KAAK,KAAKvH,QAAW2L,GAAjE,SAA+F,kBAACpF,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAAS6G,MAAM,OAAOgC,OAAK,EAACH,SAAU5I,EAAM6L,UAAWlL,UAAU,oBAA9E,cA6F1I,SAOhB,kBAACkH,EAAA,EAAD,KACa,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP/H,EAAM6M,SAAW,kBAAC5D,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,GACtE,kBAACrB,EAAA,EAAD,CAAKC,GAAG,QAAR,IAAgB,wBAAItF,MAAQ,CAACF,MAAOvC,EAAMmN,SAAUnN,EAAM4M,e,UC9Y1DU,GAAe,uCAAG,WAAOrJ,EAAOC,EAAKC,GAAnB,qBAAAC,EAAA,6DACvB7F,EADuB,UACdwF,GADc,WAGrBM,EAAO,CACTJ,QACAC,OALuB,SAQTI,IAAMC,IAAIhG,EAAI,CAACiG,OAAOH,IARb,QAQvBI,EARuB,QAWjBJ,KAAK,KAGLK,EAAU,CACd/E,OAAQ8E,EAAMJ,KAAK,GAAG1E,OACtBC,SAAU6E,EAAMJ,KAAK,GAAGzE,UAGxBuE,EAASO,IAnBY,2CAAH,0DA2BXE,GAAS,uCAAG,WAAOjF,EAAQuE,GAAf,mBAAAE,EAAA,6DACjB7F,EADiB,UACRwF,GADQ,0BAKjBM,EAAO,CACT1E,SACAuE,OAPmB,SAUDI,IAAMS,KAAKxG,EAAI8F,GAVd,cAUjBkJ,EAViB,yBAYhBA,GAZgB,2CAAH,wDC+PXC,GAvRA,SAACxM,GAAY,IAAD,EAEa6C,IAA5BoC,EAFe,EAEfA,KAAMwH,EAFS,EAETA,iBAFS,EAMGxM,mBAAS,CACjCgD,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACVrD,SAAS,EACTqF,WAAW,EACX0F,WAAW,EACXhM,SAAS,GACT8N,aAAa,EACbC,WAAW,KAdU,mBAMhB3N,EANgB,KAMTmG,EANS,OAoBGlF,oBAAS,GApBZ,mBAoBhBU,EApBgB,KAoBRyE,EApBQ,KAqBnBC,EAAY,kBAAMD,GAASzE,IArBR,EAuBSV,oBAAS,GAvBlB,mBAuBlBqF,EAvBkB,KAuBNC,EAvBM,KAwBnBC,EAAiB,kBAAMD,GAAaD,IAGvCG,qBAAW,WAOV6G,GAAgBrH,EAAKhC,MAAOgC,EAAK/B,IAAKlD,EAAM0F,iBAEzC,IAEJ,IAAMkH,EAAgB,uCAAG,+CAAAxJ,EAAA,yDAAiByJ,EAAjB,EAAQzL,OAASyL,MAGrC7M,EAAM6F,YAAY,WAAW,IAC7BV,EAAS,eAAKnG,EAAN,CAAc0N,aAAa,EAAQC,WAAW,QACxCE,EAAMC,OALA,kEAQSD,EART,UAQb/E,EARa,EAQbA,KAAMhC,EARO,EAQPA,KAAM5G,EARC,EAQDA,KACL,MAGZ4I,EAHY,KAGe,qBAAT5I,GAZA,wBAad3B,EAbc,UAaLwF,GAbK,4BAcA0J,IAdA,QAcdtI,EAdc,OAgBd4I,EAAU,CACdC,cAAc,UAAD,OAAY7I,IAI7BnE,EAAM6F,YAAY,WAAWC,GAC3BX,EAAS,eAAKnG,EAAN,CAAa0N,aAAa,EAAO1G,QAAS,OAC5CiH,EAAW,IAAIC,UACdC,OAAO,aAAcN,EAAM,IACpCI,EAASE,OAAO,MAAOlI,EAAK/B,KAC5BI,IAAMS,KAAKxG,EAAK0P,EAAU,CAACF,YAAU1G,MAAK,SAAA+G,GACjCA,GAAKjI,EAAS,eAAKnG,EAAN,CAAa4L,WAAW,EAAO8B,aAAa,EAAOC,WAAW,SA3B9D,wBAgCpBxH,EAAS,eAAKnG,EAAN,CAAaJ,SAAU,GAAI8N,aAAa,EAAO1G,QAAS,GAAI2G,WAAW,gDAAiD/B,WAAW,KAhCvH,4CAAH,sDAyDf3E,EAAQ,uCAAG,4BAAA7C,EAAA,2DAETzE,EAASqB,EAAMP,SAASd,QAFf,uBAIfwG,EAAS,eACJnG,EADG,CAENgH,QAAQ,GACVnG,SAAS,KAPM,SAQT+D,GAAWjF,EAAQK,EAAMkE,KAAKmD,MAClC,SAAArC,GAEKsC,KAAEC,QAAQvC,EAAIX,MAGf8B,EAAS,eACJnG,EADG,CAENgH,QAAS,sCACTd,WAAW,EACX3D,MAAO,MACP1B,SAAS,KAMXsF,EAAS,eACNnG,EADK,CAERqO,UAAWrJ,EAAIX,KACf6B,WAAW,EACX3D,MAAO,QACTyE,QAAQ,mBACRnG,SAAS,QA/BE,6BAoCLsF,EAAS,eACZnG,EADW,CAEdgH,QAAS,yBAETzE,MAAO,SAxCI,2CAAH,qDA8CRmF,EAAS,uCAAG,gCAAAtD,EAAA,6DAGV7F,EAHU,UAGDwF,GAHC,WAKVM,EAAM,CACVJ,MAAOgC,EAAKhC,MACZC,IAAK+B,EAAK/B,IACVvE,OAAQqB,EAAMP,SAASd,OACvBC,SAAUoB,EAAMP,SAASb,SACzByO,UAAWrO,EAAMqO,WAVH,kBAaM/J,IAAMS,KAAKxG,EAAK8F,GAbtB,UAgBG,OAHTW,EAbM,QAgBR2C,OAhBQ,wBAmBPtB,IACAG,IAMHxF,EAAM0F,cAAc,CAAC/G,OAAQqB,EAAMP,SAASd,OAC1CC,SAAUoB,EAAMP,SAASb,WA3BjB,kBA+BHoF,GA/BG,oHAAH,qDA+DjB,OAEI,kBAAC4C,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,gCAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAGZ,kBAACsH,EAAA,EAAD,CAAMC,SAtCU,SAACC,GACjBA,EAAEC,iBACFD,EAAEE,kBACFX,IACAvB,EAAS,eAAInG,EAAL,CACNkG,WAAW,EACbc,QAAQ,QAiCR,kBAACc,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACO,EAAA,EAAD,KACR,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,mBACI,kBAACC,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAe+E,GAAG,SAASoB,KAAK,SAAUC,MAAO/F,EAAMP,SAASd,OAAQ+I,SArJ9E,SAAC9B,GAErB5F,EAAM6F,YAEHD,EAAIxE,OAAO0E,KAAKF,EAAIxE,OAAO2E,OAG3BZ,EAAS,eACJnG,EADG,CAENkG,WAAW,EACXc,QAAS,GACTnG,SAAS,MA2IX+H,UAAWtC,EAAYqC,UAAQ,KAEzC,kBAACL,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,+BACQ,kBAAC8F,GAAA,EAAD,CACEpO,KAAK,OACLwF,GAAG,WACH/E,UAAU,eACVmG,KAAK,aACLyH,MAAOvN,EAAMP,SAASb,UAAY,mBAClC8I,SAAUkF,EACVY,QAASxO,EAAM0N,YACf/E,UAAQ,EACRC,UAAWtC,EACX/E,QAAS,SAACkN,GACRA,EAAMrM,OAAO2E,MAAQ,KACrBZ,EAAS,eAAInG,EAAL,CACR2N,WAAY,GACZ3G,QAAQ,SAIV,kBAACc,EAAA,EAAD,CAAKC,GAAG,OAAOpH,UAAU,aAAzB,IAAsC,wBAAI8B,MAAQ,CAACF,MAAOvC,EAAMuC,QAASvC,EAAM2N,cAG3E,kBAACrF,EAAA,EAAD,CAAW3H,UAAU,QAChBgB,EACF,kBAACkG,EAAA,EAAD,KACA,kBAACgB,EAAA,EAAD,CAAQtG,MAAM,UAAUuG,KAAK,KAAKC,OAAK,EAACC,QAAM,EAAEzH,QAAW,WAAKiF,IAAkBH,MAAlF,SAFU,mBAvDV,WAAO,OAAO,kBAACwB,EAAA,EAAD,KAAM,kBAACC,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAASqC,MAAM,UAAUwG,OAAK,EAACD,KAAK,KAAKvH,QAAW0F,EAAU2B,SAAU5I,EAAM4L,WAA3F,SAAyH,kBAAC9D,EAAA,EAAD,CAAKC,GAAI,KAAI,kBAACc,EAAA,EAAD,CAAQ3I,KAAK,SAAS6G,MAAM,OAAOgC,OAAK,EAACH,SAAU5I,EAAMkG,UAAWvF,UAAU,oBAA9E,cAuD7J,SAQpB,kBAACkH,EAAA,EAAD,KACM,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP/H,EAAMa,QAAU,kBAACoI,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,GACrE,kBAACrB,EAAA,EAAD,CAAKC,GAAG,QAAR,IAAgB,wBAAItF,MAAQ,CAACF,MAAOvC,EAAMuC,QAASvC,EAAMgH,a,iECzCrD0H,G,8MAjOfC,YAAa,E,EAEX3O,MAAQ,CACNwF,QAAS,GACTJ,SAAS,GACTwJ,KAAM,GACNC,eAAgB,GAChBC,KAAM,GACNpJ,GAAI,GACJsB,QAAS,GACT4B,UAAU,EACVmG,KAAK,GACLlO,SAAS,EACTsE,MAAM,GACN2B,KAAK,I,EA+DPkI,qBAAuB,WAGvB,IAAMC,EAAmB,EAAKjP,MAAM6O,eAAeK,QAAO,SAAAC,GAAC,MAAiB,cAAbA,EAAExH,UAAwByH,QAAO,SAAUhL,EAAGiL,GAAK,OAAOjL,EAAEkL,WAAaD,EAAEC,WAAclL,EAAIiL,KAM/IP,EAAOS,KAAWN,EAAiBK,WAAY,cAC/CP,EAAOQ,KAAWN,EAAiBK,WAAY,aAGnD,EAAKnJ,SAAS,CAAC2I,KAAMA,EACNC,KAAMA,EACLrJ,GAAIuJ,EAAiBvJ,M,EAK9CiB,a,uCAAe,WAAOwB,GAAP,iBAAA/D,EAAA,sDAEU,OAAnB+D,EAAE/F,OAAO2E,QACPyI,EAAY,EAAKxP,MAAMwF,QAAQ3D,KAAI,SAAA4N,GAAC,MAAK,CAC7C3I,KAAM2I,EAAE3I,KACRpB,GAAI+J,EAAE/J,OAGHgK,EAASF,EAAUN,QAAO,SAAAO,GAAC,OAAKA,EAAE/J,KAAOyC,EAAE/F,OAAO2E,SAGvD,EAAKZ,SAAS,CAAEf,SAAU+C,EAAE/F,OAAO2E,MAClBD,KAAM4I,EAAO,GAAG5I,OAGhC,EAAK6I,eAfO,2C,wDA0BfzH,S,uCAAW,WAAOC,GAAP,SAAA/D,EAAA,sDACT+D,EAAEC,iBAEF,EAAKjC,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,8BAAAuD,EAAA,sEAETc,GAAmB,EAAKlE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,MAAO,EAAKnF,MAAMoF,UAFxE,cAE5BwK,EAF4B,OAIpC,EAAKzJ,SAAS,CAAC0I,eAAgBe,IAI/B,EAAKD,cAGL,EAAKX,uBAX+B,UAaZvJ,GAAa,EAAKzE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,MAAO,EAAKnF,MAAM0F,IAb/D,QAa/BmK,EAb+B,OAehC,EAAK1J,SACH,CAACyI,KAAMiB,EACRhP,SAAS,IAIX,EAAKsF,SACJ,CACDtF,SAAS,IAvBwB,6CAHvB,2C,qIAvGX,IAAMiP,EAAeC,KAAK/P,MAAM4I,SAChCmH,KAAK5J,SAAS,CAAEyC,UAAWkH,M,+JAQzBC,KAAKpB,YAAa,EAGpBoB,KAAK5J,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,gCAAAuD,EAAA,sEAGTa,GAAS,EAAKjE,MAAMiD,MAAM,EAAKjD,MAAMkD,KAH5B,YAGvBiB,EAHuB,QAOnBsC,WAAW,kBAPQ,gBAQ5B,EAAKtB,SAAS,CAACtF,SAAS,EACtBmG,QAAS,2DATiB,2BAexB,EAAK2H,WAfmB,wBAgB7B,EAAKxI,SAAS,CAAChB,UAhBc,UAmBFI,GAAiB,EAAKvE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,OAnB3D,QAmBpB6K,EAnBoB,OAqBtB1I,KAAE4D,SAAS8E,EAAU3L,MACvB,EAAK8B,SAAS,CAACtF,SAAS,EACtBmG,QAASgJ,EAAU3L,QAGlB4L,EAAcD,EAAU3L,KAAKxC,KAAK,SAAAqO,GAAQ,MAAO,CAACpJ,KAAMoJ,EAAGpJ,KAAMpB,GAAIwK,EAAGxK,OAE5E,EAAKS,SAAS,CAACX,QAASyK,EACvBpP,SAAS,KA7Be,6C,mJAyClCkP,KAAKpB,YAAa,I,+BAwFhB,IAAI9N,EAAUkP,KAAK/P,MAAMa,QACvB,OAEE,kBAAC+G,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,sDAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAOZ,kBAACsH,EAAA,EAAD,CAAMC,SAAU6H,KAAK7H,UAErB,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACO,EAAA,EAAD,KAEF,kBAACG,EAAA,EAAD,CAAOvI,KAAM,SAASS,UAAU,oBAAoB+H,SAAUqH,KAAKpJ,aAAciC,SAAUmH,KAAK/P,MAAM4I,UACpG,4BAAQ7B,MAAM,MAAd,sBACDgJ,KAAK/P,MAAMwF,QAAQ3D,KAAI,SAAC4N,GAAD,OAAO,4BAAQzN,IAAKyN,EAAE/J,GAAIqB,MAAO0I,EAAE/J,GAAIoB,KAAM2I,EAAE3I,MAAO2I,EAAE3I,WAIhF,yBAAKnG,UAAU,aACf,kBAACkI,EAAA,EAAD,CAAQ3I,KAAK,SAAUiJ,QAAQ,UAAUL,KAAK,KAAKC,OAAK,EAACH,UAAWmH,KAAK/P,MAAM4I,UAA/E,yBAKC,kBAACf,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eACxBE,EAAU,kBAACoI,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,GAChF4G,KAAK/P,MAAM4O,OAASmB,KAAK/P,MAAM4I,SAAY,kBAACC,EAAA,EAAD,CAASM,QAAQ,eAAeL,KAAK,KAAKC,OAAK,EAACoH,KAAMJ,KAAK/P,MAAM4O,MAAjE,oBAAqFmB,KAAK/P,MAAM8G,KAAhG,oBAAgHiJ,KAAK/P,MAAM8O,KAA3H,eAAsIiB,KAAK/P,MAAM+O,OAAkB,KAQhN,kBAAClH,EAAA,EAAD,KACA,4BAAKkI,KAAK/P,MAAMgH,e,GAzNDoJ,a,SCwPJC,G,8MAvPf1B,YAAa,E,EACX3O,MAAQ,CACNwF,QAAS,GACTJ,SAAS,GACTwJ,KAAM,GACNE,KAAM,GACNpJ,GAAI,GACJsB,QAAS,GACT4B,UAAU,EACVmG,KAAK,GACLlO,SAAS,EACTsE,MAAM,GACNmL,YAAW,EACXC,MAAO,YACPC,SAAS,EACTC,cAAe,GACfC,aAAc,GACdC,MAAO,GACP9K,QAAQ,GACRK,WAAU,EACVa,MAAM,GACNxE,MAAM,O,EAkERqO,iBAAkB,SAAChK,GAEjB,GAAIA,EAAIxE,OAAOoO,QAAS,CAEtB,IAAMK,EAAc,EAAK7Q,MAAMwF,QAEhC,EAAKW,SAAS,CAACuK,aAAcG,EAC5BN,MAAO,qBAGP,EAAKpK,SAAS,CAACuK,aAAc,GAC3BH,MAAO,e,EAMbO,eAAiB,SAAC3I,EAAGsH,GACnB,IAAMiB,EAAY,aAAO,EAAK1Q,MAAM0Q,cAEpC,GAAGvI,EAAE/F,OAAOoO,QACXE,EAAaK,KAAKtB,OACZ,CACL,IAAM1N,EAAQ2O,EAAaM,WAAU,SAACC,GAAD,OAAQA,EAAGvL,KAAO+J,EAAE/J,MACzDgL,EAAaQ,OAAOnP,EAAO,GAE7B,EAAKoE,SAAS,CAACuK,eACb1J,QAAQ,M,EAOZkB,S,uCAAW,WAAOC,GAAP,SAAA/D,EAAA,sDACT+D,EAAEC,iBAEE,EAAKpH,MAAM8L,QAAQlO,SAEpB,EAAKoB,MAAM0Q,aAAa5C,OAAO,GAGlC,EAAK6B,cACL,EAAKxJ,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,sBAAAuD,EAAA,sFAAAA,EAAA,MAGjB,sBAAAA,EAAA,sEACC+M,QAAQC,IAAI,EAAKpR,MAAM0Q,aAAa7O,IAAxB,uCAA4B,WAAMC,GAAN,SAAAsC,EAAA,sEAAoBc,GAAmB,EAAKlE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,MAAOrD,EAAK4D,IAA/F,mFAA5B,kCAAAqK,KAAA,iBADb,mFAHiB,qDAUhCsB,GAAUhK,MAAK,SAAAhD,GAAuC,OAAOA,EAAKxC,KAAI,SAAAC,GAAI,OAAIA,EAAKoN,QAAO,SAAAC,GAAC,MAAiB,cAAbA,EAAExH,UAAwByH,QAAO,SAAUhL,EAAGiL,GAAK,OAAOjL,EAAEkL,WAAaD,EAAEC,WAAclL,EAAIiL,WAC3LhI,MAAK,SAAAhD,GAAwC,EAAK8B,SAAS,CAAEtF,SAAS,EACb4P,cAAepM,OAZzC,6CAetB,EAAK8B,SAAS,CAAC5D,MAAM,MAC3ByE,QAAS,0CACN,EAAKb,SAAS,CACnB5D,MAAM,MACNyE,QAAS,4CACL,EAAKhH,MAAMkG,WAAW,EAAKoL,sBA7BxB,2C,wDAmCZC,W,sBAAa,4BAAAnN,EAAA,6DACZ,EAAKkN,sBADO,SAEUlG,GAAW,EAAKpK,MAAMiD,MAAM,EAAKjD,MAAMkD,KAFjD,OAEN2B,EAFM,OAIZ,EAAKM,SAAS,CAAEtF,SAAS,EAAMgF,WAA/B,sBAAyC,sBAAAzB,EAAA,sFAAAA,EAAA,MAG1B,sBAAAA,EAAA,sEACD+M,QAAQC,IAAI,EAAKpR,MAAMyQ,cAAc5O,IAAzB,uCAA6B,WAAMC,GAAN,SAAAsC,EAAA,sEAAoBwB,GAAc,EAAK5E,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAI,EAAKlE,MAAMmF,MAAOrD,EAAK4D,GAAI,EAAK1F,MAAM6F,SAAxG,mFAA7B,kCAAAkK,KAAA,iBADX,mFAH0B,qDAO3CsB,GAAUhK,MAAK,SAAAhD,GAGb,EAAK8B,SAAS,CAAEtF,SAAS,EACzB8P,MAAMtM,EACN9B,MAAO,QACNyE,QAAQ,iDAMX,EAAK2I,cAnBsC,4CAJ7B,2C,+EA9HZ,IAAMG,EAAeC,KAAK/P,MAAM4I,SAChCmH,KAAK5J,SAAS,CAAEyC,UAAWkH,M,4CAI7B,IAAMA,EAAeC,KAAK/P,MAAMkG,UAChC6J,KAAK5J,SAAS,CAAED,WAAY4J,M,+JAQ5B3E,GAAU4E,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAMqL,iBACvD0D,KAAKpB,YAAa,EAClBoB,KAAK5J,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,gCAAAuD,EAAA,sEAGZa,GAAS,EAAKjE,MAAMiD,MAAM,EAAKjD,MAAMkD,KAHzB,YAG1BiB,EAH0B,QAKtBsC,WAAW,kBALW,gBAM9B,EAAKtB,SAAS,CAACtF,SAAS,EACtB0B,MAAO,MACPyE,QAAS,2DARmB,2BAa1B,EAAK2H,WAbqB,wBAc7B,EAAKxI,SAAS,CAAChB,UAdc,UAgBJI,GAAiB,EAAKvE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,OAhBzD,QAgBtB6K,EAhBsB,OAiBxB1I,KAAE4D,SAAS8E,EAAU3L,MACvB,EAAK8B,SAAS,CAACtF,SAAS,EACtBmG,QAASgJ,EAAU3L,QAGhB4L,EAAcD,EAAU3L,KAAKxC,KAAK,SAAAqO,GAAQ,MAAO,CAACpJ,KAAMoJ,EAAGpJ,KAAMpB,GAAIwK,EAAGxK,OAE5E,EAAKS,SAAS,CAACX,QAASyK,EACvBpP,SAAS,KAzBe,6C,mJAsC9BkP,KAAKpB,YAAa,I,+BAoGR,IAAD,OAGL9N,EAAUkP,KAAK/P,MAAMa,QACvB,OACE,kBAAC+G,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,uDAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIZ,kBAACsH,EAAA,EAAD,CAAMC,SAAU6H,KAAK7H,UACrB,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACO,EAAA,EAAD,KAEA,kBAACgG,GAAA,EAAD,CAAapO,KAAM,WAAWwF,GAAI,WAAWgD,SAAUqH,KAAKa,iBAAkBrC,MAAOwB,KAAK/P,MAAMuQ,QACjG,6BACER,KAAK/P,MAAMwF,QAAQ3D,KAAI,SAAC4N,GAAD,OAAQ,kBAACnB,GAAA,EAAD,CAAapO,KAAM,WACnD8B,IAAKyN,EAAE/J,GAAIA,GAAI+J,EAAE/J,GAAI6I,MAAOkB,EAAE3I,KAAMC,MAAO,EAAK/G,MAAM+G,MACtDyJ,QAAS,EAAKxQ,MAAM0Q,aAAac,MAAK,SAACP,GAAD,OAAQA,EAAGvL,KAAO+J,EAAE/J,MACzDgD,SAAU,SAACP,GAAD,OAAO,EAAK2I,eAAe3I,EAAGsH,UAIzC,yBAAK9O,UAAU,aACf,kBAACkI,EAAA,EAAD,CAAQ3I,KAAK,SAASqC,MAAM,OAAO4G,QAAQ,UAAUL,KAAK,KAAKC,OAAK,EAACH,UAAWmH,KAAK/P,MAAM4I,UAA3F,uBAKF,kBAACf,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eACxBE,EAAU,kBAACoI,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,KAIlF,kBAACrB,EAAA,EAAD,CAAKC,GAAG,KACNgI,KAAK/P,MAAMyQ,cAAc3C,OAAO,IAAMiC,KAAK/P,MAAM4I,SAAY,kBAACC,EAAA,EAAD,CAASM,QAAQ,eAAeL,KAAK,KAAKC,OAAK,EAAExH,QAASwO,KAAKwB,WAAY3I,SAAUmH,KAAK/P,MAAMkG,WAAhG,gBAAkI,GACjM,kBAAC2B,EAAA,EAAD,KACA,wBAAIlH,UAAU,OAAO8B,MAAO,CAACF,MAAMwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMgH,gB,GA7O1CoJ,aC6ObC,G,8MA3Of1B,YAAa,E,EAEX3O,MAAQ,CACNwF,QAAS,GACTJ,SAAS,GACTwJ,KAAM,GACNE,KAAM,GACNpJ,GAAI,GACJsB,QAAS,GACT4B,UAAU,EACVmG,KAAK,GACLlO,SAAS,EACTsE,MAAM,GACNmL,YAAW,EACXC,MAAO,YACPC,SAAS,EACTC,cAAe,GACfC,aAAc,GACdC,MAAO,GACPpO,MAAM,MACN2D,WAAU,G,EAyDZ0K,iBAAkB,SAAChK,GAEjB,GAAIA,EAAIxE,OAAOoO,QAAS,CAEtB,IAAMK,EAAc,EAAK7Q,MAAMwF,QAEhC,EAAKW,SAAS,CAACuK,aAAcG,EAC5BN,MAAO,cACPvJ,QAAQ,UAGR,EAAKb,SAAS,CAACuK,aAAc,GAC3BH,MAAO,YACPvJ,QAAQ,M,EAKd8J,eAAiB,SAAC3I,EAAGsH,GACnB,IAAMiB,EAAY,aAAO,EAAK1Q,MAAM0Q,cAEpC,GAAGvI,EAAE/F,OAAOoO,QACXE,EAAaK,KAAKtB,OACZ,CACL,IAAM1N,EAAQ2O,EAAaM,WAAU,SAACC,GAAD,OAAQA,EAAGvL,KAAO+J,EAAE/J,MACzDgL,EAAaQ,OAAOnP,EAAO,GAE7B,EAAKoE,SAAS,CAACuK,eACb1J,QAAQ,M,EAOZkB,S,uCAAW,WAAOC,GAAP,SAAA/D,EAAA,sDACT+D,EAAEC,iBACE,EAAKpH,MAAMgM,SAAS/N,mBACpB,EAAKe,MAAM0Q,aAAa5C,OAAO,GACnC,EAAK6B,cACL,EAAKxJ,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,sBAAAuD,EAAA,sFAAAA,EAAA,MAGjB,sBAAAA,EAAA,sEACC+M,QAAQC,IAAI,EAAKpR,MAAM0Q,aAAa7O,IAAxB,uCAA4B,WAAMC,GAAN,SAAAsC,EAAA,sEAAoBc,GAAmB,EAAKlE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,MAAOrD,EAAK4D,IAA/F,mFAA5B,kCAAAqK,KAAA,iBADb,mFAHiB,qDAUhCsB,GAAUhK,MAAK,SAAAhD,GAAuC,OAAOA,EAAKxC,KAAI,SAAAC,GAAI,OAAIA,EAAKoN,QAAO,SAAAC,GAAC,MAAiB,cAAbA,EAAExH,UAAwByH,QAAO,SAAUhL,EAAGiL,GAAK,OAAOjL,EAAEkL,WAAaD,EAAEC,WAAclL,EAAIiL,WAC3LhI,MAAK,SAAAhD,GAAwC,EAAK8B,SAAS,CAAEtF,SAAS,EACb4P,cAAepM,OAZzC,6CAepB,EAAK8B,SAAS,CACtB5D,MAAM,MACNyE,QAAS,0CAEN,EAAKb,SAAS,CACnB5D,MAAM,MACNyE,QAAS,4CACL,EAAKhH,MAAMkG,WAAW,EAAKoL,sBA3BxB,2C,wDA+BZC,W,sBAAa,sBAAAnN,EAAA,sDACZ,EAAKkN,sBAEL,EAAKnL,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,sBAAAuD,EAAA,sFAAAA,EAAA,MAGjB,sBAAAA,EAAA,sEACD+M,QAAQC,IAAI,EAAKpR,MAAMyQ,cAAc5O,IAAzB,uCAA6B,WAAMC,GAAN,SAAAsC,EAAA,sEAAoB0B,GAAc,EAAK9E,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAI,EAAKlE,MAAMmF,MAAOrD,EAAK4D,IAAzF,mFAA7B,kCAAAqK,KAAA,iBADX,mFAHiB,qDAOlCsB,GAAUhK,MAAK,SAAAhD,GAGb,EAAK8B,SAAS,CAAEtF,SAAS,EACzB8P,MAAMtM,EACN9B,MAAO,QACPyE,QAAQ,iDAMV,EAAK2I,cAnB6B,4CAHpB,2C,+EAtHZ,IAAMG,EAAeC,KAAK/P,MAAM4I,SAChCmH,KAAK5J,SAAS,CAAEyC,UAAWkH,M,4CAI7B,IAAMA,EAAeC,KAAK/P,MAAMkG,UAChC6J,KAAK5J,SAAS,CAAED,WAAY4J,M,+JAM5B3E,GAAU4E,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAMsL,kBACvDyD,KAAKpB,YAAa,EAClBoB,KAAK5J,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,gCAAAuD,EAAA,sEAGZa,GAAS,EAAKjE,MAAMiD,MAAM,EAAKjD,MAAMkD,KAHzB,YAG1BiB,EAH0B,QAKtBsC,WAAW,kBALW,gBAM9B,EAAKtB,SAAS,CAACtF,SAAS,EACtB0B,MAAM,MACNyE,QAAS,2DARmB,2BAWtB,EAAK2H,WAXiB,wBAY7B,EAAKxI,SAAS,CAAChB,UAZc,UAeJI,GAAiB,EAAKvE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,OAfzD,QAetB6K,EAfsB,OAgBxB1I,KAAE4D,SAAS8E,EAAU3L,MACvB,EAAK8B,SAAS,CAACtF,SAAS,EACtBmG,QAASgJ,EAAU3L,QAGhB4L,EAAcD,EAAU3L,KAAKxC,KAAK,SAAAqO,GAAQ,MAAO,CAACpJ,KAAMoJ,EAAGpJ,KAAMpB,GAAIwK,EAAGxK,OAE5E,EAAKS,SAAS,CAACX,QAASyK,EACvBpP,SAAS,KAxBe,6C,mJAmC9BkP,KAAKpB,YAAa,I,+BAgGR,IAAD,OAEL9N,EAAUkP,KAAK/P,MAAMa,QACvB,OACE,kBAAC+G,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,uDAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAMZ,kBAACsH,EAAA,EAAD,CAAMC,SAAU6H,KAAK7H,UACrB,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACO,EAAA,EAAD,KAEA,kBAACgG,GAAA,EAAD,CAAapO,KAAM,WAAWwF,GAAI,WAAWgD,SAAUqH,KAAKa,iBAAkBrC,MAAOwB,KAAK/P,MAAMuQ,QACjG,6BACER,KAAK/P,MAAMwF,QAAQ3D,KAAI,SAAC4N,GAAD,OAAQ,kBAACnB,GAAA,EAAD,CAAapO,KAAM,WACnD8B,IAAKyN,EAAE/J,GAAIA,GAAI+J,EAAE/J,GAAI6I,MAAOkB,EAAE3I,KAC9B0J,QAAS,EAAKxQ,MAAM0Q,aAAac,MAAK,SAACP,GAAD,OAAQA,EAAGvL,KAAO+J,EAAE/J,MACzDgD,SAAU,SAACP,GAAD,OAAO,EAAK2I,eAAe3I,EAAGsH,UAIzC,yBAAK9O,UAAU,aACf,kBAACkI,EAAA,EAAD,CAAQ3I,KAAK,SAAUqC,MAAM,OAAO4G,QAAQ,UAAUL,KAAK,KAAKC,OAAK,EAACH,UAAWmH,KAAK/P,MAAM4I,UAA5F,uBAKF,kBAACf,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eACxBE,EAAU,kBAACoI,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,KAIlF,kBAACrB,EAAA,EAAD,CAAKC,GAAG,KACNgI,KAAK/P,MAAMyQ,cAAc3C,OAAO,IAAMiC,KAAK/P,MAAM4I,SAAY,kBAACC,EAAA,EAAD,CAASM,QAAQ,eAAeL,KAAK,KAAKC,OAAK,EAAExH,QAASwO,KAAKwB,WAAY3I,SAAUmH,KAAK/P,MAAMkG,WAAhG,gBAAkI,GAEjM,kBAAC2B,EAAA,EAAD,KACA,wBAAIlH,UAAU,OAAO8B,MAAO,CAACF,MAAMwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMgH,gB,GAlO1CoJ,aC6ObqB,G,8MA3Of9C,YAAa,E,EAEX3O,MAAQ,CACNwF,QAAS,GACTJ,SAAS,GACTwJ,KAAM,GACNE,KAAM,GACNpJ,GAAI,GACJsB,QAAS,GACT4B,UAAU,EACVmG,KAAK,GACLlO,SAAS,EACTsE,MAAM,GACNmL,YAAW,EACXC,MAAO,YACPC,SAAS,EACTC,cAAe,GACfC,aAAc,GACdC,MAAO,GACPpO,MAAM,MACN2D,WAAU,G,EAyDZ0K,iBAAkB,SAAChK,GAEjB,GAAIA,EAAIxE,OAAOoO,QAAS,CAEtB,IAAMK,EAAc,EAAK7Q,MAAMwF,QAEhC,EAAKW,SAAS,CAACuK,aAAcG,EAC5BN,MAAO,cACPvJ,QAAQ,UAGR,EAAKb,SAAS,CAACuK,aAAc,GAC3BH,MAAO,YACPvJ,QAAQ,M,EAKd8J,eAAiB,SAAC3I,EAAGsH,GACnB,IAAMiB,EAAY,aAAO,EAAK1Q,MAAM0Q,cAEpC,GAAGvI,EAAE/F,OAAOoO,QACXE,EAAaK,KAAKtB,OACZ,CACL,IAAM1N,EAAQ2O,EAAaM,WAAU,SAACC,GAAD,OAAQA,EAAGvL,KAAO+J,EAAE/J,MACzDgL,EAAaQ,OAAOnP,EAAO,GAE7B,EAAKoE,SAAS,CAACuK,eACb1J,QAAQ,M,EAOZkB,S,uCAAW,WAAOC,GAAP,SAAA/D,EAAA,sDACT+D,EAAEC,iBACE,EAAKpH,MAAMP,SAASd,OACpB,EAAKK,MAAM0Q,aAAa5C,OAAO,GACnC,EAAK6B,cACL,EAAKxJ,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,sBAAAuD,EAAA,sFAAAA,EAAA,MAGjB,sBAAAA,EAAA,sEACC+M,QAAQC,IAAI,EAAKpR,MAAM0Q,aAAa7O,IAAxB,uCAA4B,WAAMC,GAAN,SAAAsC,EAAA,sEAAoBc,GAAmB,EAAKlE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,MAAOrD,EAAK4D,IAA/F,mFAA5B,kCAAAqK,KAAA,iBADb,mFAHiB,qDAUhCsB,GAAUhK,MAAK,SAAAhD,GAAuC,OAAOA,EAAKxC,KAAI,SAAAC,GAAI,OAAIA,EAAKoN,QAAO,SAAAC,GAAC,MAAiB,cAAbA,EAAExH,UAAwByH,QAAO,SAAUhL,EAAGiL,GAAK,OAAOjL,EAAEkL,WAAaD,EAAEC,WAAclL,EAAIiL,WAC3LhI,MAAK,SAAAhD,GAAwC,EAAK8B,SAAS,CAAEtF,SAAS,EACb4P,cAAepM,OAZzC,6CAepB,EAAK8B,SAAS,CACtB5D,MAAM,MACNyE,QAAS,0CAEN,EAAKb,SAAS,CACnB5D,MAAM,MACNyE,QAAS,oCACL,EAAKhH,MAAMkG,WAAW,EAAKoL,sBA3BxB,2C,wDA+BZC,W,sBAAa,sBAAAnN,EAAA,sDACZ,EAAKkN,sBAEL,EAAKnL,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,sBAAAuD,EAAA,sFAAAA,EAAA,MAGjB,sBAAAA,EAAA,sEACD+M,QAAQC,IAAI,EAAKpR,MAAMyQ,cAAc5O,IAAzB,uCAA6B,WAAMC,GAAN,SAAAsC,EAAA,sEAAoB2B,GAAc,EAAK/E,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAI,EAAKlE,MAAMmF,MAAOrD,EAAK4D,IAAzF,mFAA7B,kCAAAqK,KAAA,iBADX,mFAHiB,qDAOlCsB,GAAUhK,MAAK,SAAAhD,GAGb,EAAK8B,SAAS,CAAEtF,SAAS,EACzB8P,MAAMtM,EACN9B,MAAO,QACPyE,QAAQ,iDAMV,EAAK2I,cAnB6B,4CAHpB,2C,+EAtHZ,IAAMG,EAAeC,KAAK/P,MAAM4I,SAChCmH,KAAK5J,SAAS,CAAEyC,UAAWkH,M,4CAI7B,IAAMA,EAAeC,KAAK/P,MAAMkG,UAChC6J,KAAK5J,SAAS,CAAED,WAAY4J,M,+JAM5BxC,GAAgByC,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAM0Q,kBAC7D3B,KAAKpB,YAAa,EAClBoB,KAAK5J,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,gCAAAuD,EAAA,sEAGZa,GAAS,EAAKjE,MAAMiD,MAAM,EAAKjD,MAAMkD,KAHzB,YAG1BiB,EAH0B,QAKtBsC,WAAW,kBALW,gBAM9B,EAAKtB,SAAS,CAACtF,SAAS,EACtB0B,MAAM,MACNyE,QAAS,2DARmB,2BAWtB,EAAK2H,WAXiB,wBAY7B,EAAKxI,SAAS,CAAChB,UAZc,UAeJI,GAAiB,EAAKvE,MAAMiD,MAAM,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMmF,OAfzD,QAetB6K,EAfsB,OAgBxB1I,KAAE4D,SAAS8E,EAAU3L,MACvB,EAAK8B,SAAS,CAACtF,SAAS,EACtBmG,QAASgJ,EAAU3L,QAGhB4L,EAAcD,EAAU3L,KAAKxC,KAAK,SAAAqO,GAAQ,MAAO,CAACpJ,KAAMoJ,EAAGpJ,KAAMpB,GAAIwK,EAAGxK,OAE5E,EAAKS,SAAS,CAACX,QAASyK,EACvBpP,SAAS,KAxBe,6C,mJAmC9BkP,KAAKpB,YAAa,I,+BAgGR,IAAD,OAEL9N,EAAUkP,KAAK/P,MAAMa,QACvB,OACE,kBAAC+G,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,qDAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAMZ,kBAACsH,EAAA,EAAD,CAAMC,SAAU6H,KAAK7H,UACrB,kBAACJ,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACO,EAAA,EAAD,KAEA,kBAACgG,GAAA,EAAD,CAAapO,KAAM,WAAWwF,GAAI,WAAWgD,SAAUqH,KAAKa,iBAAkBrC,MAAOwB,KAAK/P,MAAMuQ,QACjG,6BACER,KAAK/P,MAAMwF,QAAQ3D,KAAI,SAAC4N,GAAD,OAAQ,kBAACnB,GAAA,EAAD,CAAapO,KAAM,WACnD8B,IAAKyN,EAAE/J,GAAIA,GAAI+J,EAAE/J,GAAI6I,MAAOkB,EAAE3I,KAC9B0J,QAAS,EAAKxQ,MAAM0Q,aAAac,MAAK,SAACP,GAAD,OAAQA,EAAGvL,KAAO+J,EAAE/J,MACzDgD,SAAU,SAACP,GAAD,OAAO,EAAK2I,eAAe3I,EAAGsH,UAIzC,yBAAK9O,UAAU,aACf,kBAACkI,EAAA,EAAD,CAAQ3I,KAAK,SAAUqC,MAAM,OAAO4G,QAAQ,UAAUL,KAAK,KAAKC,OAAK,EAACH,UAAWmH,KAAK/P,MAAM4I,UAA5F,uBAKF,kBAACf,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eACxBE,EAAU,kBAACoI,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,KAIlF,kBAACrB,EAAA,EAAD,CAAKC,GAAG,KACNgI,KAAK/P,MAAMyQ,cAAc3C,OAAO,IAAMiC,KAAK/P,MAAM4I,SAAY,kBAACC,EAAA,EAAD,CAASM,QAAQ,eAAeL,KAAK,KAAKC,OAAK,EAAExH,QAASwO,KAAKwB,WAAY3I,SAAUmH,KAAK/P,MAAMkG,WAAhG,gBAAkI,GAEjM,kBAAC2B,EAAA,EAAD,KACA,wBAAIlH,UAAU,OAAO8B,MAAO,CAACF,MAAMwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMgH,gB,GAlO3CoJ,a,8BCkKduB,G,8MA7Jd3R,MAAM,CACJ+G,MAAM,I,EAIR6K,SAAW,WAIV,IAHA,IAAIC,EAAQ,GACRC,EAAOC,SAAS,EAAK/Q,MAAM6Q,QAAU,EAEhC1C,EAAI,EAAGA,EAAI,GAAIA,GAAQ2C,EAC9BD,EAAMd,KAAKpN,IAAMqO,cAAc,SAAU,CACvChQ,IAAImN,EACJzJ,GAAIyJ,EACJpI,MAAOoI,EAAI,GAAK,IAAI8C,OAAO9C,GAAKA,GAC/BA,EAAI,GAAK,IAAI8C,OAAO9C,GAAKA,IAG9B,OAAO0C,G,EAGRK,WAAa,WAIZ,IAHA,IAAIC,EAAU,GACVL,EAAOC,SAAS,EAAK/Q,MAAMmR,UAAY,EAElChD,EAAI,EAAGA,EAAI,GAAIA,GAAQ2C,EAC9BK,EAAQpB,KAAKpN,IAAMqO,cAAc,SAAU,CACzChQ,IAAImN,EACJzJ,GAAIyJ,EACJpI,MAAOoI,EAAI,GAAK,IAAI8C,OAAO9C,GAAKA,GAC/BA,EAAI,GAAK,IAAI8C,OAAO9C,GAAKA,IAG9B,OAAOgD,G,EAGTC,eAAgB,SAACjK,GACf,IAAIkK,EAAM,EAAKrS,MAAM+G,MAErBsL,EAAI,GAAK,GAAGJ,OAAO9J,EAAE/F,OAAO2E,OAC5B,EAAK/F,MAAM0H,SAAS2J,I,EAGtBC,iBAAiB,SAACnK,GAChB,IAAIkK,EAAM,EAAKrS,MAAM+G,MAErBsL,EAAI,GAAK,GAAGJ,OAAO9J,EAAE/F,OAAO2E,OAC5B,EAAK/F,MAAM0H,SAAS2J,I,EAGtBE,QAAS,SAACpK,GACR,IAAIkK,EAAM,EAAKrS,MAAM+G,MAGjBoB,EAAE/F,OAAOoO,SACX6B,EAAI,GAAK,IACTA,EAAI,GAAK,IAGM,MAAXA,EAAI,GACNA,EAAI,GAAKlK,EAAE/F,OAAO2E,MAElBsL,EAAI,GAAKA,EAAI,GAAK,IAAMlK,EAAE/F,OAAO2E,OAM/BsL,EAAI,GAAGvE,OAAS,GAClBuE,EAAI,GAAMA,EAAI,GAAGjL,MAAM,KAEvBiL,EAAI,GAAGnB,OAAOmB,EAAI,GAAGG,QAAQrK,EAAE/F,OAAO2E,OAAQ,GAE9CsL,EAAI,GAAKA,EAAI,GAAG7K,WAAWiL,QAAQ,KAAM,MAIzCJ,EAAI,GAAK,IAIb,EAAKrR,MAAM0H,SAAS2J,GACpB,EAAKrR,MAAM0R,gB,0EAUT,OAFA3C,KAAK/P,MAAM+G,MAAQgJ,KAAK/O,MAAM+F,MAKxB,kBAAC4L,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWjS,UAAW,mBAAtB,mBACF,kBAACkH,EAAA,EAAD,CAAKlH,UAAW,yBAChB,kBAACmH,EAAA,EAAD,CAAM+K,UAAQ,QACZ,kBAACvK,EAAA,EAAD,KACJ,kBAACgG,GAAA,EAAD,CAAapO,KAAK,WAAWwF,GAAG,MAAM6I,MAAM,SAASxH,MAAM,IAAIxF,QAAUwO,KAAKwC,QAC9EO,gBAAuD,IAArC/C,KAAK/P,MAAM+G,MAAM,GAAGgM,OAAO,KAA4BpS,UAAU,oBACnF,kBAAC2N,GAAA,EAAD,CAAapO,KAAK,WAAWwF,GAAG,MAAM6I,MAAM,YAAYxH,MAAM,IAAIxF,QAAUwO,KAAKwC,QACjFO,gBAAsD,IAArC/C,KAAK/P,MAAM+G,MAAM,GAAGgM,OAAO,KAA4BpS,UAAU,oBAClF,kBAAC2N,GAAA,EAAD,CAAapO,KAAK,WAAWwF,GAAG,MAAM6I,MAAM,SAASxH,MAAM,IAAIxF,QAAUwO,KAAKwC,QAC9EO,gBAAsD,IAArC/C,KAAK/P,MAAM+G,MAAM,GAAGgM,OAAO,KAA4BpS,UAAU,oBAClF,kBAAC2N,GAAA,EAAD,CAAapO,KAAK,WAAWwF,GAAG,MAAM6I,MAAM,SAASxH,MAAM,IAAIxF,QAAUwO,KAAKwC,QAC9EO,gBAAsD,IAArC/C,KAAK/P,MAAM+G,MAAM,GAAGgM,OAAO,KAA4BpS,UAAU,sBAGpF,kBAACmH,EAAA,EAAD,CAAK+K,UAAQ,QACb,kBAACvK,EAAA,EAAD,KACE,kBAACgG,GAAA,EAAD,CAAapO,KAAK,WAAWwF,GAAG,MAAM6I,MAAM,UAAUxH,MAAM,IAAIxF,QAAUwO,KAAKwC,QAC/EO,gBAAsD,IAArC/C,KAAK/P,MAAM+G,MAAM,GAAGgM,OAAO,OAC5C,kBAACzE,GAAA,EAAD,CAAapO,KAAK,WAAWwF,GAAG,MAAM6I,MAAM,WAAWxH,MAAM,IAAIxF,QAAUwO,KAAKwC,QAChFO,gBAAsD,IAArC/C,KAAK/P,MAAM+G,MAAM,GAAGgM,OAAO,OAC5C,kBAACzE,GAAA,EAAD,CAAapO,KAAK,WAAWwF,GAAG,MAAM6I,MAAM,WAAWxH,MAAM,IAAIxF,QAAUwO,KAAKwC,QAChFO,gBAAsD,IAArC/C,KAAK/P,MAAM+G,MAAM,GAAGgM,OAAO,UAK3C,kBAAClL,EAAA,EAAD,KAGH,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEe,KAAK,EAAGkK,OAAO,IAExB,kBAACzK,EAAA,EAAD,qBAGA,kBAACT,EAAA,EAAD,CAAKC,GAAI,CAAEe,KAAK,IAEhB,kBAACL,EAAA,EAAD,CAAOvI,KAAK,SAAS4G,KAAK,QAAQpB,GAAG,QAAQgD,SAAUqH,KAAKqC,eAAgBrL,MAAOgJ,KAAK/P,MAAM+G,MAAM,IAAMgJ,KAAK6B,aAI/G,kBAAC9J,EAAA,EAAD,CAAKC,GAAI,CAAEe,KAAM,GAAInI,UAAW,QAClC,kBAAC8H,EAAA,EAAD,CAAOvI,KAAK,SAAS4G,KAAK,UAAUpB,GAAG,SAASgD,SAAUqH,KAAKuC,iBAAkBvL,MAAOgJ,KAAK/P,MAAM+G,MAAM,IAAKgJ,KAAKmC,qB,GA5IpG9B,a,UCFR6C,GAAS,uCAAG,WAAOnM,EAAMoM,GAAb,mBAAA9O,EAAA,6DAEjB7F,EAFiB,UAERwF,GAFQ,eAIjBM,EAAO,CACTyC,OACAoM,UANmB,SAUL5O,IAAMS,KAAKxG,EAAI,CAAC8F,SAVX,cAUjB8O,EAViB,yBAYhBA,GAZgB,2CAAH,wDAgBTC,GAAU,uCAAG,WAAMtM,EAAM3B,GAAZ,qBAAAf,EAAA,6DAKlB7F,EALkB,UAKTwF,GALS,sBAOlBM,EAAO,CACTyC,QAGEiH,EAAU,CACdC,cAAc,UAAD,OAAY7I,IAZH,SAeNb,IAAMS,KAAKxG,EAAI,CAAC8F,QAAM,CAAC0J,YAfjB,cAelBoF,EAfkB,yBAiBjBA,GAjBiB,2CAAH,wDAoBVE,GAAU,uCAAG,WAAMvM,EAAM3B,GAAZ,qBAAAf,EAAA,6DAKlB7F,EALkB,UAKTwF,GALS,sBAOlBM,EAAO,CACTyC,QAEEiH,EAAU,CACdC,cAAc,UAAD,OAAY7I,IAXH,SAcNb,IAAMS,KAAKxG,EAAI,CAAC8F,QAAM,CAAC0J,YAdjB,cAclBoF,EAdkB,yBAgBjBA,GAhBiB,2CAAH,wDAmBVG,GAAS,uCAAG,WAAMrP,EAAOC,EAAK4C,EAAMyM,EAAUpO,GAAlC,qBAAAf,EAAA,6DAIjB7F,EAJiB,UAIRwF,GAJQ,mBAMjBM,EAAO,CACTJ,QACAC,MACA4C,OACAyM,YAGExF,EAAU,CACdC,cAAc,UAAD,OAAY7I,IAdJ,SAiBLb,IAAMS,KAAKxG,EAAI,CAAC8F,QAAM,CAAC0J,YAjBlB,cAiBjBoF,EAjBiB,yBAmBhBA,GAnBgB,2CAAH,8DCyCPK,GAhGD,SAACxS,GAAW,IAGhByM,EAAqB5J,IAArB4J,iBAEFgG,EAAc,uCAAG,WAAO3M,EAAM4M,GAAb,eAAAtP,EAAA,+EAECqJ,IAFD,OAEbtI,EAFa,OAGnBkO,GAAWvM,EAAM3B,GAAOkC,MAAK,SAAChD,GAE9BrD,EAAM2S,SAASD,MALI,yGAAH,wDAYdE,EAAa,uCAAG,WAAOF,EAAQzP,EAAOC,EAAK4C,EAAMyM,GAAjC,eAAAnP,EAAA,+EAEEqJ,IAFF,OAEZtI,EAFY,OAGlBmO,GAAUrP,EAAOC,EAAK4C,EAAMyM,EAAUpO,GAAOkC,MAAK,SAAChD,GAEnDrD,EAAM2S,SAASD,MALG,yGAAH,8DAYbG,EAAc,uCAAG,WAAO/M,GAAP,eAAA1C,EAAA,+EAECqJ,IAFD,OAEbtI,EAFa,OAGnBiO,GAAWtM,EAAM3B,GAAOkC,MAAK,SAAChD,OAHX,yGAAH,sDAYlB,OACE,6BAEE,kBAACyP,GAAA,EAAD,CAAQC,SAAO,EAACC,YAAU,EAACrT,UAAU,QACnC,+BACE,wBAAIA,UAAU,mBACZ,iCACA,wBAAKsT,MAAM,OAAX,aACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,cAGJ,+BAEGjT,EAAM7B,MAAM0C,KAAI,SAACC,EAAMqN,GAEtB,IAAMpN,EAAOoN,EACb,OACE,wBAAInN,IAAKmN,GACP,wBAAI+E,MAAM,OAAO/E,EAAE,GACnB,4BAAKrN,EAAKqS,WACV,wBAAIC,MAAM,UAAUtS,EAAKuS,MACzB,wBAAID,MAAM,UAAS,kBAACvL,EAAA,EAAD,CAASlI,UAAU,OAAO4B,MAAOT,EAAKwS,SAAS,SAAS,UAAY/S,QAAUO,EAAKwS,SAAS,WAI9Gb,EAAe3R,EAAKgF,KAAM/E,IAEtB,WAGD6R,EAAc7R,EAAOf,EAAMiD,MAAOjD,EAAMkD,IAAKpC,EAAKgF,KAAMhF,EAAKyR,YAE/DzR,EAAKwS,SAAS,OAAO,SAGnBxS,EAAKwS,SASgB,GATN,kBAACzL,EAAA,EAAD,CAAQtG,MAAM,SAAUhB,QAAU,WAE9C,IAAMgT,EAAUvT,EAAM7B,MACtBoV,EAAQrD,OAAOnP,EAAM,GAErB8R,EAAe/R,EAAKgF,MAEpB9F,EAAMwT,QAAQD,KAPF,mB,0CC4JtBE,G,8MA5NdzU,MAAS,CAACqU,KAAK,GACLtN,MAAO,CAAC,IAAK,IAAK,IAAM,IAAM,KAC/BwM,SAAS,YACRmB,IAAI,GACJ1N,QAAQ,I,EAab2N,cAAc,SAACtC,GACTA,GAAOA,EAAIvE,OACb,EAAK3H,SAAS,CACZY,MAAOsL,KAGT,EAAKlM,SAAS,CACZY,MAAO,CAAC,IAAK,IAAK,IAAM,IAAM,OAEhCsL,EAAM,CAAE,IAAK,IAAK,IAAK,IAAM,MAGhC,EAAKuC,aAAavC,I,EAGnBuC,aAAa,SAACvC,GACZ,IAAIwC,EAAS,GAEf,GAAe,MAAXxC,EAAI,GAAawC,EAAS,QAC1B,CACJ,IAAIC,EAAUzC,EAAI,GAAGjL,MAAM,KAAKvF,IAAIkT,QAAQC,OAAOxN,WAAWiL,QAAQ,KAAM,KAC3EJ,EAAInB,OAAO,EAAG,EAAG4D,GAGhBD,GADAA,EAASxC,EAAI7K,WAAWiL,QAAQ,KAAM,MACtBA,QAAQ,KAAM,KAG9B,EAAKtM,SAAS,CAACoN,SAASsB,K,EAK1BI,OAAO,WAER,GAA2B,MAAxB,EAAKjV,MAAMuT,SAAiB,CAC3B,IAAIlB,EAAM6C,KAAU1N,SAAS,EAAKxH,MAAMuT,UAExC,OAAiC,IAA7BlB,EAAIU,OAAO,aACNV,EAGF,M,EAIV1L,aAAe,SAAA8H,GAEb,EAAKtI,SAAS,CACZkO,KAAM5F,EAAMrM,OAAO2E,MACnB2N,IAAKjG,EAAMrM,OAAOsD,GAClByP,OAAQ,EACRnO,QAAQ,M,EAOZ0L,aAAe,WACb,EAAKvM,SAAS,CAEZa,QAAS,M,EAKbkB,S,uCAAW,WAAOC,GAAP,SAAA/D,EAAA,sDACT+D,EAAEC,iBADO,2C,wDAIXgN,iBAAmB,SAACjN,GAElB,GADAA,EAAEC,iBACE,EAAKpH,MAAMyD,MAAMjG,UAAY,EAAKwC,MAAM8L,QAAQjO,eAAkB,EAAKmC,MAAMyD,MAAMjG,UAAY,EAAKwC,MAAMgM,SAAS/N,oBAAuB,EAAK+B,MAAMyD,MAAMjG,UAAY,EAAKwC,MAAMP,SAASd,OAAQ,CAGvM,IAAIR,EAAK,aAAO,EAAK6B,MAAM9B,MAAMC,OAEjC,GAA0B,MAAtB,EAAKa,MAAM+G,MAAM,GAGrB,YADE,EAAKZ,SAAS,CAACa,QAAS,uCAG1B,IAAK,EAAKhH,MAAMqU,KAAgF,YAA1E,EAAKlO,SAAS,CAACa,QAAS,iDAE9C,GAAI7H,EAAM2O,OAAS,EAAI,EAAK3H,SAAS,CAACa,QAAS,2CAC3C,CACJ,IAAMqO,EAAOC,OACPxO,EAAO,EAAK9F,MAAMkD,IAAI,IAAImR,EAIhClW,EAAM4R,KAAK,CAACoD,UAAW,EAAKc,SAAUZ,KAAM,EAAKrU,MAAMqU,KAAMC,SAAU,EAAKtT,MAAM9B,MAAMoV,SAAUxN,OAAMyM,SAAS,EAAKvT,MAAMuT,WAG1H,EAAKgC,UAAUpW,GACf,IAAM+T,EAAO,oCAAD,OAAsC,EAAKlT,MAAM0U,KAI9DzB,GAAUnM,EAAMoM,SAGT,EAAK/M,SAAS,CAACa,QAAS,wE,EAOlCwO,iBAAkB,SAACzT,GACjB,IAEI0T,EAFK,aAAO,EAAKzU,MAAM9B,MAAMC,OAEb0C,KAAI,SAACC,EAAMqN,GAIjC,OAJ2CA,IAAMpN,IAE7CD,EAAKwS,UAAYxS,EAAKwS,UAEnBxS,KAGP,EAAKyT,UAAUE,I,EAIjBC,UAAW,SAACC,GACb,EAAKxP,SAAS,CAACa,QAAS,KACxB,EAAKuO,UAAUI,I,EAIbJ,U,uCAAY,WAAOrW,GAAP,mBAAAkF,EAAA,6DAGL7F,EAHK,UAGIwF,GAHJ,SAKLM,EAAM,CACVJ,MAAO,EAAKjD,MAAMiD,MAClBC,IAAK,EAAKlD,MAAMkD,IAChB/E,MAAOD,GARE,kBAYcoF,IAAMS,KAAKxG,EAAK8F,GAZ9B,UAeU,OAHXuR,EAZC,QAeDjO,OAfC,wBAoBL,EAAK3G,MAAM6U,cAAc,CAAC1W,MAAOD,IApB5B,kBAuBE0W,GAvBF,oH,2IAxIP5R,GAAW+L,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAM6U,eACxDvI,GAAgByC,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAM0Q,kBAC7DvG,GAAU4E,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAMqL,iBACvD1H,GAAiBoL,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAM0F,eAChEyE,GAAU4E,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAMkD,IAAK6L,KAAK/O,MAAMsL,oB,+BA6KxD,OACE,6BACH,kBAACwJ,GAAA,EAAD,CAAMrT,MAAO,CAACwR,MAAM,QACrB,kBAAChM,EAAA,EAAD,KACC,kBAAC,GAAD,CAAQlB,MAAOgJ,KAAK/P,MAAM+G,MAC1B2B,SAAUqH,KAAK4E,cAAgBjC,aAAe3C,KAAK2C,eAErD,yBAAK/R,UAAW,mBAAoBoP,KAAKkF,SAAzC,KACElF,KAAK/O,MAAM+U,eAAoB,yBAAKpV,UAAW,mBAAqBoP,KAAK/P,MAAM+G,MAAMS,WAAWiL,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MAAa,GAEjJ,kBAACnK,EAAA,EAAD,CAAWiI,OAAK,EAACyF,QAAM,EAACrV,UAAU,mBAE/BoP,KAAK/O,MAAM8L,QAAQjO,cAAoB,kBAACyP,GAAA,EAAD,CAAa5I,GAAG,QAAQxF,KAAK,QAAS4G,KAAK,MAAMC,MAAM,kBAAkByJ,QAA6B,oBAApBT,KAAK/P,MAAMqU,KAA4B9F,MAAM,kBAAkB5N,UAAU,OAAO+H,SAAUqH,KAAKpJ,eAAiB,GAGzOoJ,KAAK/O,MAAMgM,SAAS/N,mBAAyB,kBAACqP,GAAA,EAAD,CAAa3N,UAAU,OAAO+E,GAAG,QAAQxF,KAAK,QAAQ4G,KAAK,MAAMC,MAAM,kBAAkByJ,QAA6B,oBAApBT,KAAK/P,MAAMqU,KAA4B9F,MAAM,kBAAkB7F,SAAUqH,KAAKpJ,eAAkB,GAE/OoJ,KAAK/O,MAAMP,SAASd,OAAa,kBAAC2O,GAAA,EAAD,CAAa3N,UAAU,OAAO+E,GAAG,QAAQxF,KAAK,QAAQ4G,KAAK,MAAMC,MAAM,iBAAiByJ,QAA6B,mBAApBT,KAAK/P,MAAMqU,KAA2B9F,MAAM,iBAAiB7F,SAAUqH,KAAKpJ,eAAkB,IAKnO,kBAACkC,EAAA,EAAD,CAASM,QAAQ,eAAeL,KAAK,KAAKC,OAAK,EAACxH,QAASwO,KAAKqF,kBAA9D,WAGA,0BAAMzU,UAAU,mBAAmBoP,KAAK/P,MAAMgH,UAE7C,kBAAC,GAAD,CAAQ7H,MAAQ4Q,KAAK/O,MAAM9B,MAAMC,MAA2BqV,QAASzE,KAAK2F,UAAW/B,SAAU5D,KAAKyF,iBAAkBvR,MAAO8L,KAAK/O,MAAMiD,MAAOC,IAAK6L,KAAK/O,MAAMkD,W,GAxNhJkM,aCgCJ6F,G,sLArCX,OAAQ,6BACF,kBAACpO,EAAA,EAAD,KACF,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,kEAGC,kBAACH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAKd,kBAAC,GAAD,CAAMzB,MAAO6Q,KAAK/O,MAAM9B,MAAO+E,MAAO8L,KAAK/O,MAAMiD,MAAOC,IAAK6L,KAAK/O,MAAMkD,IAAKgS,YAAanG,KAAK/O,MAAMkV,YAAcL,cAAe9F,KAAK/O,MAAM6U,cAC7IxJ,gBAAiB0D,KAAK/O,MAAMqL,gBAC5BC,iBAAkByD,KAAK/O,MAAMsL,iBAC7B5F,cAAeqJ,KAAK/O,MAAM0F,cACxBjC,MAASsL,KAAK/O,MAAMyD,MACpBqI,QAAWiD,KAAK/O,MAAM8L,QACtBE,SAAY+C,KAAK/O,MAAMgM,SACvBvM,SAAUsP,KAAK/O,MAAMP,SACrBiR,iBAAkB3B,KAAK/O,MAAM0Q,iBAC7ByE,gBAAgB,EAChBJ,gBAAgB,S,GArCA3F,a,gBC8LTgG,G,YA/Kb,WAAYpV,GAAQ,IAAD,+BACjB,8CAAMA,KAkCRqV,aAnCmB,uCAmCJ,WAAOpS,EAAO6C,EAAMwP,EAAQC,GAA5B,mBAAAnS,EAAA,6DAGP7F,EAHO,UAGEwF,GAHF,iBAKPM,EAAM,CACVJ,QACA6C,OACAwP,SACAC,YATW,kBAcUjS,IAAMS,KAAKxG,EAAK8F,GAd1B,OAgBK,gCAFRmS,EAdG,QAgBJnS,KACP,EAAK8B,SAAS,CACZ5D,MAAO,QACPyE,QAASwP,EAAKnS,OACT,EAAK8B,SAAS,CACnB5D,MAAO,MACPyE,QAASwP,EAAKnS,OAtBL,4GAnCI,4DAGjB,EAAKrE,MAAQ,CAEZ4I,UAAU,EACT2N,SAAU,GACVvP,QAAS,IAGX,EAAKyP,kBAAoB,EAAKA,kBAAkBC,KAAvB,iBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,iBAXH,E,iFAcDjI,GAAQ,IAAD,EACjBrM,EAASqM,EAAMrM,OACf2E,EAAQ3E,EAAO2E,MACfD,EAAO1E,EAAO0E,KAEpBiJ,KAAK5J,UAAL,oBACGW,EAAOC,GADV,yBAEU,IAFV,IAIY,WAARD,GAA8B,OAAVC,EACtBgJ,KAAK5J,SAAS,CACZyC,UAAU,IAGG,WAAR9B,GAA8B,OAAVC,GAAgBgJ,KAAK5J,SAAS,CACzDyC,UAAU,M,mCAuCD6F,GACXA,EAAMrG,iBAEN2H,KAAKsG,aAAatG,KAAK/O,MAAMiD,MAAO8L,KAAK/O,MAAM8F,KAAMiJ,KAAK/P,MAAMsW,OAAQvG,KAAK/P,MAAMuW,UAEnFxG,KAAK5J,SAAS,CAACoQ,SAAU,O,+BAUzB,OACE,kBAAC3O,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACT,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,eAC3B,wBAAIA,UAAU,aAAa8B,MAAO,CAACuF,UAAW,WAA9C,0BAAiF+H,KAAK/O,MAAM8F,QAG3F,kBAACe,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIZ,yBAAKA,UAAU,mBAMb,yBAAKA,UAAU,yBACb,kBAACsH,EAAA,EAAD,CAAMC,SAAU6H,KAAK4G,cAGnB,kBAACrO,EAAA,EAAD,CAAWsO,KAAG,GACZ,kBAACrO,EAAA,EAAD,CAAOsO,QAAQ,SAASC,GAAI,GAA5B,WAGA,kBAAChP,EAAA,EAAD,CAAKgP,GAAI,IACP,kBAACrO,EAAA,EAAD,CACEvI,KAAK,SACLwF,GAAG,SACHoB,KAAK,SAEL4B,SAAUqH,KAAK0G,mBAEd,4BAAQ3P,KAAK,SAASC,MAAM,MAA5B,qBACA,4BAAQD,KAAK,SAASC,MAAM,OAA5B,sBACC,4BAAQD,KAAK,SAASC,MAAM,WAA5B,4BACA,4BAAQD,KAAK,SAASC,MAAM,mBAA5B,8BACA,4BAAQD,KAAK,SAASC,MAAM,SAA5B,wBAOR,kBAACuB,EAAA,EAAD,CAAWsO,KAAG,GACZ,kBAACrO,EAAA,EAAD,CAAOsO,QAAQ,WAAWC,GAAI,GAA9B,gBAGA,kBAAChP,EAAA,EAAD,CAAKgP,GAAI,IACP,kBAACrO,EAAA,EAAD,CACEvI,KAAK,WACLwF,GAAG,WACHoB,KAAK,WACLiQ,UAAU,KACVC,KAAK,KACLjQ,MAAOgJ,KAAK/P,MAAMuW,SAClB7N,SAAUqH,KAAK0G,kBACf9N,UAAQ,MAId,kBAACL,EAAA,EAAD,CAAWsO,KAAG,GACZ,kBAAC9O,EAAA,EAAD,CAAKgP,GAAI,CAAEhO,KAAM,GAAIkK,OAAQ,IAC3B,kBAACnK,EAAA,EAAD,CAAQ3I,KAAK,SAASqC,MAAM,UAAUqG,SAAUmH,KAAK/P,MAAM4I,UAA3D,iBAGA,wBAAInG,MAAQ,CAACF,MAAOwN,KAAK/P,MAAMuC,OAAQ5B,UAAU,QAAQoP,KAAK/P,MAAMgH,cAM9E,kBAACa,EAAA,EAAD,W,GAtKcuI,aCgBP6G,GA7BM,SAAC,GAA6C,IAAhC7G,EAA+B,EAA1C8G,UAAsBC,EAAoB,EAApBA,KAASC,EAAW,sCACjBvT,IAAvCwT,EADwD,EACxDA,gBAAiBC,EADuC,EACvCA,kBAEzB7Q,qBAAU,YACA,uCAAG,sBAAArC,EAAA,yDACJiT,EADI,gCAEDC,EAAkB,CACtBC,SAAU,CAAEC,UAAWL,KAHlB,2CAAH,qDAORM,KACC,CAACJ,EAAiBC,EAAmBH,IAKxC,OAAO,kBAAC,IAAD,eAAOA,KAAMA,EAAMO,OAHX,SAAA1W,GAAK,OACE,IAApBqW,EAA2B,kBAACjH,EAAcpP,GAAa,OAEXoW,K,+BCWjCO,I,OA1BH,SAAA3W,GAAU,IACZ4W,EAA2B5W,EAA3B4W,SAAUC,EAAiB7W,EAAjB6W,OAAQ/Q,EAAS9F,EAAT8F,KADP,EAEU7F,oBAAS,GAFnB,mBAEZU,EAFY,KAEJmW,EAFI,OAGkBC,OAHlB,mBAGZC,EAHY,KAGMC,EAHN,KAGMA,OAEnBC,EAAYC,aAAU,CAC1BF,OAAQtW,EAASsW,EAAS,EAC1BG,QAASzW,EAAS,EAAI,IAGxB,OACG,kBAAC,IAAMkB,SAAP,KACC,yBAAKlC,UAAU,eAAeY,QAAS,kBAAMuW,GAAYnW,KACvD,wCAAUmF,EAAV,aAAmB8Q,KAGrB,kBAAC,KAASS,IAAV,CAAc1X,UAAU,aAAa8B,MAAK,eAAOyV,IAC/C,0BAAMzV,MAAO,CAAE6R,SAAU,aACtB0D,EACAH,O,mJCdLS,GAAK,m3BAAu1BC,KAAv1B,kUAQLC,GAAW,CACf,CACEZ,SAAU,mBACVC,OAAQ,iEAEV,CACED,SAAU,wBACVC,OAZO,opBAcT,CACED,SAAU,iCACVC,OAlBS,uOAAkOY,KAAlO,6BAsBX,CACEb,SAAU,2CACVC,OAAQS,IAEV,CACEV,SAAU,2CACVC,OA3BO,ugBAAmgBa,KAAngB,kKAAiqBC,KAAjqB,6BA8BT,CACEf,SAAU,mCACVC,OA7BO,mXAA+We,KAA/W,qXAA4uBC,KAA5uB,yRAiCT,CACEjB,SAAU,2BACVC,OAAQ,4EAeGiB,GAVE,WACf,OACE,yBAAKnY,UAAU,eACZ6X,GAAS3W,KAAI,SAACkX,EAAK5J,GAAN,OACZ,kBAAC,GAAD,CAAKnN,IAAK,IAAMmN,EAAGrI,KAAQqI,EAAE,EAAGyI,SAAUmB,EAAInB,SAAUC,OAASmB,KAAOD,EAAIlB,eCrBrEoB,OApCf,SAAqBjY,GAGnB,OACE,kBAACiH,EAAA,EAAD,CAAMC,SAAUlH,EAAMkH,UACtB,kBAACL,EAAA,EAAD,CAAKqR,MAAI,GACT,kBAACpR,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAOvI,KAAM,SAASS,UAAU,eAAe+H,SAAU1H,EAAMmY,oBAC7D,4BAAQrS,KAAK,SAASC,MAAM,cAA5B,kBACA,4BAAQD,KAAK,SAASC,MAAM,gBAA5B,2BACA,4BAAQD,KAAK,SAASC,MAAM,cAA5B,yBACA,4BAAQD,KAAK,SAASC,MAAM,QAA5B,kBACA,4BAAQD,KAAK,SAASC,MAAM,SAA5B,sBAIM,kBAACe,EAAA,EAAD,CAAKgP,GAAI,GAClB,kBAACxO,EAAA,EAAD,KACS,kBAACG,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAe+E,GAAG,WAAWoB,KAAM,WAAWC,MAAO/F,EAAMoY,SAAW1Q,SAAU1H,EAAM2F,aAAcgC,UAAQ,EAAC0Q,YAAY,mBAGtJ,kBAACvR,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KAEA,kBAACG,EAAA,EAAD,CAAOvI,KAAK,SAAS6G,MAAM,SAASrB,GAAG,QAAQoB,KAAK,QAAQnG,UAAU,mC,SCwDnE2Y,OA5Ef,SAAoBtY,GAAQ,IAAD,EAECC,mBAAS,CACjCsY,MAAO,GACP1Y,SAAS,EACTmG,QAAS,KALc,mBAElBhH,EAFkB,KAEXmG,EAFW,KAQjBF,EAASpC,IAAToC,KACFuT,EAAQ,uCAAE,sBAAApV,EAAA,sEAEP8F,GAAWjE,EAAKhC,MAAOgC,EAAK/B,KAAKmD,MACtC,SAAApB,GACE,GAAIqB,KAAE4D,SAASjF,EAAK5B,OAAS4B,EAAK5B,KAAKoD,WAAW,kBAChDzG,EAAMyY,WAAW,0DACjBtT,EAAS,eACJnG,EADG,CAENa,SAAS,SAGR,CACP,IAAI6Y,EAAYzT,EAAK5B,KAAKxC,KAAK,SAAAC,GAAS,IACrBiF,EAAmBjF,EAAzB6X,KAAgBvC,EADU,YACDtV,EADC,UAE7ByM,EAAK,UAAMzM,EAAK8X,SAAX,cAAyB9X,EAAK+X,OACzC,OAAO,aAAEtL,QAAMxH,SAAUqQ,MAK7BjR,EAAS,eAAInG,EAAL,CACNuZ,MAAOG,EACP7Y,SAAS,SAtBC,2CAAF,qDAkCd,OANA4F,qBAAW,WACTN,EAAS,eAAInG,EAAL,CACNa,SAAS,KACX2Y,MAAc,IAId,kBAACvR,EAAA,EAAD,CAAMC,SAAUlH,EAAMkH,UACtB,kBAACL,EAAA,EAAD,CAAKqR,MAAI,GACT,kBAACpR,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KACA,kBAAC,UAAD,CACG+Q,YAAa,qBACZtS,MAAO/F,EAAM8Y,eACbpR,SAAU1H,EAAM2F,aAChBoT,QAAS/Z,EAAMuZ,SAMnB,kBAAC1R,EAAA,EAAD,CAAKlH,UAAU,gBACfX,EAAMa,QAAU,kBAACoI,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,KAGvF,kBAACrB,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAOvI,KAAK,SAAS6G,MAAM,SAASrB,GAAG,QAAQoB,KAAK,QAAQnG,UAAU,4BAA6BiI,SAAW5H,EAAMgZ,e,oBCjBzGC,G,sLA9Cb,IAAM5V,EAAO0L,KAAK/O,MAAMkZ,WAAW7V,KAIjC,OAEQ,kBAACuD,EAAA,EAAD,KACE,wBAAIjH,UAAU,OAAO8B,MAAO,CAAC,UAAa,SAC5C,4BACE,6BAAK,2CAAyB4B,EAAK,GAAG8V,kBACtC,6BAAK,wCAAsB9V,EAAK,GAAG+V,mBACnC,6BAAK,2CAAyB/V,EAAK,GAAGgW,OACtC,6BAAK,wCAAsBhW,EAAK,GAAGiW,SAAnC,IAA8CjW,EAAK,GAAGkW,iBACtD,6BAAK,+CAA6BhL,KAAWlL,EAAK,GAAGmW,SAAU,eAC/D,6BAAK,oDAAkCjL,KAAWlL,EAAK,GAAGoW,kBAAmB,eAC7E,6BAAK,uDAAqCpW,EAAK,GAAGqW,kBAClD,6BAAK,uDAAqCrW,EAAK,GAAGsW,kBAClD,6BAAK,mDAAiCtW,EAAK,GAAGuW,cAC9C,6BAAK,iDAA+BvW,EAAK,GAAGwW,YAC5C,6BAAK,0CAAwBxW,EAAK,GAAGyW,MACrC,6BAAK,0CAAwBzW,EAAK,GAAG0W,MACrC,6BAAK,0CAAwB1W,EAAK,GAAGsV,MACrC,6BAAK,6CAA2BtV,EAAK,GAAG2W,cACjB,YAAnB3W,EAAK,GAAGiW,SAAsB,6BAAK,yDAAwCjW,EAAK,GAAG4W,wBAAwB5W,EAAK,GAAG6W,oBAAqB,KAAKC,QAAQ,GAAvH,eAA4I,GACjK,UAAnB9W,EAAK,GAAGiW,SAAoB,6BAAK,qDAAoCjW,EAAK,GAAG+W,wBAAwB/W,EAAK,GAAGgX,eAAgB,KAAKF,QAAQ,GAA9G,eAAmI,GAC5I,YAAnB9W,EAAK,GAAGiW,SACT,kBAAC,IAAMzX,SAAP,KACH,6BAAK,sDAAoCwB,EAAK,GAAGiX,oBAAoBC,iBAC3D,6BAAK,qDAAmClX,EAAK,GAAGiX,oBAAoBE,0BAC9E,6BAAK,6CAA4BnX,EAAK,GAAGoX,cAAcjU,aACnC,GACV,6BAAK,oDAAmCnD,EAAK,GAAGqX,cAAclU,YAC9D,6BAAK,8CAA6BnD,EAAK,GAAGsX,kBAAkBnU,YAC5D,6BAAK,2DAA0CnD,EAAK,GAAGuX,oBAAoBpU,mB,GApChE4I,a,UC+RVyL,G,8MA9Rb7b,MAAO,CACL8b,KAAM,GACNzR,MAAO,KACPpK,OAAQ,KACRC,KAAK,KACLW,SAAS,EACTkb,YAAY,EACZnQ,WAAW,EACXrJ,MAAO,S,EAMXyZ,U,uCAAY,WAAO/X,EAAOC,EAAMmG,EAAOnK,EAAMD,EAAQgc,GAAzC,mBAAA7X,EAAA,6DACJC,EAAM,CACVJ,QACAC,MACAmG,QACAnK,OACAD,SACAgc,YAEI1d,EATI,UASKwF,GATL,oCAaQO,IAAMS,KAAKxG,EAAI8F,GAbvB,cAaJ6X,EAbI,OAeV,EAAK/V,SAAS,CAACa,QAASkV,EAAI7X,KACxBxD,SAAS,IAERqb,EAAI7X,KAAK8X,SAAS,aAAa,EAAKhW,SAAS,CAAC4V,YAAW,EAC5DxZ,MAAO,QAnBC,kBAuBC2Z,EAAI7X,MAvBL,2H,kEAiCZ6D,SAAW,SAACC,GACVA,EAAEC,iBACF,EAAKjC,SAAS,CAAEtF,SAAS,EAAMkb,YAAY,GAA3C,sBACK,sBAAA3X,EAAA,sDACN,EAAK4X,UAAU,EAAKhb,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMqK,MAAO,EAAKrK,MAAME,KAAM,EAAKF,MAAMC,OAAQ,EAAKe,MAAMkZ,WAAW7V,KAAK,GAAG+X,GAAGC,OADlI,6C,EAOPC,U,uCAAY,WAAOrY,EAAOC,EAAMhE,EAAMqc,EAAU9c,GAApC,mBAAA2E,EAAA,6DACJC,EAAM,CACVJ,QACAC,MACAhE,OACAqc,WACA9c,QAEIlB,EARI,UAQKwF,GARL,qCAYSO,IAAMS,KAAKxG,EAAI8F,GAZxB,cAYJyX,EAZI,OAcV,EAAK3V,SAAS,CAAC2V,KAAMA,EAAKzX,KACtBxD,SAAS,IAfH,kBAiBCib,EAAKzX,MAjBN,2H,gEAyBZmY,S,uCAAW,WAAOvY,EAAOC,EAAM+X,EAAUQ,EAAKpS,EAAOnK,GAA1C,iBAAAkE,EAAA,6DAEHC,EAAM,CACVJ,QACAC,MACA+X,WACAQ,MACApS,QACAnK,QAEI3B,EAVG,UAUMwF,GAVN,sCAYDO,IAAMS,KAAKxG,EAAI8F,GAZd,OAaP,EAAK8B,SAAS,CAACyF,WAAU,EACvB5E,QAAS,2CACTzE,MAAO,QACP1B,SAAS,IAhBJ,wI,kEAsBX6b,SAAW,SAACvU,GACPA,EAAE/F,OAAOoO,SAEV,EAAKrK,SAAS,CAAEtF,SAAS,GAAzB,sBACK,sBAAAuD,EAAA,sEACA,EAAKoY,SAAS,EAAKxb,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK,EAAKlD,MAAMkZ,WAAW7V,KAAK,GAAG+X,GAAGC,MAAM,EAAKrb,MAAMkZ,WAAW7V,KAAK,GAAGsY,gBAAgBP,GAAGC,MAAO,EAAKrc,MAAMqK,MAAO,EAAKrK,MAAME,MAD5K,6C,EAST0c,mBAAqB,SAAChW,GAAS,IACtBG,EAASH,EAAIxE,OAAb2E,MACO,OAAVA,EAEJ,EAAKZ,SAAS,CAAClG,OAAQ8G,EACvBC,QAAQ,GACR+U,YAAY,EACZnQ,WAAW,IAEJ,EAAKzF,SAAS,CAAClG,OAAQ,KAC9B+G,QAAQ,GACR+U,YAAY,EACZnQ,WAAW,K,EAGbiR,iBAAmB,SAACjW,GAAS,IACpBG,EAASH,EAAIxE,OAAb2E,MAIO,OAAVA,EAGJ,EAAKZ,SAAS,CAAEtF,SAAS,EACvBX,KAAM6G,EACNC,QAAQ,GACR+U,YAAY,EACZnQ,WAAW,GAJb,sBAIqB,sBAAAxH,EAAA,sEAChB,EAAKkY,UAAU,EAAKtb,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK6C,EAAO,EAAK/F,MAAMkZ,WAAW7V,KAAK,GAAGiW,SAAU,EAAKtZ,MAAMR,QAAQf,MADnG,4CAMf,EAAK0G,SAAS,CAACjG,KAAM,KAC3B8G,QAAQ,GACR+U,YAAY,EACZnQ,WAAW,K,EAGbkR,gBAAiB,SAAClW,GAAS,IAClBG,EAASH,EAAIxE,OAAb2E,MAEO,OAAVA,EAEJ,EAAKZ,SAAS,CAACkE,MAAOtD,EACpBC,QAAQ,GACR+U,YAAY,EACZnQ,WAAW,IAEN,EAAKzF,SAAS,CAACkE,MAAO,KAC7BrD,QAAQ,GACR+U,YAAY,EACZnQ,WAAW,K,0EAKX,IAAMkQ,EAAO/L,KAAK/P,MAAM8b,KAGlBiB,EAAYhN,KAAK/O,MAAMkZ,WAAW7V,KAAK,GAAG2Y,WAAW9N,QAAO,SAAApN,GAAI,OAAIA,EAAKmb,aACzEC,EAAgBH,EAAU7N,QAAO,SAACiO,EAASpb,GAAV,OAAoBA,EAAQ,KAC7Dqb,EAAeL,EAAU7N,QAAO,SAACiO,EAASpb,GAAV,QAAsBA,EAAQ,MAKlE,OACE,kBAAC6F,EAAA,EAAD,KAGJ,kBAACK,EAAA,EAAD,CAAMC,SAAU6H,KAAK7H,SAAUzF,MAAO,CAAE,UAAa,SACrD,kBAACoF,EAAA,EAAD,CAAKqR,MAAI,GACT,kBAACpR,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAOvI,KAAM,SAASS,UAAU,eAAe+H,SAAUqH,KAAK6M,oBAC5D,4BAAQ9V,KAAK,SAASC,MAAM,MAA5B,iBACA,4BAAQD,KAAK,SAASC,MAAM,WAA5B,eACA,4BAAQD,KAAK,SAASC,MAAM,aAA5B,iBAIM,kBAACe,EAAA,EAAD,CAAKgP,GAAI,GACjB,kBAACxO,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAOvI,KAAM,SAASS,UAAU,eAAe+H,SAAUqH,KAAK8M,kBAC5D,4BAAQ/V,KAAK,OAAOC,MAAM,MAA1B,mBACA,4BAAQD,KAAK,OAAOC,MAAM,YAA1B,YAC4C,aAA1CgJ,KAAK/O,MAAMkZ,WAAW7V,KAAK,GAAGiW,SAAwB,4BAAQxT,KAAK,OAAOC,MAAM,UAA1B,UAAmD,MAOrG,kBAACe,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KAEF,kBAACG,EAAA,EAAD,CAAOvI,KAAM,SAASS,UAAU,eAAe+H,SAAUqH,KAAK+M,iBAC5D,4BAAQ/V,MAAM,MAAd,cACgB,aAApBgJ,KAAK/P,MAAME,KAAqB4b,EAAKja,KAAI,SAAC4N,EAAGN,GAAJ,OAAU,4BAAQnN,IAAKmN,EAAGpI,MAAO0I,EAAE2M,GAAGC,MAAQvV,KAAM2I,EAAE4N,UAA5C,UAA0D5N,EAAE6N,gBAA5D,YAA+E7N,EAAE8N,gBACtIzB,EAAKja,KAAI,SAAC4N,EAAGN,GAAJ,OAAU,4BAAQnN,IAAKmN,EAAGpI,MAAO0I,EAAE2M,GAAGC,MAAQvV,KAAM2I,EAAE4N,UAA5C,UAA0D5N,EAAE6N,wBAO3E,kBAACxV,EAAA,EAAD,CAAKgP,GAAI,GACP,kBAACxO,EAAA,EAAD,KAKA,kBAACG,EAAA,EAAD,CAAOvI,KAAK,SAAS6G,MAAM,SAASrB,GAAG,QAAQoB,KAAK,QAAQnG,UAAU,4BAA6BiI,SAAiC,OAAtBmH,KAAK/P,MAAMC,QAAuC,OAApB8P,KAAK/P,MAAME,MAAsC,OAArB6P,KAAK/P,MAAMqK,YAQxL,kBAACxC,EAAA,EAAD,KACD,wBAAIlH,UAAU,UAAS8B,MAAO,CAACF,MAAMwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMgH,UAGnE,kBAACa,EAAA,EAAD,KACK,kBAACC,EAAA,EAAD,CAAKgP,GAAI,IACT,kBAAChP,EAAA,EAAD,KACEiI,KAAK/P,MAAMa,QAAU,kBAACoI,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,KAG/E,kBAACtB,EAAA,EAAD,KACMkI,KAAK/P,MAAM+b,WAAa,kBAAC9T,EAAA,EAAD,KACzB,8BAAM,kBAACuV,GAAA,EAAD,CAAOjb,MAAM,aAAb,mDACN,kBAAC+L,GAAA,EAAD,CAAapO,KAAM,WAAWwF,GAAI,aAAakD,SAAUmH,KAAK/P,MAAM4L,UAAWlD,SAAUqH,KAAK2M,SAAUnO,MAAK,mBAAcwB,KAAK/O,MAAMkZ,WAAW7V,KAAK,GAAG+X,GAAGC,UACnJ,IAER,wBAAI1b,UAAU,QAAd,kCACA,kBAACkH,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKgP,GAAI,EAAGnW,UAAU,QACpB,wBAAIA,UAAU,YACfuc,EAAcrb,KAAI,SAAAC,GACjB,OAAO,wBAAInB,UAAU,cAAcqB,IAAMF,EAAK2b,uBAC5C,6BAAK,gCAAS3b,EAAKwb,kBACtB,6BAAMxb,EAAK2b,sBAAX,KACA,6BAAK,kBAACD,GAAA,EAAD,CAAOjb,MAAM,aAAcT,EAAK4b,MAArC,WAKD,kBAAC5V,EAAA,EAAD,CAAKgP,GAAI,EAAGnW,UAAU,QACtB,wBAAIA,UAAU,YACbyc,EAAavb,KAAI,SAAAC,GACjB,OAAO,wBAAInB,UAAU,cAAcqB,IAAMF,EAAK2b,sBAAuBE,GAAI,GACzE,6BAAK,gCAAS7b,EAAKwb,kBACnB,6BAAMxb,EAAK2b,sBAAX,KACA,6BAAK,kBAACD,GAAA,EAAD,CAAOjb,MAAM,aAAcT,EAAK4b,MAArC,iB,GAnRWtN,aCmOTyL,G,8MAlOb7b,MAAO,CACL4d,SAAU,GACVC,UAAW,KACX5d,OAAQ,KACRC,KAAK,KACLW,SAAS,EACT+K,WAAW,EACXrJ,MAAO,S,EAMXub,c,uCAAgB,WAAO7Z,EAAOC,EAAM2Z,EAAW5d,EAAQgc,GAAvC,mBAAA7X,EAAA,6DACRC,EAAM,CACVJ,QACAC,MACA2Z,YACA5d,SACAgc,YAEI1d,EARQ,UAQCwF,GARD,wCAYIO,IAAMS,KAAKxG,EAAI8F,GAZnB,cAYR6X,EAZQ,OAcd,EAAK/V,SAAS,CAACa,QAASkV,EAAI7X,KACxBxD,SAAS,IAfC,kBAqBHqb,EAAI7X,MArBD,2H,gEA+BhB6D,SAAW,SAACC,GACVA,EAAEC,iBACF,EAAKjC,SAAS,CAAEtF,SAAS,GAAzB,sBACK,sBAAAuD,EAAA,sDACN,EAAK0Z,cAAc,EAAK9c,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAM6d,UAAW,EAAK7d,MAAMC,OAAQ,EAAKe,MAAMkZ,WAAW7V,KAAK,GAAG+X,GAAGC,OADzH,6C,EAOP0B,e,uCAAiB,WAAO9Z,EAAOC,EAAMqY,EAAU9c,GAA9B,mBAAA2E,EAAA,6DACTC,EAAM,CACVJ,QACAC,MACAqY,WACA9c,QAEIlB,EAPS,UAOAwF,GAPA,yCAWQO,IAAMS,KAAKxG,EAAI8F,GAXvB,cAWTuZ,EAXS,OAaf,EAAKzX,SAAS,CAACyX,SAAUA,EAASvZ,KAC9BxD,SAAS,IAdE,kBAgBJ+c,EAASvZ,MAhBL,2H,8DA8BjBuY,mBAAqB,SAAChW,GAAS,IACtBG,EAASH,EAAIxE,OAAb2E,MAIO,OAAVA,EAGJ,EAAKZ,SAAS,CAAElG,OAAQ8G,EACtBC,QAAQ,GACR4E,WAAW,GAFb,sBAEqB,sBAAAxH,EAAA,sEAChB,EAAK2Z,eAAe,EAAK/c,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK,EAAKlD,MAAMkZ,WAAW7V,KAAK,GAAGiW,SAAU,EAAKtZ,MAAMR,QAAQf,MADjG,4CAMf,EAAK0G,SAAS,CAAClG,OAAQ,KAC7B+G,QAAQ,GACR4E,WAAW,K,EAKbkR,gBAAiB,SAAClW,GAAS,IAClBG,EAASH,EAAIxE,OAAb2E,MAEO,OAAVA,EAEJ,EAAKZ,SAAS,CAAC0X,UAAW9W,EACxBC,QAAQ,GACR4E,WAAW,IAEN,EAAKzF,SAAS,CAAC0X,UAAW,KACjC7W,QAAQ,GACR4E,WAAW,K,0EAKX,IAAMgS,EAAW7N,KAAK/P,MAAM4d,SAGtBb,EAAYhN,KAAK/O,MAAMkZ,WAAW7V,KAAK,GAAG2Z,eAAe9O,QAAO,SAAApN,GAAI,OAAoB,IAAhBA,EAAKmc,UAE7Ef,EAAgBH,EAAU7N,QAAO,SAACiO,EAASpb,GAAV,OAAoBA,EAAQ,KAC7Dqb,EAAeL,EAAU7N,QAAO,SAACiO,EAASpb,GAAV,QAAsBA,EAAQ,MAMlE,OACE,kBAAC6F,EAAA,EAAD,KAGJ,kBAACK,EAAA,EAAD,CAAMC,SAAU6H,KAAK7H,SAAUzF,MAAO,CAAE,UAAa,SACrD,kBAACoF,EAAA,EAAD,CAAKqR,MAAI,GACT,kBAACpR,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAOvI,KAAM,SAASS,UAAU,eAAe+H,SAAUqH,KAAK6M,oBAC5D,4BAAQ9V,KAAK,SAASC,MAAM,MAA5B,iBACA,4BAAQD,KAAK,SAASC,MAAM,WAA5B,mBACA,4BAAQD,KAAK,SAASC,MAAM,UAA5B,qBAQM,kBAACe,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KAEF,kBAACG,EAAA,EAAD,CAAOvI,KAAM,SAASS,UAAU,eAAe+H,SAAUqH,KAAK+M,iBAC5D,4BAAQ/V,MAAM,MAAd,kBAEN6W,EAAS/b,KAAI,SAAC4N,EAAGN,GAAJ,OAAU,4BAAQnN,IAAKmN,EAAGpI,MAAO0I,EAAE2M,GAAGC,MAAQvV,KAAM2I,EAAEyO,aAA5C,UAA6DzO,EAAEyO,oBAOlF,kBAACpW,EAAA,EAAD,CAAKgP,GAAI,GACP,kBAACxO,EAAA,EAAD,KAKA,kBAACG,EAAA,EAAD,CAAOvI,KAAK,SAAS6G,MAAM,SAASrB,GAAG,QAAQoB,KAAK,QAAQnG,UAAU,4BAA6BiI,SAAiC,OAAtBmH,KAAK/P,MAAMC,QAA6C,OAAzB8P,KAAK/P,MAAM6d,gBAQ7J,kBAAChW,EAAA,EAAD,KACD,wBAAIlH,UAAU,UAAS8B,MAAO,CAACF,MAAMwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMgH,UAGnE,kBAACa,EAAA,EAAD,KACK,kBAACC,EAAA,EAAD,CAAKgP,GAAI,IACT,kBAAChP,EAAA,EAAD,KACEiI,KAAK/P,MAAMa,QAAU,kBAACoI,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,KAIzE,wBAAIxI,UAAU,QAAd,8BACA,kBAACkH,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKgP,GAAI,EAAGnW,UAAU,QACpB,wBAAIA,UAAU,YACfuc,EAAcrb,KAAI,SAAAC,GACjB,OAAO,wBAAInB,UAAU,cAAcqB,IAAMF,EAAKsa,GAAGC,OAC/C,6BAAK,gCAASva,EAAKqc,OACtB,6BAAMrc,EAAKsc,YAAX,KACA,iDAAuBtc,EAAKuc,eAA5B,KACA,6BAAK,kBAACb,GAAA,EAAD,CAAOjb,MAAM,aAAb,sBAA8CT,EAAKwc,yBAAxD,WAKD,kBAACxW,EAAA,EAAD,CAAKgP,GAAI,EAAGnW,UAAU,QACtB,wBAAIA,UAAU,YACbyc,EAAavb,KAAI,SAAAC,GACjB,OAAO,wBAAInB,UAAU,cAAcqB,IAAMF,EAAKsa,GAAGC,MAAOsB,GAAI,GAC5D,6BAAK,gCAAS7b,EAAKqc,OACnB,6BAAMrc,EAAKsc,YAAX,KACA,iDAAuBtc,EAAKuc,eAA5B,KACA,6BAAK,kBAACb,GAAA,EAAD,CAAOjb,MAAM,aAAb,sBAA8CT,EAAKwc,yBAAxD,iB,GAvNWlO,aC4CTmO,OA1Cf,SAAoBvd,GAAQ,IAGlBiF,EAASpC,IAAToC,KAHiB,EAUShF,mBAAS,KAVlB,mBAUlBud,EAVkB,KAUPC,EAVO,KAWzB,OACE,6BACE,kBAAC/b,EAAA,EAAD,CAAKgc,MAAI,GACP,kBAACpd,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAASd,UAAwB,KAAb6d,EAAmB,SAAW,GAAKjd,QAAS,kBAAMkd,EAAa,OAAnF,gBAIF,kBAACnd,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAASd,UAAwB,KAAb6d,EAAmB,SAAW,GAAIjd,QAAS,kBAAMkd,EAAa,OAAlF,SAKF,kBAACnd,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAASd,UAAwB,KAAb6d,EAAmB,SAAW,GAAIjd,QAAS,kBAAMkd,EAAa,OAAlF,cAOJ,kBAACE,GAAA,EAAD,CAAYH,UAAWA,GACrB,kBAACI,GAAA,EAAD,CAASC,MAAM,KAAI,kBAAC,GAAD,CAAY3E,WAAYlZ,EAAMkZ,cACjD,kBAAC0E,GAAA,EAAD,CAASC,MAAM,KAAI,kBAAC,GAAD,CAAW3E,WAAYlZ,EAAMkZ,WAAYjW,MAAOgC,EAAKhC,MAAOC,IAAK+B,EAAK/B,IAAK1D,QAASQ,EAAMR,WAC7G,kBAACoe,GAAA,EAAD,CAASC,MAAM,KAAI,kBAACC,GAAD,CAAe5E,WAAYlZ,EAAMkZ,WAAYjW,MAAOgC,EAAKhC,MAAOC,IAAK+B,EAAK/B,IAAK1D,QAASQ,EAAMR,cC8Q1GgK,G,8MA5SXxK,MAAQ,CACN+S,OAAQ,aACRqG,SAAU,GACVc,WAAW,GACXtR,SAAS,GACT/H,SAAS,EACTmG,QAAQ,GACR+X,YAAY,GACZjF,eAAgB,KAChBkF,SAAS,EACT/U,QAAS,I,EAURtD,aAAe,SAACC,GAAS,IAAD,IACEA,EAAIxE,OAAlB2E,EADY,EACZA,MAAMD,EADM,EACNA,KAGb,EAAKX,UAAL,oBACGW,EAAOC,GADV,yBAEU,IAFV,K,EAQDoS,mBAAqB,SAACvS,GAAS,IACvBG,EAASH,EAAIxE,OAAb2E,MAEP,EAAKZ,SAAS,CAEZ4M,OAAQhM,EACRC,QAAQ,M,EAOZiY,mBAAoB,SAACrY,GACfA,EAAIxE,OAAOoO,SACb,EAAKrK,SAAS,CACZ4Y,YAAa,SACb7E,WAAY,GACZlT,QAAQ,M,EAOdkY,mBAAoB,SAACtY,GACfA,EAAIxE,OAAOoO,SACb,EAAKrK,SAAS,CACZ4Y,YAAa,SACb7E,WAAY,GACZjQ,QAAS,GACTjD,QAAQ,M,EAQdmY,iBAAmB,SAAArF,GAGjBxS,KAAE8X,SAAStF,GAAoB,EAAK3T,SAAS,CACzCa,QAAS,GACT8S,iBACAkF,SAAQ,IAIV,EAAK7Y,SAAS,CAAE2T,iBACd9S,QAAS,GACTgY,SAAS,EACT/U,QAAS,M,EASfoV,c,uCAAgB,WAAOtM,EAAQrN,GAAf,mBAAAtB,EAAA,6DAGR7F,EAHQ,UAGCwF,GAHD,qBAKRM,EAAM,CACVJ,MAAO,EAAKjD,MAAMiD,MAClBC,IAAK,EAAKlD,MAAMkD,IAChB6O,SACArN,MATY,kBAaepB,IAAMS,KAAKxG,EAAK8F,GAb/B,OAaJ6V,EAbI,OAeV5S,KAAE4D,SAASgP,EAAW7V,OAAS6V,EAAW7V,KAAKoD,WAAW,kBAC5D,EAAKtB,SAAS,CAEZtF,SAAS,EACTmG,QAAS,2DAGVkT,EAAW7V,KAAKmD,WAAWC,WAAW,UAEvC,EAAKtB,SAAS,CAAEtF,SAAS,EACvBmG,QAASkT,EAAW7V,OAGxB,EAAK8B,SAAS,CAAC+T,aACfrZ,SAAS,IA7BK,yG,0DAyClB4Y,WAAY,SAACzS,GAAa,EAAKb,SAAS,CAACa,a,EAE1CkB,SAAY,SAACC,GACZA,EAAEC,iBACFD,EAAEE,kBAGH,EAAKlC,SAAS,CAAEtF,SAAS,EAAMmG,QAAQ,IAAvC,sBAA4C,sBAAA5C,EAAA,sEACtC,EAAKib,cAAc,EAAKrf,MAAM+S,OAAQ,EAAK/S,MAAMoZ,UADX,6C,EAU/CkG,YAAc,SAACnX,GACbA,EAAEoX,UACF,EAAKpZ,SAAS,CAAEtF,SAAS,EAAMmG,QAAQ,IAAvC,sBAA4C,sBAAA5C,EAAA,sEAEnC,EAAKib,cAAc,eAAgBlX,EAAE/F,OAAO2E,OAFT,6C,EAO9CyY,aAAgB,SAACrX,GACfA,EAAEC,iBAIH,EAAKjC,SAAS,CAAEtF,SAAS,EAAMmG,QAAQ,IAAvC,sBAA4C,sBAAA5C,EAAA,sEACpC4F,GAAc,EAAKhJ,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAM8Z,eAAeF,SAAS,EAAK5Z,MAAM8Z,eAAe6C,iBAAkBtV,MACtI,SAAA4C,GACE,GAAG3C,KAAE4D,SAASjB,EAAQ5F,MAGpB,EAAK8B,SAAS,CAACtF,SAAS,EACtBmG,QAAQiD,EAAQ5F,KAClB4F,QAAQ,SAGN,CACJ,IAAMwV,EAAgBxV,EAAQ5F,KAAKqb,QAAQxQ,QAAO,SAAApN,GAChD,OAAOA,EAAK8X,WAAa,EAAK5Z,MAAM8Z,eAAeF,UAAa9X,EAAKsY,oBAAsB,EAAKpa,MAAM8Z,eAAeD,OAAoC,aAA1B/X,EAAK4Y,kBAAqD,kBAAlB5Y,EAAKwY,YAGzKhT,KAAEC,QAAQkY,GAMG,EAAKtZ,SAAS,CAACtF,SAAS,EAC5BmG,QAAS,2CALzB,EAAKb,SAAS,CAACtF,SAAS,EACtBoJ,QAAQwV,QAnBiC,6C,EAuC9CE,kBAAmB,WAElB,OAAO,EAAK3f,MAAMiK,QAAQpI,KAAI,SAACC,EAAMqN,GAClC,OAAU,wBAAIxO,UAAU,gBAAgBqB,IAAKmN,GACxC,wBAAIxO,UAAU,iBAAd,IAA+B,kBAAC8H,EAAA,EAAD,CAAOvI,KAAK,QAAQ4G,KAAK,UAAUC,MAAOjF,EAAK8Y,aAAclS,SAAU,EAAK4W,eAC9G,wBAAI3e,UAAU,iBAAiBmB,EAAK8d,oBAClC,wBAAIjf,UAAU,iBAAiBmB,EAAKwY,UACzC,wBAAI3Z,UAAU,iBAAiBmB,EAAKsY,wB,+EArMpC,IAAMtK,EAAeC,KAAK/P,MAAM4I,SAChCmH,KAAK5J,SAAS,CAAEyC,UAAWkH,M,+BA4M3B,IAAIjP,EAAUkP,KAAK/P,MAAMa,QAQzB,OAGE,kBAAC+G,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIR,wBAAKA,UAAU,cAAf,+BAEA,kBAACmH,EAAA,EAAD,CAAKC,GAAG,KACd,wBAAIpH,UAAU,eAEX,kBAACsH,EAAA,EAAD,CAAMtH,UAAU,QACb,kBAAC2H,EAAA,EAAD,CAAWiI,OAAK,GAClB,kBAAChI,EAAA,EAAD,CAAOgI,OAAK,GACV,kBAAC9H,EAAA,EAAD,CAAOvI,KAAK,QAAQ4G,KAAK,SAAS4B,SAAUqH,KAAKkP,qBAAsB,IADzE,8BAKF,kBAAC3W,EAAA,EAAD,CAAWiI,OAAK,GACd,kBAAChI,EAAA,EAAD,CAAOgI,OAAK,GACV,kBAAC9H,EAAA,EAAD,CAAOvI,KAAK,QAAQ4G,KAAK,SAAS4B,SAAUqH,KAAKmP,qBAAsB,IADzE,uCAO4B,WAA3BnP,KAAK/P,MAAM+e,YAA2B,kBAAC,GAAD,CAAYzV,SAAUyG,KAAK/P,MAAMsJ,SAAU0Q,QAASjK,KAAK/P,MAAMgf,QAASrY,aAAcoJ,KAAKoP,iBAAmB1F,WAAc1J,KAAK0J,WAAYvR,SAAU6H,KAAKyP,eAAiB,GAC1L,WAA3BzP,KAAK/P,MAAM+e,YAA2B,kBAAC,GAAD,CAAa3F,SAAUrJ,KAAK/P,MAAMoZ,SAAUzS,aAAcoJ,KAAKpJ,aAAcwS,mBAAoBpJ,KAAKoJ,mBAAoBjR,SAAU6H,KAAK7H,WAAa,GAG1L,kBAACL,EAAA,EAAD,KACA,4BAAMkI,KAAK/P,MAAMgH,UAEjB,kBAACa,EAAA,EAAD,KACD,kBAACC,EAAA,EAAD,CAAKgP,GAAI,IACT,kBAAChP,EAAA,EAAD,KACEjH,EAAU,kBAACoI,EAAA,EAAD,CAAUC,UAAU,SAASC,QAAQ,YAAe,KAI7D7B,KAAEuY,QAAQ9P,KAAK/P,MAAMiK,SAC5B,kBAAC6J,GAAA,EAAD,CAAOE,YAAU,EAAClL,KAAK,KAAKnI,UAAU,kBAAkB8B,MAAO,CAACwR,MAAO,QACvE,+BACE,wBAAItT,UAAU,iBACZ,wBAAIA,UAAU,mBACd,wBAAIA,UAAU,kBAAd,iBACA,wBAAIA,UAAU,kBAAd,YACA,wBAAIA,UAAU,kBAAd,OAEDoP,KAAK4P,qBAER,iCAIQ,GAER5P,KAAK/P,MAAMka,YAA6C,yBAA/BnK,KAAK/P,MAAMka,WAAW7V,KAAmC,kBAAC,GAAD,CAAa6V,WAAYnK,KAAK/P,MAAMka,WAAYjW,MAAO8L,KAAK/O,MAAMiD,MAAOC,IAAK6L,KAAK/O,MAAMkD,IAAK1D,QAASuP,KAAK/O,MAAMR,UAAW,Q,GAlS9L4P,a,mDCucR0P,G,8MAxcbnR,YAAa,E,EACb3O,MAAQ,CACN+f,oBAAqB,KACrBC,iBAAkB,KAClBzW,OAAQ,GACRG,IAAK,GACL7I,SAAS,EACTof,WAAW,EACXlW,KAAK,GACLmW,UAAU,GACV3d,MAAO,MACPiO,SAAS,EACT2P,UAAU,EACV1gB,KAAK,GACL2gB,aAAa,EACb7G,MAAO,I,EAIT8G,cAAgB,WACd,EAAKla,SAAS,CACZia,aAAc,EAAKpgB,MAAMogB,e,EAiG7BE,kBAAoB,SAAAP,GAClB,EAAK5Z,SAAS,CAAE4Z,sBAAsBQ,UAAU,GAChDvZ,QAAQ,GACRwZ,UAAU,M,EAGZC,gB,uCAAkB,WAAMT,GAAN,eAAA5b,EAAA,yDAChB,EAAK+B,SAAS,CACZoT,MAAO,GACP6G,aAAa,KAEXJ,EALY,uBAMd,EAAK7Z,SAAS,CAAE8Z,WAAY,IANd,SAOI/V,GAAW,EAAKlJ,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAI8b,EAAiB5D,GAAGC,OAPpE,OAOV9C,EAPU,OAQhB,EAAKpT,SAAS,CACZoT,MAAOA,EAAMlV,OATC,OAahB,EAAK8B,SAAS,CACZ6Z,mBAAmBO,UAAU,GAC/BvZ,QAAQ,GACRwZ,UAAU,GACVP,WAAY,IAjBI,2C,wDAsBlBS,iBAAmB,SAAA9Z,GACjB,EAAKT,SAAS,CAAE4D,KAAMnD,EAAIxE,OAAO2E,MAAOwZ,UAAU,GAClDvZ,QAAQ,GACRwZ,UAAU,M,EAMZG,iBAAmB,SAACxY,GAElB,GADA,EAAKwH,cACFxH,EAAE/F,OAAOoO,QAAS,CACnB,IAAI0P,EAAYU,KAAUC,iBAAiB,EAAG,CAC5C/S,OAAQ,GACRgT,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,QAAQ,IAGZf,EAAYA,EAAUre,KAAI,SAAAsN,GAAC,OAAKA,EAAG,aAGnC,EAAKhJ,SAAS,CAAC+Z,YACflZ,QAAQ,UAGA,EAAKb,SAAS,CAAC+Z,UAAW,GAAIlZ,QAAQ,KAAK,gB,EAIrDka,iBAAmB,SAACta,GAAS,IAAD,EACLA,EAAIxE,OAAlB2E,EADmB,EACnBA,MADmB,EACbD,KAEb,EAAKX,SAAS,CACZga,UAAU,EACV1gB,KAAMsH,EACNwZ,UAAU,GACVvZ,QAAQ,GACRwZ,UAAU,M,EAMhBW,a,uCAAc,WAAOhZ,GAAP,eAAA/D,EAAA,6DACZ+D,EAAEC,iBADU,SAEQuB,GAAQ,EAAK3I,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAMP,MAF7D,OAEN2hB,EAFM,OAIR9Z,KAAE4D,SAASkW,EAAM/c,OAAS+c,EAAM/c,KAAKoD,WAAW,kBAClD,EAAKtB,SAAS,CAACga,UAAU,EACvBI,UAAW,2DAIXjZ,KAAE4D,SAASkW,EAAM/c,MACnB,EAAK8B,SAAS,CAACoa,UAAWa,EAAM/c,KAC9B8b,UAAS,EACT5d,MAAO,QAEN,EAAK4D,SAAS,CAACib,MAAOA,EAAM/c,KACjC8b,UAAS,EACTI,UAAU,KAjBE,2C,wDAuBZrY,SAAS,SAACC,GACRA,EAAEC,iBAEF,IAAIiZ,EAAM,GAGV,EAAKlb,SAAS,CAAEtF,SAAS,GAAzB,sBAAgC,8BAAAuD,EAAA,uDACxBkd,EAAU,EAAKthB,MAAMkgB,WAGpBnP,KAAK,EAAK/Q,MAAM+J,MAIfoF,EAAG,EARmB,YAQhBA,EAAEmS,EAAOxT,QARO,iCASvBjE,GAAW,EAAK7I,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK,EAAKlE,MAAM+f,oBAAoB3D,GAAGC,MAAOiF,EAAOnS,IAAI9H,MACtG,SAAA0C,GACFsX,EAAOtX,EAAK1F,KACM,OAAd0F,EAAK1F,KAAgB,EAAK8B,SAAS,CAAC5D,MAAM,UAAiB,EAAK4D,SAAS,CAAC5D,MAAM,WAZtD,OAQC4M,IARD,uBA2B3B,EAAKhJ,SAEH,CAACtF,SAAQ,EACRmG,QAASqa,EACT7Q,SAAS,EACR0P,UAAW,KAhCY,8C,qFAlMb,IAAD,OAClBnQ,KAAKpB,YAAa,EAElBoB,KAAK5J,SAAS,CAAEtF,SAAS,EAAMof,WAAW,GAA1C,sBAAiD,sBAAA7b,EAAA,sEAK3CoF,GAAU,EAAKxI,MAAMiD,MAAO,EAAKjD,MAAMkD,KAAKmD,MAAK,SAAA4D,GAGnD,GAAI3D,KAAE4D,SAASD,EAAM5G,OAAS4G,EAAM5G,KAAKoD,WAAW,kBAClD,EAAKtB,SAAS,CAACtF,SAAS,EACtBmG,QAAS,gEAGb,GAAI,EAAK2H,WAET,GAAI4S,MAAM1B,QAAQ5U,EAAM5G,MAAM,CAC9B,IAAMqV,EAAYzO,EAAM5G,KAAKxC,KAAK,SAAAC,GAAS,IACvByM,EAAgCzM,EAA1C8X,SAAuB7S,EAAmBjF,EAAzB6X,KAAgBvC,EADD,YACUtV,EADV,qBAExC,OAAO,aAAEyM,QAAMxH,SAAUqQ,MAI3B,EAAKjR,SAAS,CAACoD,OAAQmQ,EACrB7Y,SAAS,SAKT,EAAKsF,SAAS,CACZtF,SAAS,EACZmG,QAASiE,EAAM5G,UA9B6B,uBAoC3CoF,GAAO,EAAKzI,MAAMiD,MAAO,EAAKjD,MAAMkD,KAAKmD,MAAK,SAAAma,GAIhD,GAAIla,KAAE4D,SAASsW,EAAGnd,OAASmd,EAAGnd,KAAKoD,WAAW,kBAC5C,EAAKtB,SAAS,CAAC8Z,WAAW,EACxBO,UAAW,gEAIf,GAAI,EAAK7R,WAET,GAAI4S,MAAM1B,QAAQ2B,EAAGnd,MAAM,CAEzB,IAAMod,EAASD,EAAGnd,KAAKxC,KAAK,SAAAC,GAAS,IACrByM,EAAgCzM,EAAtCqc,KAAmBpX,EAAmBjF,EAAzBqc,KAAgB/G,EADH,YACYtV,EADZ,iBAElC,OAAO,aAAEyM,QAAMxH,SAAUqQ,MAQ7B,EAAKjR,SAAS,CAACuD,IAAK+X,EAClBxB,WAAW,SAOX,EAAK9Z,SAAS,CACZ8Z,WAAW,EACdO,UAAWgB,EAAGnd,UAtE8B,8C,6CAgFjD0L,KAAKpB,YAAa,I,oCAKlB,IAAMmB,EAAeC,KAAK/P,MAAMwQ,QAChCT,KAAK5J,SAAS,CAAEqK,SAAUV,M,+BA8InB,MAKkDC,KAAK/P,MAAtD+f,EALD,EAKCA,oBAAqBC,EALtB,EAKsBA,iBAAkBoB,EALxC,EAKwCA,MAEzCM,EAAe,CACnBC,QAAS,SAACC,EAAM5hB,GAAP,sBACJ4hB,EADI,CAEPC,OAAQ,+BACRC,UAAW,OACX,UAAW,CACPD,OAAQ,iCAKhB,OACE,kBAACja,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIT,kBAACkH,EAAA,EAAD,KACL,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACR,wBAAIpH,UAAU,cAAd,8BACA,kBAAC,UAAD,CACC0Y,YAAa,qBACZtS,MAAOgZ,EACPrX,SAAUqH,KAAKuQ,kBACfvG,QAAShK,KAAK/P,MAAMuJ,OAEpBwY,OAAWL,IAIb,kBAAC7Z,EAAA,EAAD,CAAKlH,UAAU,gBACdoP,KAAK/P,MAAMa,QAAU,kBAACoI,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,MAO/F,kBAAClB,EAAA,EAAD,CAAMtH,UAAU,OAAMuH,SAAU6H,KAAK7H,UAGrC,kBAACL,EAAA,EAAD,KACO,kBAACyG,GAAA,EAAD,CAAapO,KAAM,WAAWS,UAAU,YAAY+E,GAAI,aAAcgD,SAAUqH,KAAK4Q,iBAAkBnQ,QAAST,KAAK/P,MAAMwQ,QAASjC,MAAQ,8BAAM,kBAACiP,GAAA,EAAD,CAAOjb,MAAM,aAAb,0EAEzJ,kBAACsF,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACO,EAAA,EAAD,KAEQ,kBAACG,EAAA,EAAD,CAAOvI,KAAK,OAAOS,UAAU,eAAe+E,GAAG,SAASoB,KAAK,SAASC,MAAOgJ,KAAK/P,MAAM+J,KAAMrB,SAAUqH,KAAK2Q,iBAAkBrH,YAAY,kBAGlJ,kBAACvR,EAAA,EAAD,CAAKC,GAAG,KACV,kBAACU,EAAA,EAAD,CAAOvI,KAAK,SAAS6G,MAAM,SAASpG,UAAU,wBAI9C,kBAACkH,EAAA,EAAD,KACD,wBAAIpF,MAAQ,CAACF,MAAOwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMgH,UAEnD,kBAACc,EAAA,EAAD,CAAKC,GAAG,KACR,wBAAIpH,UAAU,eAEd,wBAAIA,UAAU,cAAd,2BACK,kBAACkH,EAAA,EAAD,KACL,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAER,kBAAC,UAAD,CACCsR,YAAa,oBACZtS,MAAOiZ,EACPtX,SAAUqH,KAAK0Q,gBACf1G,QAAShK,KAAK/P,MAAM0J,IACpBqY,OAAWL,IAGb,kBAAC7Z,EAAA,EAAD,CAAKlH,UAAU,gBACdoP,KAAK/P,MAAMigB,UAAY,kBAAChX,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,MAO/F,kBAACtB,EAAA,EAAD,KACA,wBAAIpF,MAAQ,CAACF,MAAOwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMwgB,YAEjDR,EACF,kBAAClM,GAAA,EAAD,CAAOkO,UAAQ,GACf,+BACE,4BACE,wCACA,oCACA,oCACA,qCACA,uCACA,wCAGJ,+BACA,4BACI,4BAAKhC,EAAiBiC,SACtB,4BAAKjC,EAAiB5D,GAAGC,OACzB,4BAAK2D,EAAiBkC,mBAEtB,4BAEJ,kBAACrZ,EAAA,EAAD,CAAQnD,GAAG,WAAWxF,KAAK,SAASqC,MAAM,UAAUwG,OAAK,EAACD,KAAK,MAC9DkX,EAAiBmC,OAEhBpS,KAAK/P,MAAMuZ,MACb,kBAAC6I,GAAA,EAAD,CAASC,UAAU,QAAQ1gB,OAAQoO,KAAK/P,MAAMogB,YAAahe,OAAO,WAAWI,OAAQuN,KAAKsQ,eACxF,kBAACiC,GAAA,EAAD,kBACA,kBAACC,GAAA,EAAD,KACE,wBAAI5hB,UAAU,eACboP,KAAK/P,MAAMuZ,MAAM1X,KAAI,SAACC,EAAKqN,GAAN,OAAY,wBAAInN,IAAKmN,GAAIrN,EAAK8X,gBAG7C,IAKP,4BAAKoG,EAAiBN,SACtB,4BAAKM,EAAiBwC,WAK1B,GAIH,kBAAC1a,EAAA,EAAD,CAAKC,GAAG,KACL,wBAAIpH,UAAU,eAEhB,kBAACsH,EAAA,EAAD,CAAMC,SAAU6H,KAAKoR,cACrB,wBAAIxgB,UAAU,cAAd,2BACF,kBAACkH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKgP,GAAG,KAEL,kBAACxO,EAAA,EAAD,KACS,kBAACG,EAAA,EAAD,CAAOvI,KAAK,SAASuiB,UAAU,IAAI9hB,UAAU,eAAe+E,GAAG,OAAOoB,KAAM,OAAOC,MAAOgJ,KAAK/P,MAAMP,KAAOiJ,SAAUqH,KAAKmR,iBAAkBvY,UAAQ,EAAC0Q,YAAY,qBAGlK,kBAACvR,EAAA,EAAD,CAAKgP,GAAI,GACT,kBAACxO,EAAA,EAAD,KAEA,kBAACG,EAAA,EAAD,CAAOvI,KAAK,SAAS6G,MAAM,SAASrB,GAAG,OAAOoB,KAAK,OAAOnG,UAAU,kCAOpF,kBAACkH,EAAA,EAAD,KACM,wBAAIpF,MAAQ,CAACF,MAAOwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMugB,YAGrD,kBAAC1Y,EAAA,EAAD,KACIkI,KAAK/P,MAAMmgB,SACb,kBAACrM,GAAA,EAAD,CAAOkO,UAAQ,GACf,+BACE,4BACE,uCACA,wCACA,wCACA,qCACA,uCACA,wCAGJ,+BACA,4BACI,4BAAKZ,EAAMjD,MACX,4BAAKiD,EAAMa,SACX,4BAAKb,EAAMsB,SACX,4BAAKtB,EAAMe,OACX,4BAAKf,EAAM1B,SACX,4BAAK0B,EAAMoB,WAIf,S,GAhccpS,aCgTLuS,G,8MA9SbhU,YAAa,E,EACb3O,MAAQ,CAENggB,iBAAkB,KAElBtW,IAAK,GAELuW,WAAW,EAEX1d,MAAO,MACP6d,aAAa,EACbwC,QAAQ,G,EAMVvC,cAAgB,WACd,EAAKla,SAAS,CACZia,aAAc,EAAKpgB,MAAMogB,e,EAmD7BzZ,a,uCAAe,WAAMqZ,GAAN,eAAA5b,EAAA,yDAGb,EAAK+B,SAAS,CACZ6Z,iBAAiB,GACjBI,aAAa,EACbwC,QAAQ,KAGP5C,EATU,yCAAA5b,EAAA,4DAAAA,EAAA,sDAUb,EAAK+B,SAAS,CAAE6Z,mBACZO,UAAU,GACdvZ,QAAQ,GACRwZ,UAAU,GACZP,WAAU,IAGF4C,EAAe,SAACC,EAAMC,GAC1B,IAAMC,EAAQ,GAQd,OAPAF,EAAKG,SAAQ,SAACC,GAAD,OAAOH,EAAKE,SAAQ,SAACE,GAG3BD,IAAOC,GACNH,EAAMjS,KAAKmS,SAGZF,GAGHI,EAAO,CAEb,6BACE,kBACA,uBACA,sBACA,sBACA,wBACA,mBACA,+BACA,sBACA,+BACA,qBACA,wBACA,oBACA,wBAEGC,EAAS,GACXC,EAAU,GACH,SAAAlf,GAAC,oBAAQ,IAAImf,IAAInf,KAWlB+K,EAAG,EA3DC,YA2DEA,EAAGiU,EAAKtV,QA3DV,kCA4DL3D,GAAS,EAAKnJ,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK8b,EAAiB5D,GAAGC,MAAO+G,EAAKjU,IAChF9H,MACA,SAAA3B,GAAW4B,KAAEC,QAAQ7B,EAAGrB,OACdgf,EAAOtS,KAAKrL,EAAGrB,KAAKmf,YAAY,GAAGpH,GAAGC,UA/DtC,QA2DkBlN,IA3DlB,0BA2EZ7H,KAAEC,QAAQ8b,GA3EE,iBA4EPlU,EAAG,EA5EI,aA4EDA,EAAGkU,EAAOvV,QA5ET,kCA6ETxD,GAAa,EAAKtJ,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK8b,EAAiB5D,GAAGC,MAAOgH,EAAOlU,IACtF9H,MACA,SAAA3B,GAAgC,IAAD,EAApB4B,KAAEC,QAAQ7B,EAAGrB,QACxBif,GAAY,EAAAA,GAAUrR,OAAV,qBAAoBvM,EAAGrB,KAAK4X,eAhF1B,QA4EiB9M,IA5EjB,yCAwFK5E,GAAY,EAAKvJ,MAAMiD,MAAO,EAAKjD,MAAMkD,IAAK8b,EAAiB5D,GAAGC,OAxFvE,QAwFXpS,EAxFW,OA2FXwZ,EAAexZ,EAAQ5F,KAAK6K,QAAO,SAAApN,GAAI,OAAIA,EAAK4hB,oBAAsB1D,EAAiBzR,SACvFoV,EAAcF,EAAavU,QAAO,SAAApN,GAAI,MAAsB,UAAlBA,EAAKwY,YAC/CsJ,EAAgBH,EAAavU,QAAO,SAAApN,GAAI,MAAsB,YAAlBA,EAAKwY,YACjDuJ,EAAYJ,EAAavU,QAAO,SAAApN,GAAI,MAAsB,aAAlBA,EAAKwY,YAC7CwJ,EAAYL,EAAavU,QAAO,SAAApN,GAAI,MAAsB,UAAlBA,EAAKwY,YAI7CyJ,EAAYN,EAAa5hB,KAAK,SAAAC,GAElC,MAAO,CAAEkiB,SADYliB,EAAbkiB,aAGRniB,KAAI,SAAAuC,GAAC,OAAIA,EAAE4f,YAGLC,EAAapB,EAAakB,EAAWT,GAEvCY,EAAUD,EAAYnW,OAAS+V,EAAU/V,OAAQgW,EAAUhW,OAC3DqW,EAAOV,EAAa3V,OAASoW,EACjC,EAAK/d,SAAS,CACZie,SAAUX,EAAa3V,OACtBuW,MAAOV,EAAY7V,OACnBwW,IAAKT,EAAU/V,OACfyW,QAAST,EAAUhW,OACnB0W,QAASZ,EAAc9V,OACvBoW,WACAC,QACAlE,WAAU,EACV2C,QAAQ,IAvHI,gG,2IA/CM,IAAD,OAClB7S,KAAKpB,YAAa,EAClBoB,KAAK5J,SAAS,CAAG8Z,WAAW,GAA5B,sBAAmC,sBAAA7b,EAAA,sEAE7BqF,GAAO,EAAKzI,MAAMiD,MAAO,EAAKjD,MAAMkD,KAAKmD,MAAK,SAAAma,GACjD,GAAIla,KAAE4D,SAASsW,EAAGnd,OAASmd,EAAGnd,KAAKoD,WAAW,kBAC7C,EAAKtB,SAAS,CAAC8Z,WAAW,EACxBO,UAAW,gEAMb,GAAI,EAAK7R,WAET,GAAI4S,MAAM1B,QAAQ2B,EAAGnd,MAAM,CAEzB,IAAMod,EAASD,EAAGnd,KAAKxC,KAAK,SAAAC,GAAS,IACrByM,EAAmCzM,EAAzCqc,KAAsBpX,EAAmBjF,EAA5BmgB,QAAmB7K,EADN,YACetV,EADf,oBAElC,OAAO,aAAEyM,QAAMxH,SAAUqQ,MAK7B,EAAKjR,SAAS,CAACuD,IAAK+X,EAClBxB,WAAW,SAKX,EAAK9Z,SAAS,CACZ8Z,WAAW,EACdO,UAAWgB,EAAGnd,UA9BgB,8C,6CAyCnC0L,KAAKpB,YAAa,I,+BA4IV,IAEAqR,EAAqBjQ,KAAK/P,MAA1BggB,iBAEF0B,EAAe,CACnBC,QAAS,SAACC,EAAM5hB,GAAP,sBACJ4hB,EADI,CAEPC,OAAQ,+BACRC,UAAW,OACX,UAAW,CACPD,OAAQ,iCAKhB,OACE,kBAACja,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACV,wBAAIpH,UAAU,gBAIZ,wBAAIA,UAAU,cAAd,+BAEF,kBAACmH,EAAA,EAAD,CAAKC,GAAG,KACR,wBAAIpH,UAAU,eAGT,kBAACkH,EAAA,EAAD,KACL,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAER,kBAAC,UAAD,CACCsR,YAAc,oBACbtS,MAAOiZ,EACPtX,SAAUqH,KAAKpJ,aACfoT,QAAShK,KAAK/P,MAAM0J,IACpBqY,OAAWL,IAGb,kBAAC7Z,EAAA,EAAD,CAAKlH,UAAU,gBACdoP,KAAK/P,MAAMigB,UAAY,kBAAChX,EAAA,EAAD,CAAStI,UAAU,UAAUuI,UAAU,SAASC,QAAQ,YAAe,MAK/F,kBAACtB,EAAA,EAAD,KACA,wBAAIpF,MAAQ,CAACF,MAAOwN,KAAK/P,MAAMuC,QAASwN,KAAK/P,MAAMwgB,YAEjDzQ,KAAK/P,MAAM4iB,OACb,kBAAC9O,GAAA,EAAD,CAAOkO,UAAQ,GACf,+BACE,4BACE,wCACA,oCACA,6CACA,wCACA,uCAGJ,+BACA,4BACI,4BAAKhC,EAAiBjZ,OACtB,4BAAKiZ,EAAiBkC,mBACtB,gCAAK,kBAACrZ,EAAA,EAAD,CAAQnD,GAAG,WAAWxF,KAAK,SAASqC,MAAM,UAAUwG,OAAK,EAACD,KAAK,MACvEiH,KAAK/P,MAAMokB,UAGZ,kBAAChC,GAAA,EAAD,CAASC,UAAU,QAAQ1gB,OAAQoO,KAAK/P,MAAMogB,YAAahe,OAAO,WAAWI,OAAQuN,KAAKsQ,eACxF,kBAACiC,GAAA,EAAD,kBACA,kBAACC,GAAA,EAAD,KACE,wBAAI5hB,UAAU,eACb,wCAAeoP,KAAK/P,MAAMwkB,SAC1B,oCAAWzU,KAAK/P,MAAMqkB,OACtB,oCAAWtU,KAAK/P,MAAMskB,KACtB,wCAAevU,KAAK/P,MAAMukB,aAI3B,4BAAKxU,KAAK/P,MAAMkkB,UAChB,4BAAKnU,KAAK/P,MAAMmkB,UAIpB,Q,GAnSiB/T,a,UCWvB,IA2CQqU,GACJ,CAACC,mBC5DE,SAA4BC,EAAaC,GAE5C,MAAO,CACH1kB,K1CRwB,mB0CSxBG,QAAO,gBAAMskB,EAAcC,KDyD9BC,qBCpDE,SAA8BC,GAEjC,MAAO,CACH5kB,K1CdwB,oB0CexBG,QAAUykB,IDiDbC,iBC5CE,SAA0BC,EAAWC,GAExC,MAAO,CACH/kB,K1CrBsB,iB0CsBtBG,QAAO,gBAAM2kB,EAAYC,KDyC5BC,mBCpCE,SAA4B5kB,GAE/B,MAAO,CACHJ,K1C5BsB,kB0C6BtBG,QAAUC,IDiCb6kB,iBC7BE,SAA0BC,EAAWC,GAExC,MAAO,CACHnlB,K1ClCsB,iB0CmCtBG,QAAO,gBAAM+kB,EAAYC,KD0B5BC,mBCrBE,SAA4B/kB,GAE/B,MAAO,CACHL,K1CzCsB,kB0C0CtBG,QAAUE,IDkBb2V,YCdE,SAAqBqP,EAAUC,GAElC,MAAO,CACHtlB,K1C/CqB,gB0CgDrBG,QAAO,gBAAMklB,EAAWC,KDW3B3P,cCNE,SAAuB4P,GAE1B,MAAO,CACHvlB,K1CtDqB,iB0CuDrBG,QAAUolB,IDGbC,cCCE,SAAuBC,EAAQC,GAElC,MAAO,CACH1lB,K1C5DmB,c0C6DnBG,QAAO,gBAAMslB,EAASC,KDJzBC,gBCSE,SAAyBrlB,GAE5B,MAAO,CACHN,K1CnEmB,e0CoEnBG,QAAUG,IDZbslB,kBCgBE,SAA2BC,EAASC,GAEvC,MAAO,CACH9lB,K1CzEuB,kB0C0EvBG,QAAO,gBAAM0lB,EAAUC,KDnB1BC,oBCwBE,SAA6BxlB,GAEhC,MAAO,CACHP,K1ChFuB,mB0CiFvBG,QAAUI,KDzBDylB,eAAWC,cA1BA,SAAAnmB,GACtB,MAAO,CACHomB,mBAAoBpmB,EAAMD,OAC1BsmB,iBAAkBrmB,EAAMM,WACxBgmB,iBAAkBtmB,EAAMO,WACxBrB,MAAOc,EAAMd,MACbsB,QAASR,EAAMQ,QACfC,SAAUT,EAAMS,YAmB2BgkB,GAAzB0B,EA1DZ,SAAAnlB,GAEd,IAAMiD,EAAOjD,EAAMiD,MACbC,EAAKlD,EAAMkD,IACX4C,EAAM9F,EAAM8F,KAIhB,OACE,kBAAC,IAAD,KACC,kBAAC,GAAD,CAAcyf,OAAK,EAACpP,KAAK,IAAID,UAAW,kBAAM,kBAAC,GAAD,SAC7C,kBAAC,GAAD,CAAcqP,OAAK,EAACpP,KAAK,SAASD,UAAW,iBAAM,WACnD,kBAAC,GAAD,CAAcqP,OAAK,EAACpP,KAAK,SAASD,UAAW,iBAAM,WACnD,kBAAC,GAAD,CAAcqP,OAAK,EAACpP,KAAK,OAAOD,UAAW,kBAAM,kBAAC,GAAD,SACjD,kBAAC,GAAD,CAAcqP,OAAK,EAACpP,KAAK,WAAWD,UAAW,kBAAM,kBAAC,GAAD,CAASjT,MAAOA,EAAO6C,KAAMA,OAClF,kBAAC,GAAD,CAAcyf,OAAK,EAACpP,KAAK,aAAaO,OAAQ,kBAAI,kBAAC,GAAD,CAAW5K,QAAS9L,EAAMqlB,iBAAmB9Z,cAAiBvL,EAAM+jB,iBAAkB1Y,gBAAkBrL,EAAMkkB,mBAAqBlY,SAAUhM,EAAMslB,iBAAkB3Z,eAAkB3L,EAAMmkB,iBAAkB7Y,iBAAmBtL,EAAMskB,wBAC1R,kBAAC,GAAD,CAAciB,OAAK,EAACpP,KAAK,WAAWO,OAAQ,kBAAI,kBAAC,GAAD,CAAcjT,MAAOzD,EAAMolB,mBAAqBvf,YAAe7F,EAAM0jB,mBAAoBhe,cAAgB1F,EAAM6jB,0BAC/J,kBAAC,GAAD,CAAc0B,OAAK,EAACpP,KAAK,OAAOO,OAAQ,kBAAM,kBAAC,GAAD,CAAQjX,SAAUO,EAAMP,SAAWoG,YAAe7F,EAAM8kB,kBAAmBpf,cAAgB1F,EAAMilB,yBAC/I,kBAAC,GAAD,CAAcM,OAAK,EAACpP,KAAK,WAAWO,OAAQ,kBAAI,kBAAC,GAAD,CAAQjT,MAAOzD,EAAMolB,mBAAoBniB,MAAOA,EAAOC,IAAKA,EAAKwC,cAAgB1F,EAAM6jB,0BACvI,kBAAC,GAAD,CAAc0B,OAAK,EAACpP,KAAK,YAAYO,OAAQ,kBAAI,kBAAC,GAAD,CAAU5K,QAAS9L,EAAMqlB,iBAAkBha,gBAAiBrL,EAAMkkB,mBAAoBzgB,MAAOzD,EAAMolB,mBAAoBniB,MAAOA,EAAOC,IAAKA,EAAKwC,cAAgB1F,EAAM0F,mBACtN,kBAAC,GAAD,CAAc6f,OAAK,EAACpP,KAAK,aAAaO,OAAQ,kBAAI,kBAAC,GAAD,CAAW1K,SAAUhM,EAAMslB,iBAAkBha,iBAAmBtL,EAAMskB,mBAAqB7gB,MAAOzD,EAAMolB,mBAAoBniB,MAAOA,EAAOC,IAAKA,EAAKwC,cAAgB1F,EAAM0F,mBAC5N,kBAAC,GAAD,CAAc6f,OAAK,EAACpP,KAAK,kBAAkBO,OAAQ,kBAAI,kBAAC,GAAD,CAAgBjX,SAAUO,EAAMP,SAAUiR,iBAAkB1Q,EAAMilB,oBAAqBxhB,MAAOzD,EAAMolB,mBAAoBniB,MAAOA,EAAOC,IAAKA,EAAKwC,cAAgB1F,EAAM0F,mBAC7N,kBAAC,GAAD,CAAc6f,OAAK,EAACpP,KAAK,YAAYO,OAAQ,kBAAI,kBAAC,GAAD,CAAWjX,SAAUO,EAAMP,SAAUiR,iBAAkB1Q,EAAMilB,oBAAqBxhB,MAAOzD,EAAMolB,mBAAoB1f,cAAgB1F,EAAM6jB,qBAAsB7X,SAAUhM,EAAMslB,iBAAkBha,iBAAmBtL,EAAMskB,mBAAoBxY,QAAS9L,EAAMqlB,iBAAkBha,gBAAiBrL,EAAMkkB,mBAAoBhmB,MAAO8B,EAAM9B,MAAO+E,MAAOA,EAAOC,IAAKA,EAAMgS,YAAelV,EAAMkV,YAAaL,cAAgB7U,EAAM6U,mBAChd,kBAAC,GAAD,CAAc0Q,OAAK,EAACpP,KAAK,YAAYO,OAAQ,kBAAI,kBAAC,GAAD,CAAUlX,QAASQ,EAAMR,QAAUqG,YAAe7F,EAAM0kB,cAAehf,cAAgB1F,EAAM6kB,qBAC9I,kBAAC,GAAD,CAAcU,OAAK,EAACpP,KAAK,YAAYD,UAAW,kBAAI,kBAACsP,GAAD,CAAQviB,MAAOA,EAAOC,IAAKA,EAAK1D,QAASQ,EAAMR,aACnG,kBAAC,GAAD,CAAc+lB,OAAK,EAACpP,KAAK,SAASD,UAAW,kBAAI,kBAAC,GAAD,CAAOjT,MAAOA,EAAOC,IAAKA,OAC3E,kBAAC,GAAD,CAAcqiB,OAAK,EAACpP,KAAK,YAAYD,UAAW,kBAAI,kBAAC,GAAD,CAAUjT,MAAOA,EAAOC,IAAKA,YEkC1EuiB,I,6LAzEX,OACE,kBAAC7e,EAAA,EAAD,CAAWlC,GAAG,GAAGghB,OAAO,GAIzB,4BAAQ/lB,UAAU,mCACnB,yBAAKA,UAAU,YACf,yBAAKA,UAAU,aACb,kBAACkH,EAAA,EAAD,KACE,yBAAKlH,UAAU,qBACb,wBAAIA,UAAU,QAAd,gHAQN,kBAACiH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKlH,UAAU,eACb,kBAACmH,EAAA,EAAD,CAAKC,GAAG,KAIF,kBAAC,IAAD,CAAiB3G,KAAK,UAAUT,UAAU,eAE5C,wBAAIgmB,MAAM,aAAV,OACA,uBAAGA,MAAM,aAAT,wCACA,uBAAGA,MAAM,aAAT,sCAGJ,kBAAC7e,EAAA,EAAD,CAAKC,GAAG,KACR,kBAAC,IAAD,CAAiB3G,KAAK,YAAYT,UAAU,eACxC,wBAAIgmB,MAAM,aAAV,gBACA,uBAAGA,MAAM,aAAT,gCACA,uBAAGA,MAAM,aAAT,gEAGF,kBAAC7e,EAAA,EAAD,CAAKC,GAAG,KACR,kBAAC,IAAD,CAAiB3G,KAAK,QAAQT,UAAU,eACtC,wBAAIgmB,MAAM,aAAV,eACA,uBAAGA,MAAM,aAAT,8EAQL,kBAAC/e,EAAA,EAAD,CAAW8e,OAAK,EAAC/lB,UAAU,mBAChC,kBAACkH,EAAA,EAAD,CAAKlH,UAAU,YACR,kBAACmH,EAAA,EAAD,CAAKC,GAAG,KACT,wDACC,uBAAGoI,KAAK,qBAAqB/N,OAAO,SAASwkB,IAAI,uBAAsB,wCAGvE,kBAAC9e,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,iBACtB,uD,GA7DeyP,c,sECwNTyW,GA/LA,WAAO,IAAD,EACS5lB,oBAAS,GADlB,mBACZU,EADY,KACJmlB,EADI,OAE0CjjB,IAArDoC,EAFW,EAEXA,KAAMoR,EAFK,EAELA,gBAAiBC,EAFZ,EAEYA,kBAAmByP,EAF/B,EAE+BA,OAC5CvkB,EAAS,kBAAMskB,GAAWnlB,IAHb,EAKOV,mBAAS,CACjC6K,OAAO,UACPqB,OAAO,SAPU,mBAKZnN,EALY,KAKLmG,EALK,KAWb6gB,EAAqB,kBACzBD,EAAO,CACLE,SAAU7jB,OAAOI,SAAS0jB,UAbX,EAiBMjmB,mBAAS,GAjBf,mBAiBV2B,EAjBU,KAiBJukB,EAjBI,KAsBnB,OACE,yBAAKxmB,UAAU,iBACb,kBAACymB,GAAA,EAAD,CAAQ7kB,MAAM,QAAQ8kB,OAAK,EAACC,OAAO,KAAK3mB,UAAU,KAChD,kBAACiH,EAAA,EAAD,KACE,kBAAC2f,GAAA,EAAD,CAAa5mB,UAAU,SAEvB,kBAAC6mB,GAAA,EAAD,CAAejmB,QAASiB,IACxB,kBAACd,EAAA,EAAD,CAAUC,OAAQA,EAAQC,QAAM,GAC9B,kBAACc,EAAA,EAAD,CAAK/B,UAAU,UAAUiB,QAAM,GAE5ByV,GACC,kBAAC,IAAMxU,SAAP,KACF,kBAACvB,EAAA,EAAD,KACI,kBAACuH,EAAA,EAAD,CACAtG,MAAOvC,EAAM8L,OACZnL,UAAU,QACVY,QAAS,WAAO4lB,EAAQ,GACvBhhB,EAAS,CACP2F,OAAO,UACRqB,OAAO,WAKN,kBAAC,IAAD,CAAiB/L,KAAK,aAAaT,UAAU,SAXjD,QAkBD,kBAACW,EAAA,EAAD,KACA,kBAACuH,EAAA,EAAD,CACDtG,MAAOvC,EAAMmN,OACXxM,UAAU,OAEVY,QAAS,WAAO4lB,EAAQ,GACtBhhB,EAAS,CACP2F,OAAO,OACRqB,OAAO,cAKP,kBAAC,IAAD,CAAiB/L,KAAK,YAAYT,UAAU,SAZhD,mBA0BL,kBAAC+B,EAAA,EAAD,CAAK/B,UAAU,oBAAoBiB,QAAM,IACrCyV,GACA,kBAAC/V,EAAA,EAAD,KACE,kBAACuH,EAAA,EAAD,CACEnD,GAAG,aACHnD,MAAM,UACN5B,UAAU,aACVY,QAAS,WAAO+V,EAAkB,MAJpC,WAWHD,GACC,kBAACoQ,GAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACC,GAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,EAACniB,GAAG,mBAC3B,yBACE9E,IAAKqF,EAAK6hB,QACVhnB,IAAI,UACJH,UAAU,kCACVsT,MAAM,QAGV,kBAAC8T,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAcC,QAAM,GAAEhiB,EAAKa,MAM3B,kBAACkhB,GAAA,EAAD,CACEtiB,GAAG,cACHnE,QAAS,kBAAMylB,MAEf,kBAAC,IAAD,CAAiB5lB,KAAK,YAAYT,UAAU,SAJ9C,gBAWN0W,GACA,kBAAC3U,EAAA,EAAD,CAAK/B,UAAU,YAAYiB,QAAM,GAC/B,kBAACN,EAAA,EAAD,KACE,kBAACuH,EAAA,EAAD,CACEnD,GAAG,aACHnD,MAAM,UACNwG,OAAK,EACLxH,QAAS,kBAAM+V,EAAkB,MAJnC,YAWLD,GACC,kBAAC3U,EAAA,EAAD,CACE/B,UAAU,oCACViB,QAAM,EACNa,MAAO,CAAEylB,UAAW,MAEpB,kBAAC5mB,EAAA,EAAD,KACE,0BAAMX,UAAU,aACd,yBACEC,IAAKqF,EAAK6hB,QACVhnB,IAAI,UACJH,UAAU,sDACVsT,MAAM,OAER,wBAAItT,UAAU,kBAAkBsF,EAAKa,QAIzC,kBAACxF,EAAA,EAAD,KAEE,kBAAC,IAAD,CAAiBF,KAAK,YAAYT,UAAU,SAC5C,kBAAC,IAAD,CACEwB,GAAG,IACHuD,GAAG,cACHnE,QAAS,WACPylB,MAJJ,gBAcX3P,GAAuB,kBAACxP,EAAA,EAAD,KACrB,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIpH,UAAU,QACzB,kBAAC,EAAD,CAAS6B,OAAQA,EAAQb,QAASA,EAAQiB,KAAMA,KAEhD,kBAACkF,EAAA,EAAD,CAAKC,GAAG,IAAIogB,cAAY,OAAOxnB,UAAU,QAE3C,kBAACiH,EAAA,EAAD,CAAW8e,OAAK,EAAC/lB,UAAWa,IAAW,UAAW,CAAC,UAAWG,KAE7D,kBAAC,GAAD,CAASsC,MAAOgC,EAAKhC,MAAOC,IAAK+B,EAAK/B,IAAK4C,KAAMb,EAAKa,WAIrDuQ,GACG,kBAAC,GAAD,Q,SCpNM+Q,kB,mBCEf,WACEC,KAAQC,IAAIC,KACZF,KAAQC,IAAIE,KACZH,KAAQC,IAAIG,KACZJ,KAAQC,IAAII,KACZL,KAAQC,IAAIK,KACZN,KAAQC,IAAIxlB,KACZulB,KAAQC,IAAIM,KACZP,KAAQC,IAAIO,KACZR,KAAQC,IAAIQ,MCQdC,GAIA,IAAMC,GCZUC,YAAYppB,GDyCbqpB,GA1BH,WAGV,OAFoBrlB,IAAZhD,QAGC,kBAAC,EAAD,MAIP,kBAAC,KAAD,CAAUmoB,MAAQA,IAClB,kBAAC,IAAD,CAAQ3lB,QAASA,IACf,yBAAKqC,GAAG,MAAM/E,UAAU,gCACtB,kBAAC,GAAD,CAAQqoB,MAAQA,SE1BJG,QACW,cAA7B/lB,OAAOI,SAAS4lB,UAEe,UAA7BhmB,OAAOI,SAAS4lB,UAEhBhmB,OAAOI,SAAS4lB,SAASC,MACvB,2D,cCCNC,IAAS5R,OACP,mBzCX2B,SAAC,GAIvB,IAHL6R,EAGI,EAHJA,SAGI,IAFJC,0BAEI,MAFiBrmB,EAEjB,EADDsmB,EACC,mDAC0CxoB,qBAD1C,mBACGoW,EADH,KACoBqS,EADpB,OAEoBzoB,qBAFpB,mBAEGgF,EAFH,KAES0jB,EAFT,OAG4B1oB,qBAH5B,mBAGG2oB,EAHH,KAGgBC,EAHhB,OAI0B5oB,oBAAS,GAJnC,mBAIGJ,EAJH,KAIYipB,EAJZ,OAK8B7oB,oBAAS,GALvC,mBAKG8oB,EALH,KAKcC,EALd,KAOJvjB,qBAAU,YACO,uCAAG,oCAAArC,EAAA,sEACY6lB,IAAkBR,GAD9B,UACVS,EADU,OAEhBL,EAASK,IAEL9mB,OAAOI,SAASuP,OAAOoJ,SAAS,SAJpB,iCAKa+N,EAAcC,yBAL3B,gBAKN5S,EALM,EAKNA,SACRiS,EAAmBjS,GANL,yBASc2S,EAAc7S,kBAT5B,WASVA,EATU,OAWhBqS,EAAmBrS,IAEfA,EAbY,kCAcK6S,EAAcE,UAdnB,QAcRnkB,EAdQ,OAed0jB,EAAQ1jB,GAfM,QAkBhB6jB,GAAW,GAlBK,4CAAH,qDAoBfO,KAEC,IAEH,IAAMC,EAAc,uCAAG,0CAAAlmB,EAAA,6DAAOI,EAAP,+BAAgB,GACrCwlB,GAAa,GADQ,kBAGbJ,EAAYU,eAAe9lB,GAHd,gFAOnBwlB,GAAa,GAPM,sCASFJ,EAAYQ,UATV,QASfnkB,EATe,OAUrB0jB,EAAQ1jB,GACRyjB,GAAmB,GAXE,+DAAH,qDAcdS,EAAsB,uCAAG,4BAAA/lB,EAAA,6DAC7B0lB,GAAW,GADkB,SAEvBF,EAAYO,yBAFW,uBAGVP,EAAYQ,UAHF,OAGvBnkB,EAHuB,OAI7B6jB,GAAW,GACXJ,GAAmB,GACnBC,EAAQ1jB,GANqB,2CAAH,qDAQ5B,OACE,kBAACvC,EAAa6mB,SAAd,CACExjB,MAAO,CACLsQ,kBACApR,OACApF,UACAkpB,YACAO,iBACAH,yBACAK,iBAAkB,kBAAUZ,EAAYY,iBAAZ,MAAAZ,EAAW,YACvCtS,kBAAmB,kBAAUsS,EAAYtS,kBAAZ,MAAAsS,EAAW,YACxCnc,iBAAkB,kBAAUmc,EAAYnc,iBAAZ,MAAAmc,EAAW,YACvCa,kBAAmB,kBAAUb,EAAYa,kBAAZ,MAAAb,EAAW,YACxC7C,OAAQ,kBAAU6C,EAAY7C,OAAZ,MAAA6C,EAAW,cAG9BL,KyC/DL,CACEmB,OAAQC,GAAOD,OACfE,UAAWD,GAAOE,SAClBC,aAAc1nB,OAAOI,SAAS0jB,OAC9B6D,SAAUJ,GAAOI,SACjBvB,mBAduB,SAAAjS,GACzBlU,GAAQ0N,KACNwG,GAAYA,EAASC,UACjBD,EAASC,UACTpU,OAAOI,SAASC,YAapB,kBAAC,GAAD,OAGFF,SAASynB,eAAe,SDkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9jB,MAAK,SAAA+jB,GACjCA,EAAaC,kB","file":"static/js/main.e008af89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","module.exports = __webpack_public_path__ + \"static/media/gen1.29bf9ca8.png\";","module.exports = __webpack_public_path__ + \"static/media/intelli.5f48cfb2.png\";","module.exports = __webpack_public_path__ + \"static/media/gen2.eb386f70.png\";","module.exports = __webpack_public_path__ + \"static/media/gen2grapg.f81be993.png\";","module.exports = __webpack_public_path__ + \"static/media/googleapistorage.33f4576b.png\";","module.exports = __webpack_public_path__ + \"static/media/serviceacc.2bc3dfb1.png\";","export const intelliCreds = { url: '',\n                              clientid: '',\n                               secret:'' }\n\n\n\nexport const lake1Creds = { \n                            repname:'',\n                            tenantid: '',\n                            azureclientid: '',\n                            azuresecret:'' }\n\nexport const lake2Creds = { \n                            container:'',\n                             azureconnectstring: ''\n                                   }\n\nexport const tasks = { \n                              items: []\n                      }\n\n export const awCreds = { \n      awurl: '',\n      apikey: '',\n      awadmin: '',\n      awpassword:'',\n      lgid:''\n                }\n\n\n export const googles = { \n                  bucket: '',\n                  fileName:''\n          }","\n\nimport { combineReducers } from 'redux';\n\nimport IntelliCreds from './intelli_creds';\nimport Lake1Creds from './lake1_creds';\nimport Lake2Creds from './lake2_creds';\nimport tasks from './task_reducer';\nimport AwCreds from './aw_creds';\nimport goocreds from './google_creds';\n\nconst rootReducer = combineReducers({\n  icreds: IntelliCreds,\n  lake1creds: Lake1Creds,\n  lake2creds: Lake2Creds,\n  tasks: tasks,\n  awcreds: AwCreds,\n  goocreds: goocreds\n \n})\n\nexport default rootReducer;","\n\nimport * as ActionTypes from '../actions/ActionTypes';\nimport {intelliCreds} from './forms';\n\nexport default function (state = intelliCreds, action){\n    switch(action.type){\n        case ActionTypes.INTELLI_SELECTED:\n          \n            return Object.assign({},state, action.payload)\n\n            case ActionTypes.INTELLI_RETRIEVED:\n                    \n                    return Object.assign({},state, action.payload)\n\n        default:\n            return state;\n    }\n    \n}","export const INTELLI_SELECTED = 'INTELLI_SELECTED';\n\n\nexport const INTELLI_RETRIEVED ='INTELLI_RETRIEVED';\n\nexport const LAKE1_SELECTED = 'LAKE1_SELECTED';\n\nexport const LAKE1_RETRIEVED ='LAKE1_RETRIEVED';\n\nexport const LAKE2_SELECTED = 'LAKE2_SELECTED';\n\nexport const LAKE2_RETRIEVED ='LAKE2_RETRIEVED';\n\nexport const TASK_SELECTED = 'TASK_SELECTED';\n\nexport const TASK_RETRIEVED ='TASK_RETRIEVED';\n\nexport const AW_SELECTED = 'AW_SELECTED';\n\nexport const AW_RETRIEVED ='AW_RETRIEVED';\n\nexport const GOOGLE_SELECTED = 'GOOGLE_SELECTED';\n\nexport const GOOGLE_RETRIEVED ='GOOGLE_RETRIEVED';","\n\nimport * as ActionTypes from '../actions/ActionTypes';\nimport { lake1Creds} from './forms';\n\nexport default function (state = lake1Creds, action){\n    switch(action.type){\n        case ActionTypes.LAKE1_SELECTED:\n          \n            return Object.assign({},state, action.payload)\n\n            case ActionTypes.LAKE1_RETRIEVED:\n                    \n                    return Object.assign({},state, action.payload)\n\n        default:\n            return state;\n    }\n    \n}","\n\nimport * as ActionTypes from '../actions/ActionTypes';\nimport { lake2Creds} from './forms';\n\nexport default function (state = lake2Creds, action){\n    switch(action.type){\n        case ActionTypes.LAKE2_SELECTED:\n          \n            return Object.assign({},state, action.payload)\n\n            case ActionTypes.LAKE2_RETRIEVED:\n                    \n                    return Object.assign({},state, action.payload)\n\n        default:\n            return state;\n    }\n    \n}","\n\nimport * as ActionTypes from '../actions/ActionTypes';\nimport { tasks} from './forms';\n\nexport default function (state = tasks, action){\n    switch(action.type){\n        case ActionTypes.TASK_SELECTED:\n          \n            return Object.assign({},state, action.payload)\n\n            case ActionTypes.TASK_RETRIEVED:\n                    \n                    return Object.assign({},state, action.payload)\n\n        default:\n            return state;\n    }\n    \n}","\n\nimport * as ActionTypes from '../actions/ActionTypes';\nimport {awCreds} from './forms';\n\nexport default function (state = awCreds, action){\n    switch(action.type){\n        case ActionTypes.AW_SELECTED:\n          \n            return Object.assign({},state, action.payload)\n\n            case ActionTypes.AW_RETRIEVED:\n                    \n                    return Object.assign({},state, action.payload)\n\n        default:\n            return state;\n    }\n    \n}","\n\nimport * as ActionTypes from '../actions/ActionTypes';\nimport {googles} from './forms';\n\nexport default function (state = googles, action){\n    switch(action.type){\n        case ActionTypes.GOOGLE_SELECTED:\n          \n            return Object.assign({},state, action.payload)\n\n            case ActionTypes.GOOGLE_RETRIEVED:\n                    \n                    return Object.assign({},state, action.payload)\n\n        default:\n            return state;\n    }\n    \n}","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React, { useState } from 'react';\nimport  { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nconst SubMenu = props => {\n  \n  const [collapsed, setCollapsed] = useState(false)\n  const toggleNavbar = () => setCollapsed(!collapsed)\n  const { icon, title, items } = props;\n \n  return (\n    <div>\n      <NavItem onClick={toggleNavbar} className={classNames({'menu-open': !collapsed})}>\n        <NavLink className=\"dropdown-toggle\">\n          <FontAwesomeIcon icon={icon} className=\"mr-2\"/>{title}\n        </NavLink>\n      </NavItem>\n      <Collapse isOpen={!collapsed} navbar className={classNames('items-menu',{'mb-1': !collapsed})}>\n        {items.map((item, index) => (\n            <NavItem key={index} className=\"pl-1\">\n              <NavLink tag={Link} to={item.target}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n            ))}\n      </Collapse>\n    </div>\n  );\n}\n\nexport default SubMenu;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBriefcase, faPaperPlane, faQuestion,faCopy, faLightbulb } from '@fortawesome/free-solid-svg-icons';\nimport SubMenu from './SubMenu';\nimport { NavItem, NavLink, Nav } from 'reactstrap';\nimport classNames from 'classnames';\nimport {Link} from 'react-router-dom';\n\nconst SideBar = props => {\n   console.log(\"menue \",props.menu);\nreturn (   <div className={classNames('sidebar', {'is-open': props.isOpen})}>\n      <div className=\"sidebar-header\">\n        <span color=\"info\" onClick={props.toggle} style={{color: '#fff'}}>&times;</span>\n        <h3>WS1 Utils</h3>\n      </div>\n      <div className=\"side-menu\">\n        <Nav vertical className=\"list-unstyled pb-3\">\n         \n          {(props.menu === 2) ?\n          <React.Fragment>\n        <SubMenu title=\"Intelligence\" icon={faLightbulb} items={submenus[0]}/>\n        <SubMenu title=\"Settings\" icon={faBriefcase} items={submenus[3]}/>     \n        </React.Fragment>: \"\"}\n       \n\n       {(props.menu === 1) ?\n       <React.Fragment>\n          <SubMenu title=\"UEM\" icon={faCopy} items={submenus[1]}/>  \n        <SubMenu title=\"Settings\" icon={faBriefcase} items={submenus[2]}/> \n        </React.Fragment>:''}\n \n          <NavItem>\n            <NavLink tag={Link} to={'/faq'}>\n              <FontAwesomeIcon icon={faQuestion} className=\"mr-2\"/>FAQ\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to={'/contact'}>\n              <FontAwesomeIcon icon={faPaperPlane} className=\"mr-2\"/>Contact\n            </NavLink>\n          </NavItem>\n          \n        </Nav>        \n      </div>\n    </div>\n  );\n    };\n  const submenus = [\n    [\n      {\n        title: \"Get Reports\",\n        target: \"reports\"\n      },\n      {\n        title: \"Copy \\u2794 Data Lake Gen1\",\n        target: \"transfer\",        \n      },\n      {\n        title: \"Copy \\u2794 Data Lake Gen2\",\n        target: \"transfer2\",        \n      },\n      {\n        title: \"Copy \\u2794 Google Cloud\",\n        target: \"transfergoogle\",        \n      },\n      {\n        title: \"Schedule transfer\",\n        target: \"schedule\",        \n      }\n    ],\n    [\n      {\n        title: \"Admin\",\n        target: \"admin\",          \n      },\n      {\n        title: \"Apps&Profiles\",\n        target: \"awdevice\",        \n      },\n      {\n        title: \"Licenses\",\n        target: \"licences\",        \n      }\n    ],\n\n    [\n      \n      {\n        title: \"UEM\",\n        target: \"airwatch\",        \n      }\n     \n    ],\n    [\n      {\n        title: \"Intelligence\",\n        target: \"intelli\",          \n      },\n      \n      {\n        title: \"Microsoft Data Lakes\",\n        target: \"datalakes\",        \n      },\n      {\n        title: \"Google Cloud\",\n        target: \"gcp\",        \n      }\n    ]\n  ]\n  \n\nexport default SideBar;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","\nexport const SERVER_URL ='https://ws1.utils.best/api';\n//export const SERVER_URL ='http://localhost:8000/api';","\n\nimport axios from 'axios';\nimport {SERVER_URL} from '../config';\n\n\nexport const fetchTasks = async (email, sub, dispatch) => {\n  const url = `${SERVER_URL}/task`;\n\n  const data = {\n      email,\n      sub\n  }\n   \nconst creds = await axios.get(url,{params:data}); \n  \n  if (creds.data[0]){\n     \n\n      const dbcreds = {items: creds.data[0].items}\n      \n        dispatch(dbcreds);\n      \n    }\n    else {\n      \n      }\n  }\n\nexport const fetchIntelliData = async (email, sub, dispatch) => {\n  const url = `${SERVER_URL}/credentials`;\n\n    const data = {\n        email,\n        sub\n    }\n     \n  const creds = await axios.get(url,{params:data}); \n    \n    if (creds.data[0]){\n       \n\n        const dbcreds = {clientid: creds.data[0].clientid,\n          url: creds.data[0].url,\n          secret: creds.data[0].secret}\n        \n          dispatch(dbcreds);\n        \n      }\n      else {\n        \n        }\n    }\n\n    \n    export const testCreds = async (region, encoded) => {\n      const url = `${SERVER_URL}/vmware/testcreds`;\n\n      console.log(\"from intelli\", url);\n  \n      const data = {\n          region,\n          encoded\n          \n      }\n\n      const jwt = await axios.post(url,data); \n       console.log(\"tescreds intelli\", jwt.data)\n      return jwt;\n    } \n\n    export const getToken =async (email, sub) => {\n\n      // if(this.props.creds.url && this.props.creds.clientid && this.props.creds.secret){\n \n       console.log(' i am in getoken')\n       const url = `${SERVER_URL}/vmware/getToken`;\n \n       const data =  {\n        email,\n        sub\n      }\n       \n     try { const jwt = await axios.post(url,data); \n\n      \n      if(jwt.data)\n      return jwt.data\n     \n     \n     } catch(err){\n     //  console.log(err); \n       }\n      }\n\n     // list all reccurences of one report\n      export const axiosListReportRec = async (email, sub, token, reportId) => {\n        let urlavail =  `${SERVER_URL}/vmware/reportDownload`;\n        const data =  {\n          email,\n          sub,\n         token,\n          reportId\n          \n       }\n        const ListReportRec = await axios.post(urlavail, data);  \n       \n        return ListReportRec.data;\n      }     \n\nexport const searchAllReports = async (email, sub, token) => {\n      const url = `${SERVER_URL}/vmware/searchReports`;\n      const data =  {\n        email,\n        sub,\n        token\n      }\n      const reports = await axios.post(url,data); \n\n      console.log(\"Reports Search\", reports);\n      return reports;\n    }\n\n  // // get reports\n    export const axiosGetLink = async (email, sub, token,id) => {\n      \n      let urlavail =  `${SERVER_URL}/vmware/getLink`;\n      const data =  {\n        email,\n        sub,\n        token,\n        id\n      }\n      const linkAvail = await axios.post(urlavail, data);  \n    //  console.log(\"LinkdownloadSubmit: \",linkAvail.data);\n      return linkAvail.data;\n    }\n\n\n     // transfer to datalake genV1\n    export const axiosGetLink2 = async ( email, sub, token,id, tokenMi) => {\n      //console.log(\"link started\");\n      let urlavail =  `${SERVER_URL}/vmware/getLink2`;\n      const data =  {\n        email,\n        sub,\n        token,\n        id,\n        tokenMi\n      }\n      const linkAvail = await axios.post(urlavail, data);  \n    //  console.log(\"LinkdownloadSubmit: \",linkAvail.data);\n      return linkAvail.data;\n    }\n\n    // transfer to datalake genV2\n    export const axiosGetLink3 = async (email, sub, token,id) => {\n      //console.log(\"link started\");\n      let urlavail =  `${SERVER_URL}/vmware/getLink3`;\n      const data =  {\n        email,\n        sub,\n        token,\n        id\n      }\n      const linkAvail = await axios.post(urlavail, data);  \n    //  console.log(\"LinkdownloadSubmit: \",linkAvail.data);\n      return linkAvail.data;\n    }\n\n\n    export const axiosGetLink4 = async (email, sub, token,id) => {\n      //console.log(\"link started\");\n      let urlavail =  `${SERVER_URL}/vmware/getLink4`;\n      const data =  {\n        email,\n        sub,\n        token,\n        id\n      }\n      const linkAvail = await axios.post(urlavail, data);  \n    //  console.log(\"LinkdownloadSubmit: \",linkAvail.data);\n      return linkAvail.data;\n    }","import React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Form, FormGroup, Input, Button, Label, Spinner} from 'reactstrap';\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\nimport axios from 'axios';\nimport base64 from 'react-native-base64';\nimport {fetchIntelliData, testCreds} from '../../apiCall/intelli';\nimport _ from 'lodash';\nimport {SERVER_URL} from '../../config';\n\nconst Intelligence = (props) =>  {\n\n    const { user } = useAuth0();\n\n    \n\n    const [state, setState] = useState({\n      email: user.email,\n      sub: user.sub,\n      loading: false,\n      disabled2: true\n        \n    })\n\n   // const [trigger, setTrigger] = useState(0)\n    \n    const [isOpen, setOpen] = useState(true)\n  const toggleEdit= () => setOpen(!isOpen)\n\n  const [isDisabled, setDisabled] = useState(false);\n  const toggleDisabled = () => setDisabled(!isDisabled);\n\n\n     useEffect( () => {\n        // code to run on component mount\n      console.log(\"secret \", props.secret);\n       \n      \n      \n      \n      fetchIntelliData(user.email, user.sub, props.retrieveCreds );\n    /*   props.updateCreds ({url: state.url,\n          clientid: state.clientid,\n          secret: state.secret}) */\n      }, [])\n\n    \n    \n      const handleChange = (evt) => {\n   \n        props.selectCreds(\n         \n          evt.target.name,evt.target.value\n          )\n\n          setState({\n            ...state,\n            disabled2: true,\n            message: \"\" ,\n            loading: false   \n       })\n\n  \n      }\n\n      const testCred = async () =>{\n        const encoded = base64.encode(`${props.creds.clientid}:${props.creds.secret}`)\n        console.log(\"region2 \",props.creds.url.split('.',2)[1]);\n        const region = props.creds.url.split('.',2)[1]; \n        setState({\n          ...state,\n          message:'',\n        loading: true});\n        await testCreds( region, encoded).then(\n          jwt => {  console.log(jwt.data);\n           if (_.isEmpty(jwt.data) || jwt.data.toString().startsWith('mafautestgrande') ){\n              console.log(\"PAS BOMMMMMMMM\");\n            \n              setState({\n                ...state,\n                message: \"Check your credentails, test failed\",\n                disabled2: true,\n                color: 'red',\n                loading: false\n              }) \n            }\n          else{ \n             \n              setState({\n              ...state,\n             \n              disabled2: false,\n              color: 'green',\n            message:'Test succesfull',\n            loading: false\n               })\n             }  \n           }\n        )\n      }\n\n      const saveCreds = async () => {\n\n    \n        const url = `${SERVER_URL}/credentials`;\n        const encoded = base64.encode(`${props.creds.clientid}:${props.creds.secret}`)\n        console.log(\"region2 \",props.creds.url.split('.',2)[1]);\n        const region = props.creds.url.split('.',2)[1]; \n        const data ={\n          email: user.email,\n          sub: user.sub,\n          url: props.creds.url,\n          clientid: props.creds.clientid,\n          secret: props.creds.secret,\n          encoded,\n          region \n        }\n        \n      try { const jwt = await axios.post(url, data); \n        console.log(\"jwtStatus \",jwt.status);\n        \n        if (jwt.status === 200){\n            console.log(\"toto\");\n\n                 toggleEdit();\n                 toggleDisabled(); \n            console.log(\"state 2\",isOpen);\n           \n           \n           \n              //save in redux props\n              props.retrieveCreds({url: props.creds.url,\n                clientid: props.creds.clientid,\n                secret: props.creds.secret});\n\n\n              return jwt;\n          }\n          else {\n            \n            }\n\n      \n      } catch(err){\n       console.log(err);\n        \n        }\n        \n    }\n\n      const onSubmit =  (e) => {\n        e.preventDefault();\n        e.stopPropagation();  \n        saveCreds();\n        setState({...state,\n          disabled2: true,\n        message:'' })\n        \n        \n        console.log(\"state \",state);\n       \n    }\n\n    \n    const Test = () => {return <Row><Col sm =\"4\"><Button type=\"button\" color=\"primary\" block size=\"sm\" onClick = {testCred}>Test</Button></Col><Col sm =\"4\"><Button type=\"submit\" value=\"save\" block disabled={state.disabled2} className=\"btn-sm  btn-info\">Submit</Button></Col></Row>}\n\n\n\n    return (\n      \n        <Container >\n           <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>API credentials from your service account</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n        <Form onSubmit={onSubmit} > \n        <Col sm=\"8\">\n        <FormGroup>\n            <Label for=\"url\"> Token Endpoint:  </Label>\n                <Input type=\"text\" className=\"form-control\" name=\"url\" value={props.creds.url} onChange={handleChange} required disabled={!isDisabled}/>\n                </ FormGroup >\n       <FormGroup>\n            <Label for=\"clientid\">Client Id:  </Label>\n                <Input type=\"text\" className=\"form-control\" name =\"clientid\" value={props.creds.clientid} onChange={handleChange} required disabled={!isDisabled}/>\n                </ FormGroup >\n            <FormGroup>\n            <Label for=\"secret\">Client Secret: </Label>\n                <Input type=\"password\" className=\"form-control\" name =\"secret\" value={props.creds.secret} onChange={handleChange} required disabled={!isDisabled}/>\n                </FormGroup >\n              <FormGroup>\n                {(!isOpen)?<Test/>:\n                 <Row>\n                 <Button color=\"primary\" size=\"sm\" block active  onClick = {()=>{toggleDisabled(); toggleEdit()}}>Edit</Button>\n                 </Row>}\n              </FormGroup >\n                </Col>\n       </Form >\n      \n       <Row>\n             <Col sm=\"2\"></Col>\n             {state.loading ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n             <Col sm=\"auto\"> <h2 style ={{color: state.color}}>{state.message}</h2></Col>\n           </Row>\n       \n       </Container >\n   \n    \n    \n   \n    )\n }\n  \n\n\nexport default Intelligence;\n\n","\nimport axios from 'axios';\nimport {SERVER_URL} from '../config';\n\n\nexport const fetchAwData = async (email, sub, dispatch) => {\n  const url = `${SERVER_URL}/airwatch`;\n\n    const data = {\n        email,\n        sub\n    }\n     \n  const creds = await axios.get(url,{params:data}); \n    console.log(\"aw \", creds.data[0])\n    if (creds.data[0]){\n       \n\n        const dbcreds = {apikey: creds.data[0].apikey,\n          awurl: creds.data[0].awurl,\n          awadmin: creds.data[0].awadmin,\n          awpassword: creds.data[0].awpassword,\n          lgid: creds.data[0].lgid\n        }\n        console.log(\"dbcreds \", dbcreds);\n          dispatch(dbcreds);\n        \n      }\n      else {\n        \n        }\n    }\n\n    export const testCreds = async (awurl, apikey, awencoded, username) => {\n      const url = `${SERVER_URL}/uem/testcreds`;\n\n      console.log(url);\n  \n      const data = {\n          awurl,\n          apikey,\n          awencoded,\n          username\n      }\n\n      const admins = await axios.post(url,data); \n    \n      return admins;\n    } \n\n    export const getAdmins = async (email, sub) => {\n      const url = `${SERVER_URL}/uem/searchadmins`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub\n      }\n\n      const admins = await axios.post(url,data); \n    \n      return admins;\n    } \n\n    export const getOgs = async (email, sub) => {\n      const url = `${SERVER_URL}/uem/searchog`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub\n      }\n\n      const ogs = await axios.post(url,data); \n    \n      return ogs;\n    } \n\n    export const getLgId = async (email, sub, lgid) => {\n      const url = `${SERVER_URL}/uem/searchlgid`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          lgid\n      }\n\n      const lg = await axios.post(url,data); \n    \n      return lg;\n    } \n\n    \n\n\n    export const changePass = async (email, sub, adminid, pass) => {\n      const url = `${SERVER_URL}/uem/changepass`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          adminid,\n          pass\n      }\n\n      const admins = await axios.post(url,data); \n    \n      return admins;\n    }\n\n\n    export const getDevPerUser = async (email, sub, username, lgid) => {\n      const url = `${SERVER_URL}/uem/searchdeviceperuser`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          username,\n          lgid\n      }\n\n      const devices = await axios.post(url,data); \n      console.log(\"error from api\", devices)\n      return devices;\n    } \n\n    export const fetchUsers = async (email, sub,  lgid) => {\n      const url = `${SERVER_URL}/uem/searchusers`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n       //   username,\n          lgid\n      }\n\n      const devices = await axios.post(url,data); \n    \n      return devices;\n    } \n\n\n    /* Licences calculation */\n\n\nexport const getAppId = async (email, sub,  lgid, bundleid) => {\n  const url = `${SERVER_URL}/uem/getappid`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          lgid,\n          bundleid\n      }\n\n      const appid = await axios.post(url,data); \n    \n      return appid;\n    } \n\n\n    export const getDevPerApp = async (email, sub,  lgid, appid) => {\n      const url = `${SERVER_URL}/uem/searchdeviceperapp`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          lgid,\n          appid\n      }\n\n      const id = await axios.post(url,data); \n    \n      return id;\n    } \n\n    export const getAlldevPerOg = async (email, sub,  lgid) => {\n      const url = `${SERVER_URL}/uem/searchdeviceperog`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          lgid\n          \n      }\n\n      const devices = await axios.post(url,data); \n    \n      return devices;\n    } \n\n    export const getAlldevTelecom = async (email, sub,  lgid) => {\n      const url = `${SERVER_URL}/uem/searchtelecomdev`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          lgid     \n      }\n\n      const devices = await axios.post(url,data); \n    \n      return devices;\n    } \n\n\n    export const getAlldevOg = async (email, sub,  lgid) => {\n      const url = `${SERVER_URL}/uem/searchdevperog`;\n\n      console.log(url);\n  \n      const data = {\n          email,\n          sub,\n          lgid     \n      }\n\n      const devices = await axios.post(url,data); \n    \n      return devices;\n    } \n\n","import React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Form, FormGroup, Input, Button, Label, Spinner} from 'reactstrap';\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\nimport axios from 'axios';\nimport base64 from 'react-native-base64';\nimport {fetchAwData, testCreds} from '../../apiCall/airwatch';\nimport _ from 'lodash';\nimport {SERVER_URL} from '../../config';\n\nconst Airwatch = (props) =>  {\n\n    const { user } = useAuth0();\n\n\n    const [state, setState] = useState({\n      email: user.email,\n      sub: user.sub,\n      loading: false,\n      disabled2: true\n        \n    })\n\n   // const [trigger, setTrigger] = useState(0)\n    \n  const [isOpen, setOpen] = useState(true)\n  const toggleEdit= () => setOpen(!isOpen)\n\n  const [isDisabled, setDisabled] = useState(false);\n  const toggleDisabled = () => setDisabled(!isDisabled);\n\n\n     useEffect( () => {\n        // code to run on component mount\n      \n      \n        fetchAwData(user.email, user.sub, props.retrieveCreds );\n    \n      }, [])\n\n    \n    \n      const handleChange = (evt) => {\n       // store in redux\n        props.selectCreds(\n         \n          evt.target.name,evt.target.value\n          )\n\n          setState({\n               ...state,\n               disabled2: true,\n               message: \"\" ,\n               loading: false   \n          })\n  \n      }\n\n      const stripTrailingSlash = (str) => {\n         \n        if (str.endsWith('/api/'))\n        {return   str.slice(0, -5) }\n       else if (str.endsWith('/api'))\n        {return   str.slice(0, -4) }      \n        else if (str.endsWith('/'))\n        {return   str.slice(0, -1) }\n        else {return str}\n    };\n\n      const saveAwCreds = async () => {\n\n       console.log(\"lgis from save \" , state.lgid)\n        const url = `${SERVER_URL}/airwatch`;\n        const awencoded = base64.encode(`${_.trim(props.awcreds.awadmin)}:${props.awcreds.awpassword}`)\n        let newurl = _.trim(stripTrailingSlash(props.awcreds.awurl.toLowerCase()))\n\n        const data ={\n          email: user.email,\n          sub: user.sub,\n          awurl: newurl,\n          apikey: _.trim(props.awcreds.apikey),\n          awadmin: _.trim(props.awcreds.awadmin),\n          awpassword: props.awcreds.awpassword,\n          awencoded,\n         // lgid: state.lgid\n         lgid: props.awcreds.lgid\n        }\n        \n      try { const jwt = await axios.post(url, data); \n        console.log(\"jwtStatus \",jwt.status);\n        \n        if (jwt.status === 200){\n            console.log(\"toto\");\n\n                 \n                 toggleEdit();\n                 toggleDisabled(); \n            console.log(\"state 2\",isOpen);\n          \n           \n           \n              //save in redux props\n              props.retrieveCreds({awurl: props.awcreds.awurl,\n                apikey: props.awcreds.apikey,\n                awadmin: props.awcreds.awadmin,\n                awpassword: props.awcreds.awpassword,\n             // lgid: state.lgid\n            });\n\n\n              return jwt;\n          }\n          else {\n           \n           \n            }\n\n      \n      } catch(err){\n       console.log(err);\n        \n        }\n        \n    }\n\n    const testCred = async () =>{\n      console.log(\"toto est grand\");\n      const awencoded = base64.encode(`${_.trim(props.awcreds.awadmin)}:${props.awcreds.awpassword}`)\n      console.log(\"encoded\", awencoded);\n      setState({\n        ...state,\n        message:'',\n      loading: true});\n\n        let newurl = stripTrailingSlash(props.awcreds.awurl.toLowerCase())\n     console.log(\"new test\", newurl);\n     console.log(\"admin\", props.awcreds.awadmin);\n      await testCreds(_.trim(newurl), _.trim(props.awcreds.apikey),awencoded, _.trim(props.awcreds.awadmin)).then(\n        admin => {  console.log(admin.data[0]);\n          if (_.isString(admin.data)){\n            setState({\n              ...state,\n              message: admin.data,\n              disabled2: true,\n              color: 'red',\n              loading: false\n            })\n          }\n          else{ \n            props.retrieveCreds({lgid: props.awcreds.lgid})\n            setState({\n            ...state,\n           // lgid: admin.data[0].LocationGroupId,\n            disabled2: false,\n            color: 'green',\n          message:'Test succesfull',\n          loading: false\n         })\n        \n        \n        }\n      \n        })\n      \n    }\n\n\n      const onSubmit =  async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      \n        console.log(\"try to save settings\");\n        saveAwCreds();\n\n      /*  await getAdmins(user.email, user.sub, props.awcreds.awadmin).then(\n          admin => {  console.log(admin.data);\n\n          }\n        ) */\n        setState({...state,\n          disabled2: true,\n        message:'' })\n        \n        \n        console.log(\"state \",state);\n       \n    }\n\n\n    const Test = () => {return <Row><Col sm =\"4\"><Button type=\"button\" color=\"primary\" block size=\"sm\" onClick = {testCred}>Test</Button></Col><Col sm =\"4\"><Button type=\"submit\" value=\"save\" block disabled={state.disabled2} color=\"info\" size=\"sm\">Submit</Button></Col></Row>}\n    \n\n    return (\n      \n        <Container >\n            <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n      <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" >WS1 UEM API credentials</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n           \n        <Form onSubmit={onSubmit} > \n        <Col sm=\"8\">\n        <FormGroup>\n            <Label for=\"awurl\"> Api Tenant Url:  </Label>\n                <Input type=\"text\" className=\"form-control\" id=\"awurl\" name=\"awurl\" value={props.awcreds.awurl.trim()} onChange={handleChange} required disabled={!isDisabled}/>\n                </ FormGroup >\n       <FormGroup>\n            <Label for=\"apikey\">API Key:  </Label>\n                <Input type=\"text\" className=\"form-control\" id=\"apikey\" name =\"apikey\" value={props.awcreds.apikey.trim()} onChange={handleChange} required disabled={!isDisabled}/>\n                </ FormGroup >\n                <FormGroup>\n            <Label for=\"awadmin\">Admin Username:  </Label>\n                <Input type=\"text\" className=\"form-control\" name =\"awadmin\" value={_.trim(props.awcreds.awadmin)} onChange={handleChange} required disabled={!isDisabled}/>\n                </ FormGroup >\n                \n            <FormGroup>\n            <Label for=\"awpassword\">Password: </Label>\n                <Input type=\"password\" className=\"form-control\" name =\"awpassword\" value={props.awcreds.awpassword} onChange={handleChange} required disabled={!isDisabled}/>\n                </FormGroup >\n              <FormGroup>\n                {(!isOpen)?<Test/> : \n                 <Row>\n                 <Button color=\"primary\" size=\"sm\" block active  onClick = {()=>{toggleDisabled(); toggleEdit()}}>Edit</Button>\n                 </Row>}\n              </FormGroup >\n                </Col>\n       </Form >\n       \n           <Row>\n             <Col sm=\"2\"></Col>\n             {state.loading ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n             <Col sm=\"auto\"> <h2 style ={{color: state.color}}>{state.message}</h2></Col>\n           </Row>\n       \n       </Container >\n   \n    )\n }\n  \n\nexport default Airwatch;\n\n","\n\nimport axios from 'axios';\nimport {SERVER_URL} from '../config';\n\nexport const fetchData = async (email, sub, dispatch) => {\n    const url = `${SERVER_URL}/micredentials`;\n\n    const data = {\n        email,\n        sub\n    }\n     \n  const creds = await axios.get(url,{params:data}); \n    \n    if (creds.data[0]){\n       \n\n        const dbcreds = {azureclientid: creds.data[0].clientid,\n          repname: creds.data[0].repname,\n          tenantid: creds.data[0].tenantid,\n          azuresecret: creds.data[0].secret,\n           container: creds.data[0].container,\n           azureconnectstring: creds.data[0].azureconnectstring}\n        \n          dispatch(dbcreds);\n        \n      }\n      else {\n        \n        }\n    }\n\n\n    export const fetch2Data = async (email, sub, dispatch) => {\n      const url = `${SERVER_URL}/micredentials`;\n  \n      const data = {\n          email,\n          sub\n      }\n       \n    const creds = await axios.get(url,{data}); \n      \n      if (creds.data){\n         \n  \n          const dbcreds = {\n           \n             container: creds.data.container,\n             azureconnectstring: creds.data.azureconnectstring}\n          \n            dispatch(dbcreds);\n          \n        }\n        else {\n          \n          }\n      }\n\n    export const getTokenMi =async ( email, sub) => {\n\n      // if(this.props.creds.url && this.props.creds.clientid && this.props.creds.secret){\n \n       console.log(' i am in getoken from mi')\n       const url = `${SERVER_URL}/microsoft/getToken2`;\n \n       const data =  {\n        email,\n        sub\n      }\n       \n     try { const jwt = await axios.post(url,data); \n\n      console.log(\"mi test \", jwt);\n      if(jwt.data)\n      console.log(\"mi \", jwt.data);\n      return jwt.data\n     \n     \n     } catch(err){\n     //  console.log(err); \n       }\n      }\n\n     \n       export const tesTokenMi =async ( tenantid, clientid, secret) => {\n\n        // if(this.props.creds.url && this.props.creds.clientid && this.props.creds.secret){\n   \n         console.log(' i am in getoken from mi')\n         const url = `${SERVER_URL}/microsoft/tesToken`;\n   \n         const data =  {\n          tenantid,\n          clientid,\n          secret\n        }\n         \n       try { const jwt = await axios.post(url,data); \n  \n        console.log(\"mi test \", jwt);\n        if(jwt.data)\n        console.log(\"mi \", jwt.data);\n        return jwt.data\n       \n       \n       } catch(err){\n       //  console.log(err); \n         }\n        }\n\n\n        export const testAccount =async ( datalake, jwt) => {\n\n          // if(this.props.creds.url && this.props.creds.clientid && this.props.creds.secret){\n     \n           console.log(' i am in getoken from mi')\n           const url = `${SERVER_URL}/microsoft/testAccount`;\n     \n           const data =  {\n            datalake,\n            jwt\n          }\n           \n         try { const account = await axios.post(url,data); \n    \n          console.log(\"mi test \", account);\n          if(jwt.data)\n          console.log(\"mi \", account.data);\n          return account.data\n         \n         \n         } catch(err){\n         //  console.log(err); \n           }\n          }\n\n\n        export const testBlobMi =async ( connectString) => {\n\n          // if(this.props.creds.url && this.props.creds.clientid && this.props.creds.secret){\n     \n           console.log(' i am in getoken from mi')\n           const url = `${SERVER_URL}/microsoft/tesBlob`;\n     \n           const data =  {\n            connectString\n          }\n           \n         try { const jwt = await axios.post(url,data); \n    \n          console.log(\"mi test \", jwt);\n          \n          return jwt.data\n         }\n         catch(err){\n          console.log(err); \n          return err\n           }\n          }\n    \n  \n\n","import React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Form, FormGroup, Input, Button, Label, Spinner} from 'reactstrap';\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\nimport axios from 'axios';\nimport {tesTokenMi, testBlobMi,fetchData, testAccount} from '../../apiCall/midatalakes';\nimport _ from 'lodash';\nimport {SERVER_URL} from '../../config';\n\n\nconst Datalakes = (props) =>  {\n\n    const { user } = useAuth0();\n\n    \n\n    const [state, setState] = useState({\n      email: user.email,\n      sub: user.sub,\n      disabled3: true,\n      disabled4: true,\n      color1: \"red\"\n        \n    })\n\n   // const [trigger, setTrigger] = useState(0)\n    \n    const [isOpen, setOpen] = useState(true)\n  const toggleEdit= () => setOpen(!isOpen)\n\n  const [isOpen2, setOpen2] = useState(true)\n  const toggleEdit2= () => setOpen2(!isOpen2)\n\n  const [isDisabled, setDisabled] = useState(false);\n  const toggleDisabled = () => setDisabled(!isDisabled);\n\n  const [isDisabled2, setDisabled2] = useState(false);\n  const toggleDisabled2 = () => setDisabled2(!isDisabled2);\n\n\n     useEffect( () => {\n        // code to run on component mount\n      //console.log(\"secret \", props.secret);\n       \n      \n      \n      \n        fetchData(user.email, user.sub, props.miretrieveCreds );\n        fetchData(user.email, user.sub, props.miretrieve2Creds );\n    \n      }, [])\n\n    \n    \n      const handleChange = (evt) => {\n    \n        props.miselectCreds(\n         \n          evt.target.name,evt.target.value\n          )\n          setState({\n            ...state,\n            disabled3: true,\n            message1: \"\" ,\n            loading1: false   \n       })\n      }\n\n      const handleChange2 = (evt) => {\n    \n        props.miselect2Creds(\n         \n          evt.target.name,evt.target.value\n          )\n\n          setState({...state,\n            disabled4: true,\n          message2:'',\n          loading2: false    })\n  \n      }\n\n      const saveCreds = async () => {\n\n    \n        const url = `${SERVER_URL}/micredentials`;\n        \n        const data ={\n          email: user.email,\n          sub: user.sub,\n          repname: props.micreds.repname,\n          tenantid: props.micreds.tenantid,\n          clientid: props.micreds.azureclientid,\n          secret: props.micreds.azuresecret,\n          \n        }\n        \n      try { const jwt = await axios.post(url, data); \n        console.log(\"jwtStatus \",jwt.status);\n        \n        if (jwt.status === 200){\n            console.log(\"toto\");\n\n\n         \n                 toggleEdit();\n                 toggleDisabled(); \n            console.log(\"state 2\",isOpen);\n           \n         \n              //save in redux props\n              props.miretrieveCreds({\n                repname: props.micreds.repname,\n                tenantid: props.micreds.tenantid,\n                azureclientid: props.micreds.azureclientid,\n                azuresecret: props.micreds.azuresecret});\n\n              return jwt;\n          }\n          else {\n            \n            }\n     \n      } catch(err){\n       console.log(err);     \n        }      \n    }\n\n\n     \n  const saveCreds2 = async () => {\n\n    \n    const url = `${SERVER_URL}/micredentials`;\n    \n    const data ={\n      email: user.email,\n      sub: user.sub,\n      container: props.mi2creds.container,\n      azureconnectstring: props.mi2creds.azureconnectstring\n      \n      \n    }\n    \n  try { const jwt = await axios.post(url, data); \n    console.log(\"jwtStatus \",jwt.status);\n    \n    if (jwt.status === 200){\n        console.log(\"toto\");\n\n\n     \n             toggleEdit2();\n             toggleDisabled2(); \n        console.log(\"state 2\",isOpen2);\n       \n     \n          //save in redux props\n          props.miretrieve2Creds({\n            container: props.mi2creds.container,\n      azureconnectstring: props.mi2creds.azureconnectstring});\n\n          return jwt;\n      }\n      else {\n        \n        }\n \n  } catch(err){\n   console.log(err);     \n    }      \n}\n\n\n\n  const onSubmit =  (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n   \n    saveCreds();\n    setState({...state,\n      disabled3: true,\n    message1:'' })\n    \n    console.log(\"state \",state);\n   \n}\n\nconst onSubmit2 =  (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  saveCreds2();\n  setState({...state,\n    disabled4: true,\n  message2:'' })\n  console.log(\"state \",state);  \n}\n\n\n\nconst testCred1 = async () =>{\n  \n  setState({\n    ...state,\n    message1:'',\n  loading1: true});\n  await tesTokenMi( props.micreds.tenantid,props.micreds.azureclientid, props.micreds.azuresecret).then(\n    async jwt => {  console.log( \"retour rep \",jwt);\n     if (_.isEmpty(jwt) || jwt.toString().startsWith('mafautestgrande') ){\n        console.log(\"PAS BOMMMMMMMM\");\n      \n        setState({\n          ...state,\n          message1: \"Check your credentials, test failed\",\n          disabled3: true,\n          color1: 'red',\n          loading1: false\n        }) \n      }\n    else{ \n\n      await testAccount(props.micreds.repname, jwt).then( data =>\n        {\n          if(_.isString(data) && data === \"mafautestgrande\"){\n        console.log(\"my test \", data)\n        setState({\n          ...state,\n          message1: \"Account name doesn't exist\",\n          disabled3: true,\n          color1: 'red',\n          loading1: false\n        }) \n          }\n          else {\n            setState({\n              ...state,\n              disabled3: false,\n              color1: 'green',\n            message1:'Test succesfull',\n            loading1: false\n               })\n\n          }\n        }\n        \n        );\n        \n\n       \n    \n       }  \n     }\n  )\n}\n \n\nconst testCred2 = async () =>{\n  if(props.mi2creds.container){\n  setState({\n    ...state,\n    message2:'',\n  loading2: true});\n  await testBlobMi( props.mi2creds.azureconnectstring).then(\n    jwt => {  console.log( \"retour rep2 \",jwt);\n   \n      if(_.isEmpty(jwt))  {\n      console.log(\"PAS BOMMMMMMMM\", jwt);\n      \n      setState({\n        ...state,\n        message2: \"Check your credentials, test failed\",\n        disabled4: true,\n        color2: 'red',\n        loading2: false\n      }) \n       \n      }\n\n    else if ( jwt.response.isSuccessful){ \n      setState({\n        ...state,\n        disabled4: false,\n        color2: 'green',\n      message2:'Test succesfull',\n      loading2: false\n         })\n        \n       }  \n     }\n  )\n    }\n    else setState({\n      ...state,\n      message2: \"Container name is missing\",\n      \n      color: 'red',\n     \n    }) \n}\n\nconst Test1 = () => {return <Row><Col sm =\"4\"><Button type=\"button\" color=\"primary\" block size=\"sm\" onClick = {testCred1}>Test</Button></Col><Col sm =\"4\"><Button type=\"submit\" value=\"save\" block disabled={state.disabled3} className=\"btn-sm  btn-info\">Submit</Button></Col></Row>}\nconst Test2 = () => {return <Row><Col sm =\"4\"><Button type=\"button\" color=\"primary\" block size=\"sm\" onClick = {testCred2}>Test</Button></Col><Col sm =\"4\"><Button type=\"submit\" value=\"save\" block disabled={state.disabled4} className=\"btn-sm  btn-info\">Submit</Button></Col></Row>}\n   \n\n    return (\n      <div>\n        <Container >\n        <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Microsoft Data Lake Gen1</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n            \n       \n        <Form onSubmit={onSubmit} > \n        <Col sm=\"8\" className=\"mt-3\">\n        <FormGroup >\n            <Label for=\"repname\"> Data Lake Storage Gen1 account name:  </Label>\n                <Input type=\"text\" className=\"form-control\" name=\"repname\" value={props.micreds.repname} onChange={handleChange} required disabled={!isDisabled}/>\n        </ FormGroup >\n        <FormGroup>\n            <Label for=\"tenantid\"> Tenant Id:  </Label>\n                <Input type=\"text\" className=\"form-control\" name=\"tenantid\" value={props.micreds.tenantid} onChange={handleChange} required disabled={!isDisabled}/>\n                </ FormGroup >\n       <FormGroup>\n            <Label for=\"azureclientid\">Client Id:  </Label>\n                <Input type=\"text\" className=\"form-control\" name =\"azureclientid\" value={props.micreds.azureclientid} onChange={handleChange} required disabled={!isDisabled}/>\n                </ FormGroup >\n            <FormGroup>\n            <Label for=\"azuresecret\">Client Secret: </Label>\n                <Input type=\"text\" className=\"form-control\" name =\"azuresecret\" value={props.micreds.azuresecret} onChange={handleChange} required disabled={!isDisabled}/>\n                </FormGroup >\n              <FormGroup>\n                {(!isOpen)?<Test1  />:\n                 <Row>\n                 <Button color=\"primary\" size=\"sm\" block active  onClick = {()=>{toggleDisabled(); toggleEdit()}}>Edit</Button>\n                 </Row>}\n              </FormGroup >\n                </Col>\n       </Form > \n       <Row>\n             <Col sm=\"2\"></Col>\n             {state.loading1 ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n             <Col sm=\"auto\"> <h2 style ={{ color: state.color1}}>{state.message1}</h2></Col>\n           </Row>\n         \n       </Container >\n\n       \n<Container className=\"mt-3\">\n<Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Microsoft Data Lake Gen2</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n\n       \n\n<Form onSubmit={onSubmit2} > \n<Col sm=\"8\" className=\"mt-3\">\n<FormGroup>\n<Label for=\"repname\"> Container name:  </Label>\n    <Input type=\"text\" className=\"form-control\" name=\"container\" value={props.mi2creds.container} onChange={handleChange2} disabled={!isDisabled2} required/>\n</ FormGroup >\n<FormGroup>\n<Label for=\"tenantid\"> Azure Storage Connection String:  </Label>\n    <Input type=\"text\" className=\"form-control\" name=\"azureconnectstring\" value={props.mi2creds.azureconnectstring} onChange={handleChange2} required disabled={!isDisabled2}/>\n    </ FormGroup >\n\n  <FormGroup>\n    {(!isOpen2)?<Test2  />:\n     <Row>\n     <Button color=\"primary\" size=\"sm\" block active  onClick = {()=>{toggleDisabled2(); toggleEdit2()}}>Edit</Button>\n     </Row>}\n  </FormGroup >\n    </Col>\n</Form >\n<Row>\n             <Col sm=\"2\"></Col>\n             {state.loading2 ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n             <Col sm=\"auto\"> <h2 style ={{color: state.color2}}>{state.message2}</h2></Col>\n           </Row>\n\n\n\n</Container >\n</div>\n    \n    \n   \n    )\n }\n  \n\n\nexport default Datalakes;\n","\nimport axios from 'axios';\nimport {SERVER_URL} from '../config';\n\n\nexport const fetchGoogleData = async (email, sub, dispatch) => {\n  const url = `${SERVER_URL}/google`;\n\n    const data = {\n        email,\n        sub\n    }\n     \n  const creds = await axios.get(url,{params:data}); \n  console.log(\"aw creds\", creds)\n    console.log(\"aw \", creds.data[0])\n    if (creds.data[0]){\n       \n\n        const dbcreds = {\n          bucket: creds.data[0].bucket,\n          fileName: creds.data[0].fileName\n        }\n        console.log(\"dbcreds \", dbcreds);\n          dispatch(dbcreds);\n        \n      }\n      else {\n        \n        }\n    }\n\n    export const testCreds = async (bucket, sub) => {\n      const url = `${SERVER_URL}/googlecloud/testcreds`;\n\n      console.log(url);\n  \n      const data = {\n          bucket,\n          sub\n      }\n\n      const buckets = await axios.post(url,data); \n    \n      return buckets;\n    } \n\n    \n\n    ","import React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Form, FormGroup, Input, Button, Label, Spinner, CustomInput} from 'reactstrap';\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\nimport axios from 'axios';\nimport {fetchGoogleData, testCreds} from '../../apiCall/google';\nimport _ from 'lodash';\nimport {SERVER_URL} from '../../config';\n\nconst Google = (props) =>  {\n\n    const { user, getTokenSilently  } = useAuth0();\n    \n    \n\n    const [state, setState] = useState({\n      email: user.email,\n      sub: user.sub,\n      loading: false,\n      disabled2: true,\n      disabled3: true,\n      fileName:'',\n      invalidFile: false,\n      messupload:''  \n        \n    })\n\n   // const [trigger, setTrigger] = useState(0)\n    \n    const [isOpen, setOpen] = useState(true)\n  const toggleEdit= () => setOpen(!isOpen)\n\n  const [isDisabled, setDisabled] = useState(false);\n  const toggleDisabled = () => setDisabled(!isDisabled);\n\n\n     useEffect( () => {\n        // code to run on component mount\n     \n       \n      \n      \n      \n      fetchGoogleData(user.email, user.sub, props.retrieveCreds );\n   \n      }, [])\n\n     const handleFileChange = async ({target: {files}}) =>{\n          console.log(\"target \", {target: {files}});\n          console.log(\"files\", files);\n          props.selectCreds('fileName','')\n          setState({ ...state,  invalidFile: false,  messupload:''  });\n        const cancel = !files.length;\n        if (cancel) {console.log(\"retrun from upload\"); return;}\n    \n        const [{ size, name, type }] = files;\n        const maxSize = 5000;\n        console.log(\"mime \", type)\n    \n        if (size < maxSize && type === 'application/json') {\n          const url = `${SERVER_URL}/upload/google`;\n          const token = await getTokenSilently();\n\n          const headers = {\n            Authorization: `Bearer ${token}`\n        }\n\n        console.log(\"token \", token);\n        props.selectCreds('fileName',name)\n          setState({ ...state, invalidFile: false, message: '' });\n          const formData = new FormData();\n        formData.append('sampleFile', files[0]);\n        formData.append('sub', user.sub);\n        axios.post(url, formData, {headers}).then(res => {\n              if(res) setState({ ...state, disabled3: false, invalidFile: false, messupload:''});\n            console.log(res)\n        })\n          \n        } else {\n          setState({ ...state, fileName: '', invalidFile: true,  message: '', messupload:'check FAQ and upload correct google json file', disabled3: true  });\n          console.log(\"invalid \", size)\n        }\n      } \n\n      \n\n    \n    \n      const handleChange = (evt) => {\n   \n       props.selectCreds(\n         \n          evt.target.name,evt.target.value\n          )\n\n          setState({\n            ...state,\n            disabled2: true,\n            message: \"\" ,\n            loading: false   \n       }) \n       \n      }\n\n      const testCred = async () =>{\n        \n        const bucket = props.goocreds.bucket; \n        if (bucket){\n        setState({\n          ...state,\n          message:'',\n        loading: true});\n        await testCreds( bucket, state.sub).then(\n          jwt => {  console.log(\"this is from test \",jwt.data);\n                  \n           if (_.isEmpty(jwt.data)  ){\n              console.log(\"PAS BOMMMMMMMM\", jwt.data);\n            \n              setState({\n                ...state,\n                message: \"Check your credentials, test failed\",\n                disabled2: true,\n                color: 'red',\n                loading: false\n                \n              }) \n            }\n          else{ \n             \n              setState({\n              ...state,\n              projectId: jwt.data,\n              disabled2: false,\n              color: 'green',\n            message:'Test successfull',\n            loading: false\n               })\n             }  \n           }\n        )\n          }  else setState({\n            ...state,\n            message: \"Bucket name is missing\",\n            \n            color: 'red',\n           \n          }) \n\n      }\n\n      const saveCreds = async () => {\n\n    \n        const url = `${SERVER_URL}/google`;\n        \n        const data ={\n          email: user.email,\n          sub: user.sub,\n          bucket: props.goocreds.bucket,\n          fileName: props.goocreds.fileName,\n          projectId: state.projectId        \n        }\n        \n      try { const jwt = await axios.post(url, data); \n        console.log(\"jwtStatus \",jwt.status);\n        \n        if (jwt.status === 200){\n            console.log(\"toto\");\n\n                 toggleEdit();\n                 toggleDisabled(); \n            console.log(\"state 2\",isOpen);\n           \n           \n           \n              //save in redux props\n              props.retrieveCreds({bucket: props.goocreds.bucket,\n                fileName: props.goocreds.fileName\n                });\n\n\n              return jwt;\n          }\n          else {\n            \n            }\n\n      \n      } catch(err){\n       console.log(err);\n        \n        }\n        \n    }\n\n      const onSubmit =  (e) => {\n        e.preventDefault();\n        e.stopPropagation();  \n        saveCreds();\n        setState({...state,\n          disabled2: true,\n        message:'' })\n        \n        \n        console.log(\"state \",state);\n       \n    }\n\n    \n    const Test = () => {return <Row ><Col sm =\"4\"><Button type=\"button\" color=\"primary\" block size=\"sm\" onClick = {testCred} disabled={state.disabled3}>Test</Button></Col><Col sm =\"4\"><Button type=\"submit\" value=\"save\" block disabled={state.disabled2} className=\"btn-sm  btn-info\">Submit</Button></Col></Row>}\n\n\n\n    return (\n      \n        <Container >\n           <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Google storage credentials</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n        <Form onSubmit={onSubmit} > \n        <Col sm=\"8\">\n        <FormGroup>\n<Label for=\"bucket\"> Bucket name:  </Label>\n    <Input type=\"text\" className=\"form-control\" id=\"bucket\" name=\"bucket\"  value={props.goocreds.bucket} onChange={handleChange}  \n          disabled={!isDisabled} required/>\n</ FormGroup >\n<FormGroup >\n<Label for=\"jsonfile\"> Google credentials file:  </Label>\n        <CustomInput\n          type=\"file\"\n          id=\"jsonfile\"\n          className=\"form-control\"\n          name=\"customFile\"\n          label={props.goocreds.fileName || 'select json file'}\n          onChange={handleFileChange}\n          invalid={state.invalidFile}\n          required \n          disabled={!isDisabled} \n          onClick={(event)=> { \n            event.target.value = null;\n            setState({...state,\n            messupload: '',\n            message:'' })\n            \n       }}\n          />\n          <Col sm=\"auto\" className=\"mb-1 mt-3\"> <h2 style ={{color: state.color}}>{state.messupload}</h2></Col>\n      </FormGroup>\n            \n              <FormGroup className=\"mt-4\">\n                {(!isOpen)?<Test/>:\n                 <Row>\n                 <Button color=\"primary\" size=\"sm\" block active  onClick = {()=>{toggleDisabled(); toggleEdit()}}>Edit</Button>\n                 </Row>}\n              </FormGroup >\n                </Col>\n       </Form >\n      \n       <Row>\n             <Col sm=\"2\"></Col>\n             {state.loading ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n             <Col sm=\"auto\"> <h2 style ={{color: state.color}}>{state.message}</h2></Col>\n           </Row>\n       \n       </Container >\n   \n    \n    \n   \n    )\n }\n  \n\n\nexport default Google;\n\n","import React, { Component } from 'react';\nimport {Button, Spinner, Container, Row, Form, FormGroup, Input, Col} from 'reactstrap';\nimport dateFormat from 'dateformat';\nimport {getToken, axiosListReportRec, searchAllReports, axiosGetLink} from '../../apiCall/intelli';\nimport _ from 'lodash';\n\nclass Report extends Component {\n\n  _isMounted = false;\n\n    state = {\n      reports: [],\n      reportId:'',\n      link: '' ,\n      reportDownload: [] ,\n      date: '',\n      id: '' ,\n      message: '' ,\n      disabled: false,\n      time:'',\n      loading: false,\n      token:'',\n      name:''\n      \n    };\n     \n   \n  toggleClass() {\n    const currentState = this.state.disabled;\n    this.setState({ disabled: !currentState });\n};\n\n    \n\n\n\n    async componentDidMount(){\n      this._isMounted = true;\n      \n\n    this.setState({ loading: true}, async () => {\n\n     \n       const token = await getToken(this.props.email,this.props.sub);\n\n       console.log(\"token\", token)\n\n       if (token.startsWith(\"Please56785678\")){\n        this.setState({loading: false ,\n          message: \"You need to go to Settings and set up your credentials\"});\n          }\n      \n\n       else{\n\n        if (this._isMounted){\n       this.setState({token});\n       \n       \n          const reporting = await searchAllReports(this.props.email,this.props.sub, this.state.token); \n          console.log(\"err reporting\", reporting.data)\n          if (_.isString(reporting.data) ){\n            this.setState({loading: false ,\n              message: reporting.data});\n              }\n          else {\n           let allReports =  reporting.data.map( el => { return {name: el.name, id: el.id}} );\n\n           this.setState({reports: allReports,\n            loading: false });\n           console.log(\"all report\", allReports)\n          }\n\n\n\n           }\n          }\n  })\n} \n\ncomponentWillUnmount() {\n  this._isMounted = false;\n}\n\n    \n    checkStatusCompleted = () => {\n      \n    \n    const completedReports = this.state.reportDownload.filter(i => i.status === \"COMPLETED\").reduce(function (a, b) { return a.created_at > b.created_at  ? a : b; });\n    \n   // console.log(\"completedReport \", completedReports);\n\n     \n             \n             let date = dateFormat(completedReports.created_at, \"mediumDate\");\n             let time = dateFormat(completedReports.created_at, \"shortTime\");\n             \n             \n             this.setState({date: date,\n                            time: time,\n                             id: completedReports.id\n                            });\n                              \n    }\n\n    handleChange = async (e) => {\n      //console.log(\"vaue e: \", e.target.value);\n      if (e.target.value !== '-1'){\n      const optionsAr = this.state.reports.map(v => ({\n        name: v.name,\n        id: v.id\n      }));\n      \n     const detect = optionsAr.filter(v => (v.id === e.target.value));\n     //console.log(\"detect \",detect);\n     \n      this.setState({ reportId: e.target.value,\n                       name: detect[0].name,\n                       \n       }   );\n       this.toggleClass();\n       \n      } else {\n\n      \n\n      }\n      \n      \n    }\n  \n    onSubmit = async (e) => {\n      e.preventDefault();\n\n      this.setState({ loading: true}, async () => {\n\n    const linksReport= await axiosListReportRec(this.props.email,this.props.sub, this.state.token, this.state.reportId);\n      console.log(\"linksReportformex: \", linksReport);\n  this.setState({reportDownload: linksReport\n  });\n  //console.log(\"stateDidUpdateformex: \", this.state); \n  //console.log('id: ', this.state.reportId);\n  this.toggleClass();\n  console.log(\"isEnabled \", this.state.disabled);\n  \n  this.checkStatusCompleted();\n  \n const linkReport = await axiosGetLink(this.props.email,this.props.sub, this.state.token, this.state.id);\n // console.log(\"my stateLINK2: \",linkReport);\n      this.setState(\n        {link: linkReport,\n       loading: false}\n       )\n    \n\n     this.setState(\n      {\n     loading: false}\n     )\n    }\n    )\n\n  }\n\n\n  \n\n    render() {\n      \n    let loading = this.state.loading;\n      return (\n        \n        <Container>\n           <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Download individual report from WS1 Intelligence</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n\n\n          \n          \n        <Form onSubmit={this.onSubmit}>\n       \n        <Col sm=\"8\">\n          <FormGroup>\n        \n        <Input type =\"select\" className=\"form-control mt-5\" onChange={this.handleChange} disabled={this.state.disabled} >\n          <option value='-1'>select your report</option>\n        {this.state.reports.map((v) => <option key={v.id} value={v.id} name={v.name}>{v.name}</option>)}\n    \n        </Input>\n        </FormGroup>\n        <div className=\"mt-4 mb-4\">\n        <Button type=\"submit\"  variant=\"success\" size=\"sm\" block disabled={!this.state.disabled}>Create Report Link</Button>\n        </div>\n        </Col>\n      </Form> \n       \n         <Row >\n         <Col sm=\"8\" className=\"text-center\">\n      {loading ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n      {(this.state.link && !this.state.disabled) ? <Button  variant=\"outline-dark\" size=\"sm\" block href={this.state.link}>{`Download \"${this.state.name}\" issued ${this.state.date} at ${this.state.time}`}</Button>: \"\"}\n      \n      </Col>\n      \n      </Row>\n      \n     \n      \n      <Row>\n      <h2>{this.state.message}</h2> \n      </Row>\n      \n     \n      </Container>\n     \n      );\n    }\n  }\n\n  export default Report;","import React, { Component } from 'react';\nimport {Button, Spinner, Container, Row, Form, FormGroup, Col, CustomInput} from 'reactstrap';\nimport {getToken, axiosListReportRec, searchAllReports, axiosGetLink2} from '../../apiCall/intelli';\nimport {getTokenMi, fetchData} from '../../apiCall/midatalakes';\nimport _ from 'lodash';\n\nclass ReportsTransfer extends Component {\n  _isMounted = false;\n    state = {\n      reports: [],\n      reportId:'',\n      link: '' ,\n      date: '',\n      id: '' ,\n      message: '' ,\n      disabled: true,\n      time:'',\n      loading: false,\n      token:'',\n      isSelected:false,\n      check: \"check All\",\n      checked: false,\n      markedreports: [],\n      checkedBoxes: [],\n      links: [],\n      tokenMi:'',\n      disabled2:false,\n      value:'',\n      color:\"red\"\n\n    };\n     \n    \n\n     \n    \n  toggleClass() {\n    const currentState = this.state.disabled;\n    this.setState({ disabled: !currentState });\n};\n\ntoggleClassTransfer() {\n  const currentState = this.state.disabled2;\n  this.setState({ disabled2: !currentState });\n};\n\n\n\n\nasync componentDidMount(){\n\n  fetchData(this.props.email, this.props.sub, this.props.miretrieveCreds );\n  this._isMounted = true;\n  this.setState({ loading: true}, async () => {\n\n\n  const token = await getToken(this.props.email,this.props.sub);\n\n  if (token.startsWith(\"Please56785678\")){\n    this.setState({loading: false ,\n      color: \"red\",\n      message: \"You need to go to Settings and set up your credentials\"});\n      }\n  \n\n   else{\n    if (this._isMounted){\n     this.setState({token});\n   \n      const reporting = await searchAllReports(this.props.email,this.props.sub, this.state.token); \n      if (_.isString(reporting.data) ){\n        this.setState({loading: false ,\n          message: reporting.data});\n          }\n      else {\n         let allReports =  reporting.data.map( el => { return {name: el.name, id: el.id}} );\n\n         this.setState({reports: allReports,\n          loading: false });\n         console.log(\"all report\", allReports)\n\n\n        }\n\n         }\n    }\n  });\n\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n    handleCheckedAll =(evt) => {\n\n      if (evt.target.checked) {\n\n        const listReports = this.state.reports\n        \n       this.setState({checkedBoxes: listReports,\n        check: \"Uncheck All\"})\n\n      } else {\n        this.setState({checkedBoxes: [],\n          check: \"Check All\"})\n         \n      }\n    }\n\n\n    handleCheckbox = (e, v) => {\n      const checkedBoxes = [...this.state.checkedBoxes];\n      \n      if(e.target.checked) {\n       checkedBoxes.push(v)\n      } else {\n        const index = checkedBoxes.findIndex((ch) => ch.id === v.id);\n        checkedBoxes.splice(index, 1);\n      }\n      this.setState({checkedBoxes,\n        message:\"\"});\n      \n  \n    }\n  \n\n  \n    onSubmit = async (e) => {\n      e.preventDefault();  \n\n      if (this.props.micreds.tenantid){\n        console.log(\"creds mi \", this.props.micreds.url)\n     if (this.state.checkedBoxes.length>0){\n      \n  \n      this.toggleClass();\n      this.setState({ loading: true}, async () => {\n\n    \n     const getData = async () => {\n        return  await Promise.all(this.state.checkedBoxes.map(async item => await axiosListReportRec(this.props.email,this.props.sub, this.state.token, item.id)))\n     }\n      \n   \n     \n     \n      getData().then(data => {console.log(\"myarray \",data); return data.map(item => item.filter(i => i.status === \"COMPLETED\").reduce(function (a, b) { return a.created_at > b.created_at  ? a : b; })) })\n      .then(data => {console.log(\"myarray2 \",data); this.setState({ loading: false,\n                                                                markedreports: data})})\n  \n   \n        })}else this.setState({color:\"red\",\n          message: \"You need to select a least one report\"})\n      } else this.setState({\n        color:\"red\",\n        message: \"You need to set up your Data Lake Gen 1\"})\n        if (this.state.disabled2) this.toggleClassTransfer();  \n\n      \n  }\n\n\n   onTransfer = async () =>{\n    this.toggleClassTransfer();\n    const tokenMi = await getTokenMi(this.props.email,this.props.sub);\nconsole.log(\"token from mi\", tokenMi);\n    this.setState({ loading: true, tokenMi}, async () => {\n      console.log(\"token from mi 2\", this.state.tokenMi);\n\n   const getData = async () => {\n    return  await Promise.all(this.state.markedreports.map(async item => await axiosGetLink2(this.props.email,this.props.sub,this.state.token, item.id, this.state.tokenMi)))\n  }\n\n  getData().then(data => {\n    console.log(\"last step\",data);\n    console.log(data.length);\n    this.setState({ loading: false,\n    links:data,\n    color: \"green\",\n     message:\"reports have been transfered to Data Lake\"}\n      );\n\n    console.log(\"links \", data )\n  });\n  \n  this.toggleClass();\n    })\n\n}\n\n    render() {\n    \n     \n    let loading = this.state.loading;\n      return (\n        <Container>\n            <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Select reports to be transfered to Data Lake Gen1</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n \n        <Form onSubmit={this.onSubmit}>\n        <Col sm=\"8\">\n        <FormGroup>\n          \n        <CustomInput type =\"checkbox\" id= \"checkall\" onChange={this.handleCheckedAll} label={this.state.check} />\n       <hr></hr>\n        {this.state.reports.map((v) =>  <CustomInput type =\"checkbox\" \n        key={v.id} id={v.id} label={v.name} value={this.state.value}\n        checked={this.state.checkedBoxes.find((ch) => ch.id === v.id)}\n         onChange={(e) => this.handleCheckbox(e, v)}/>)}\n        \n        \n        </FormGroup>\n        <div className=\"mt-4 mb-4\">\n        <Button type=\"submit\" color=\"info\" variant=\"success\" size=\"sm\" block disabled={!this.state.disabled}>Submit Selection</Button>\n        </div>\n        </Col>\n      </Form> \n       \n      <Row >\n         <Col sm=\"8\" className=\"text-center\">\n      {loading ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n      </Col>\n      </Row>\n     \n      <Col sm=\"8\">\n      {(this.state.markedreports.length>0 && !this.state.disabled) ? <Button  variant=\"outline-dark\" size=\"sm\" block  onClick={this.onTransfer} disabled={this.state.disabled2}>Transfer Now</Button>: \"\"}\n      <Row>\n      <h2 className=\"mt-1\" style={{color:this.state.color}}>{this.state.message}</h2> \n      </Row>\n      </Col>\n     \n      \n     \n      </Container>\n      );\n    }\n  }\n\n  export default ReportsTransfer;","import React, { Component } from 'react';\nimport {Button, Spinner, Container, Row, Form, FormGroup, Col, CustomInput} from 'reactstrap';\nimport {getToken, axiosListReportRec, searchAllReports, axiosGetLink3} from '../../apiCall/intelli';\nimport { fetchData} from '../../apiCall/midatalakes';\nimport _ from 'lodash';\n\nclass ReportsTransfer extends Component {\n\n  _isMounted = false;\n\n    state = {\n      reports: [],\n      reportId:'',\n      link: '' ,\n      date: '',\n      id: '' ,\n      message: '' ,\n      disabled: true,\n      time:'',\n      loading: false,\n      token:'',\n      isSelected:false,\n      check: \"check All\",\n      checked: false,\n      markedreports: [],\n      checkedBoxes: [],\n      links: [],\n      color:\"red\",\n      disabled2:false\n\n    };\n   \n  toggleClass() {\n    const currentState = this.state.disabled;\n    this.setState({ disabled: !currentState });\n};\n\ntoggleClassTransfer() {\n  const currentState = this.state.disabled2;\n  this.setState({ disabled2: !currentState });\n};\n\n\nasync componentDidMount(){\n\n  fetchData(this.props.email, this.props.sub, this.props.miretrieve2Creds );\n  this._isMounted = true;\n  this.setState({ loading: true}, async () => {\n\n    console.log(\"ima in did mount\")\n  const token = await getToken(this.props.email,this.props.sub);\n  console.log(\"ima in did mount token\", token)\n  if (token.startsWith(\"Please56785678\")){\n    this.setState({loading: false ,\n      color:\"red\",\n      message: \"You need to go to Settings and set up your credentials\"});\n      }\n      else{\n        if (this._isMounted){\n     this.setState({token});\n     \n     \n      const reporting = await searchAllReports(this.props.email,this.props.sub, this.state.token); \n      if (_.isString(reporting.data) ){\n        this.setState({loading: false ,\n          message: reporting.data});\n          }\n      else {\n         let allReports =  reporting.data.map( el => { return {name: el.name, id: el.id}} );\n\n         this.setState({reports: allReports,\n          loading: false });\n         console.log(\"all report\", allReports)\n      }\n    }\n    }\n  });\n\n  }\n\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n    handleCheckedAll =(evt) => {\n\n      if (evt.target.checked) {\n\n        const listReports = this.state.reports\n        \n       this.setState({checkedBoxes: listReports,\n        check: \"Uncheck All\",\n        message:\"\"})\n\n      } else {\n        this.setState({checkedBoxes: [],\n          check: \"Check All\",\n          message:\"\"})\n      }\n    }\n\n\n    handleCheckbox = (e, v) => {\n      const checkedBoxes = [...this.state.checkedBoxes];\n      \n      if(e.target.checked) {\n       checkedBoxes.push(v)\n      } else {\n        const index = checkedBoxes.findIndex((ch) => ch.id === v.id);\n        checkedBoxes.splice(index, 1);\n      }\n      this.setState({checkedBoxes,\n        message:\"\"});\n      \n  \n    }\n  \n\n  \n    onSubmit = async (e) => {\n      e.preventDefault();\n      if (this.props.mi2creds.azureconnectstring){\n      if (this.state.checkedBoxes.length>0){\n      this.toggleClass();\n      this.setState({ loading: true}, async () => {\n\n    \n     const getData = async () => {\n        return  await Promise.all(this.state.checkedBoxes.map(async item => await axiosListReportRec(this.props.email,this.props.sub, this.state.token, item.id)))\n     }\n      \n   \n     \n     \n      getData().then(data => {console.log(\"myarray \",data); return data.map(item => item.filter(i => i.status === \"COMPLETED\").reduce(function (a, b) { return a.created_at > b.created_at  ? a : b; })) })\n      .then(data => {console.log(\"myarray2 \",data); this.setState({ loading: false,\n                                                                markedreports: data})})\n  \n   \n        }) } else this.setState({\n          color:\"red\",\n          message: \"You need to select a least one report\"})\n\n      } else this.setState({\n        color:\"red\",\n        message: \"You need to set up your Data Lake Gen 2\"})\n        if (this.state.disabled2) this.toggleClassTransfer();\n  }\n\n\n   onTransfer = async () =>{\n    this.toggleClassTransfer();\n    \n    this.setState({ loading: true}, async () => {\n     \n\n   const getData = async () => {\n    return  await Promise.all(this.state.markedreports.map(async item => await axiosGetLink3(this.props.email,this.props.sub,this.state.token, item.id)))\n  }\n\n  getData().then(data => {\n    console.log(\"last step\",data);\n    console.log(data.length);\n    this.setState({ loading: false,\n    links:data,\n    color: \"green\",\n    message:\"reports have been transfered to Data Lake\"}\n      );\n\n    console.log(\"links \", this.state.links )\n  });\n  \n  this.toggleClass();\n    })\n\n}\n\n    render() {\n    \n    let loading = this.state.loading;\n      return (\n        <Container>\n           <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Select reports to be transfered to Data Lake Gen2</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n          \n\n           \n        <Form onSubmit={this.onSubmit}>\n        <Col sm=\"8\">\n        <FormGroup>\n       \n        <CustomInput type =\"checkbox\" id= \"checkall\" onChange={this.handleCheckedAll} label={this.state.check} />\n       <hr></hr>\n        {this.state.reports.map((v) =>  <CustomInput type =\"checkbox\" \n        key={v.id} id={v.id} label={v.name} \n        checked={this.state.checkedBoxes.find((ch) => ch.id === v.id)}\n         onChange={(e) => this.handleCheckbox(e, v)}/>)}\n        \n        \n        </FormGroup>\n        <div className=\"mt-4 mb-4\">\n        <Button type=\"submit\"  color=\"info\" variant=\"success\" size=\"sm\" block disabled={!this.state.disabled}>Submit selection</Button>\n        </div>\n        </Col>\n      </Form> \n       \n      <Row >\n         <Col sm=\"8\" className=\"text-center\">\n      {loading ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n      </Col>\n      </Row>\n      \n      <Col sm=\"8\">\n      {(this.state.markedreports.length>0 && !this.state.disabled) ? <Button  variant=\"outline-dark\" size=\"sm\" block  onClick={this.onTransfer} disabled={this.state.disabled2}>Transfer Now</Button>: \"\"}\n      \n      <Row>\n      <h2 className=\"mt-1\" style={{color:this.state.color}}>{this.state.message}</h2> \n      </Row>\n      </Col>\n      \n      \n      \n      </Container>\n      );\n    }\n  }\n\n  export default ReportsTransfer;","import React, { Component } from 'react';\nimport {Button, Spinner, Container, Row, Form, FormGroup, Col, CustomInput} from 'reactstrap';\nimport {getToken, axiosListReportRec, searchAllReports, axiosGetLink4} from '../../apiCall/intelli';\nimport { fetchGoogleData} from '../../apiCall/google';\nimport _ from 'lodash';\n\nclass TransferGoogle extends Component {\n\n  _isMounted = false;\n\n    state = {\n      reports: [],\n      reportId:'',\n      link: '' ,\n      date: '',\n      id: '' ,\n      message: '' ,\n      disabled: true,\n      time:'',\n      loading: false,\n      token:'',\n      isSelected:false,\n      check: \"check All\",\n      checked: false,\n      markedreports: [],\n      checkedBoxes: [],\n      links: [],\n      color:\"red\",\n      disabled2:false\n\n    };\n   \n  toggleClass() {\n    const currentState = this.state.disabled;\n    this.setState({ disabled: !currentState });\n};\n\ntoggleClassTransfer() {\n  const currentState = this.state.disabled2;\n  this.setState({ disabled2: !currentState });\n};\n\n\nasync componentDidMount(){\n\n  fetchGoogleData(this.props.email, this.props.sub, this.props.gooRetrieveCreds );\n  this._isMounted = true;\n  this.setState({ loading: true}, async () => {\n\n\n  const token = await getToken(this.props.email,this.props.sub);\n\n  if (token.startsWith(\"Please56785678\")){\n    this.setState({loading: false ,\n      color:\"red\",\n      message: \"You need to go to Settings and set up your credentials\"});\n      }\n      else{\n        if (this._isMounted){\n     this.setState({token});\n     \n     \n      const reporting = await searchAllReports(this.props.email,this.props.sub, this.state.token); \n      if (_.isString(reporting.data) ){\n        this.setState({loading: false ,\n          message: reporting.data});\n          }\n      else {\n         let allReports =  reporting.data.map( el => { return {name: el.name, id: el.id}} );\n\n         this.setState({reports: allReports,\n          loading: false });\n         console.log(\"all report\", allReports)\n      }\n    }\n    }\n  });\n\n  }\n\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n    handleCheckedAll =(evt) => {\n\n      if (evt.target.checked) {\n\n        const listReports = this.state.reports\n        \n       this.setState({checkedBoxes: listReports,\n        check: \"Uncheck All\",\n        message:\"\"})\n\n      } else {\n        this.setState({checkedBoxes: [],\n          check: \"Check All\",\n          message:\"\"})\n      }\n    }\n\n\n    handleCheckbox = (e, v) => {\n      const checkedBoxes = [...this.state.checkedBoxes];\n      \n      if(e.target.checked) {\n       checkedBoxes.push(v)\n      } else {\n        const index = checkedBoxes.findIndex((ch) => ch.id === v.id);\n        checkedBoxes.splice(index, 1);\n      }\n      this.setState({checkedBoxes,\n        message:\"\"});\n      \n  \n    }\n  \n\n  \n    onSubmit = async (e) => {\n      e.preventDefault();\n      if (this.props.goocreds.bucket){\n      if (this.state.checkedBoxes.length>0){\n      this.toggleClass();\n      this.setState({ loading: true}, async () => {\n\n    \n     const getData = async () => {\n        return  await Promise.all(this.state.checkedBoxes.map(async item => await axiosListReportRec(this.props.email,this.props.sub, this.state.token, item.id)))\n     }\n      \n   \n     \n     \n      getData().then(data => {console.log(\"myarray \",data); return data.map(item => item.filter(i => i.status === \"COMPLETED\").reduce(function (a, b) { return a.created_at > b.created_at  ? a : b; })) })\n      .then(data => {console.log(\"myarray2 \",data); this.setState({ loading: false,\n                                                                markedreports: data})})\n  \n   \n        }) } else this.setState({\n          color:\"red\",\n          message: \"You need to select a least one report\"})\n\n      } else this.setState({\n        color:\"red\",\n        message: \"You need to set up Google Cloud\"})\n        if (this.state.disabled2) this.toggleClassTransfer();\n  }\n\n\n   onTransfer = async () =>{\n    this.toggleClassTransfer();\n   \n    this.setState({ loading: true}, async () => {\n    \n\n   const getData = async () => {\n    return  await Promise.all(this.state.markedreports.map(async item => await axiosGetLink4(this.props.email,this.props.sub,this.state.token, item.id)))\n  }\n\n  getData().then(data => {\n    console.log(\"last step\",data);\n    console.log(data.length);\n    this.setState({ loading: false,\n    links:data,\n    color: \"green\",\n    message:\"reports have been transfered to Data Lake\"}\n      );\n\n    console.log(\"links \", this.state.links )\n  });\n  \n  this.toggleClass();\n    })\n\n}\n\n    render() {\n    \n    let loading = this.state.loading;\n      return (\n        <Container>\n           <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Select reports to be transfered to Google Cloud</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n          \n\n           \n        <Form onSubmit={this.onSubmit}>\n        <Col sm=\"8\">\n        <FormGroup>\n       \n        <CustomInput type =\"checkbox\" id= \"checkall\" onChange={this.handleCheckedAll} label={this.state.check} />\n       <hr></hr>\n        {this.state.reports.map((v) =>  <CustomInput type =\"checkbox\" \n        key={v.id} id={v.id} label={v.name} \n        checked={this.state.checkedBoxes.find((ch) => ch.id === v.id)}\n         onChange={(e) => this.handleCheckbox(e, v)}/>)}\n        \n        \n        </FormGroup>\n        <div className=\"mt-4 mb-4\">\n        <Button type=\"submit\"  color=\"info\" variant=\"success\" size=\"sm\" block disabled={!this.state.disabled}>Submit selection</Button>\n        </div>\n        </Col>\n      </Form> \n       \n      <Row >\n         <Col sm=\"8\" className=\"text-center\">\n      {loading ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n      </Col>\n      </Row>\n      \n      <Col sm=\"8\">\n      {(this.state.markedreports.length>0 && !this.state.disabled) ? <Button  variant=\"outline-dark\" size=\"sm\" block  onClick={this.onTransfer} disabled={this.state.disabled2}>Transfer Now</Button>: \"\"}\n      \n      <Row>\n      <h2 className=\"mt-1\" style={{color:this.state.color}}>{this.state.message}</h2> \n      </Row>\n      </Col>\n      \n      \n      \n      </Container>\n      );\n    }\n  }\n\n  export default TransferGoogle;","\nimport React, { Component } from 'react';\nimport {  CardBody, CustomInput, Label, FormGroup, Input,CardTitle , Col, Row} from 'reactstrap';\n\n\n\n\nclass Weekly extends Component {\n\n\n\n state={\n   value:[]\n }\n\n\n getHours = () =>{\n  var hours = [];\n  var leap = parseInt(this.props.hours) || 1;\n\n  for (var i = 0; i < 24; i = i + leap) {\n    hours.push(React.createElement(\"option\", {\n      key:i,\n      id: i,\n      value: i < 10 ? \"0\".concat(i) : i\n    }, i < 10 ? \"0\".concat(i) : i));\n  }\n\n  return hours;\n}\n\n getMinutes = () => {\n  var minutes = [];\n  var leap = parseInt(this.props.minutes) || 1;\n\n  for (var i = 0; i < 60; i = i + leap) {\n    minutes.push(React.createElement(\"option\", {\n      key:i,\n      id: i,\n      value: i < 10 ? \"0\".concat(i) : i\n    }, i < 10 ? \"0\".concat(i) : i));\n  }\n\n  return minutes;\n}\n\nonAtHourChange =(e) => {\n  var val = this.state.value;\n  //val[0] = '0';\n  val[1] = \"\".concat(e.target.value);\n  this.props.onChange(val);\n}\n\nonAtMinuteChange=(e) =>{\n  var val = this.state.value;\n  //val[0] = '0';\n  val[0] = \"\".concat(e.target.value);\n  this.props.onChange(val);\n}\n\nonCheck= (e) => {\n  var val = this.state.value;\n  //val[0] = '0';\n\n  if (e.target.checked) {\n    val[2] = '*';\n    val[3] = '*';\n    console.log(\"target - \", e.target.value);\n\n    if (val[4] === '*' ) {\n      val[4] = e.target.value;\n    } else {\n      val[4] = val[4] + '!' + e.target.value;\n      console.log(\"val[4] \", val[4])\n\n    }\n  } else {\n    console.log(\"length - \", val[4].length);\n    if (val[4].length > 1) {\n      val[4] =  val[4].split(\"!\") \n     \n      val[4].splice(val[4].indexOf(e.target.value), 1);\n     \n      val[4] = val[4].toString().replace(/,/g, '!');\n  \n    } else {\n      console.log(\"length - low - \", val[4].length);\n      val[4] = '*';\n    }\n  }\n  \n  this.props.onChange(val);\n  this.props.resetMessage();\n}\n\n  \n\n  render(){\n    \n//check length if nothing working\n    this.state.value = this.props.value ;\n    \n    return (\n      \n          \n          <CardBody>\n            <CardTitle className= \"cron-builder-bg\">Weekly Schedule</CardTitle>\n          <Row className= \"ron_builder_bordering\">\n          <Col  sm-auto=\"true\" >\n            <FormGroup>  \n        <CustomInput type=\"checkbox\" id=\"MON\" label=\"Monday\" value=\"1\" onClick= {this.onCheck}\n        defaultChecked= { this.state.value[4].search('1') !== -1 ? true : false} className=\"text_align_left\"/>\n        <CustomInput type=\"checkbox\" id=\"WED\" label=\"Wednesday\" value=\"3\" onClick= {this.onCheck}\n        defaultChecked= {this.state.value[4].search('3') !== -1 ? true : false} className=\"text_align_left\"/>\n        <CustomInput type=\"checkbox\" id=\"FRI\" label=\"Friday\" value=\"5\" onClick= {this.onCheck}\n        defaultChecked= {this.state.value[4].search('5') !== -1 ? true : false} className=\"text_align_left\"/>\n        <CustomInput type=\"checkbox\" id=\"SUN\" label=\"Sunday\" value=\"7\" onClick= {this.onCheck}\n        defaultChecked= {this.state.value[4].search('7') !== -1 ? true : false} className=\"text_align_left\"/>\n      </FormGroup>\n      </Col>\n      <Col sm-auto=\"true\">\n      <FormGroup >  \n        <CustomInput type=\"checkbox\" id=\"TUE\" label=\"Tuesday\" value=\"2\" onClick= {this.onCheck}\n        defaultChecked= {this.state.value[4].search('2') !== -1 ? true : false} />\n        <CustomInput type=\"checkbox\" id=\"THU\" label=\"Thursday\" value=\"4\" onClick= {this.onCheck}\n        defaultChecked= {this.state.value[4].search('4') !== -1 ? true : false} />\n        <CustomInput type=\"checkbox\" id=\"SAT\" label=\"Saturday\" value=\"6\" onClick= {this.onCheck}\n        defaultChecked= {this.state.value[4].search('6') !== -1 ? true : false} />\n      </FormGroup >  \n      </Col>\n\n      </Row>\n         <Row >\n        \n      \n      <Col sm={{ size:2, offset:3}} >\n      \n        <Label >Start Time:</Label>\n       \n        </Col>\n        <Col sm={{ size:0 }}  >\n        \n        <Input type=\"select\" name=\"hours\" id=\"hours\" onChange={this.onAtHourChange} value={this.state.value[1]} >{this.getHours()}</Input>\n        </Col>\n        \n        \n        <Col sm={{ size: 0}} className={\"pl-2\"}>\n      <Input type=\"select\" name=\"minutes\" id=\"minuts\" onChange={this.onAtMinuteChange} value={this.state.value[0]}>{this.getMinutes()}</Input>\n      </Col>\n      \n      \n     \n      </Row> \n            \n           \n            \n          </CardBody>\n       \n    );\n\n\n\n\n  }\n\n\n}\n\nexport default Weekly","import axios from 'axios';\nimport {SERVER_URL} from '../config';\n\n\n\nexport const createJob = async (name, urlapi) => {\n  \n  const url = `${SERVER_URL}/agenda/job`;\n\n  const data = {\n      name,\n      urlapi   \n  }\n  \n\n  const job = await axios.post(url,{data}); \n\n  return job;\n}\n\n\nexport const deleteTask = async(name, token)=>{\n\n  \n  console.log(\"token from cratejob\", token)\n\n  const url = `${SERVER_URL}/agenda/job/delete`;\n\n  const data = {\n      name\n  }\n\n  const headers = {\n    Authorization: `Bearer ${token}`\n}\n\n  const job = await axios.post(url,{data},{headers}); \n  console.log(\"this is a jo from deleteb\");\n  return job;\n}\n\nexport const cancelTask = async(name, token)=>{\n  \n  console.log(\"token from cratejob\", token)\n\n\n  const url = `${SERVER_URL}/agenda/job/cancel`;\n\n  const data = {\n      name\n  }\n  const headers = {\n    Authorization: `Bearer ${token}`\n}\n\n  const job = await axios.post(url,{data},{headers}); \n\n  return job;\n}\n\nexport const startTask = async(email, sub, name, interval, token) => {\n  \n  console.log(\"token from cratejob\", token)\n\n  const url = `${SERVER_URL}/agenda/job/run`;\n\n  const data = {\n      email,\n      sub,\n      name,\n      interval\n  }\n\n  const headers = {\n    Authorization: `Bearer ${token}`\n}\n\n  const job = await axios.post(url,{data},{headers}); \n\n  return job;\n}\n\n\n\n    \n","import React from 'react';\nimport {Table, Button} from 'reactstrap';\nimport {startTask, deleteTask, cancelTask} from '../../apiCall/agenda';\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\n\n const Tasks =(props) => {\n\n\n  const { getTokenSilently } = useAuth0();\n  \n  const callCancelTask = async (name, index0) => {\n    try {\n      const token = await getTokenSilently();\n      cancelTask(name, token).then((data)=>{\n        console.log(\"datafrom front stop \", data)\n      props.onButton(index0);\n      })\n    }catch (error) {\n      console.error(error);\n    }\n  };\n\n  const callStartTask = async (index0, email, sub, name, interval) => {\n    try {\n      const token = await getTokenSilently();\n      startTask(email, sub, name, interval, token).then((data)=>{\n        console.log(\"datafrom front start \", data)\n      props.onButton(index0);\n      })\n    }catch (error) {\n      console.error(error);\n    }\n  };\n\n  const callDeleteTask = async (name) => {\n    try {\n      const token = await getTokenSilently();\n      deleteTask(name, token).then((data)=>{\n        console.log(\"datafrom front stop \", data)\n      \n      })\n    }catch (error) {\n      console.error(error);\n    }\n  };\n  \n    return (\n      <div>\n        \n        <Table  striped borderless className=\"mt-5\"> \n          <thead>\n            <tr className='cron-builder-bg'>\n              <th>#</th>\n              <th  width=\"50%\">Scheduled</th>\n              <th width=\"25%\">Repository</th>\n              <th width=\"25%\">Commands</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n            {props.items.map((item, i )=> {\n         //     console.log(\"from map \", i)\n              const index =i;\n              return (\n                <tr key={i}>\n                  <th scope='row'>{i+1}</th>\n                  <td>{item.scheduled}</td>\n                  <td align=\"center\">{item.repo}</td>\n                  <td align=\"center\"><Button  className=\"mr-4\" color={item.position?\"danger\":\"success\"}  onClick= {item.position?() =>{\n                   console.log(\"stop and position\",item.position )\n                   \n\n                   callCancelTask(item.name, index)\n                    \n                    }: () => {\n                      \n                      console.log(\"startand position\",item.position );\n                      callStartTask(index, props.email, props.sub, item.name, item.interval)\n                      \n                }}>{item.position?\"Stop\":\"Start\"}</Button> \n                  \n                  \n                    {!item.position? <Button color=\"danger\"  onClick= {()=>{\n                         console.log(\"begining of i\", index)\n                         const itemrem = props.items;\n                         itemrem.splice(index,1);\n\n                         callDeleteTask(item.name)\n                         \n                         props.delitem(itemrem);\n                         }\n                         }>Delete</Button>:\"\" }</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n\nexport default Tasks;","import React, { Component } from 'react';\nimport { Card, Button ,Form, FormGroup, CustomInput} from 'reactstrap';\nimport Weekly from './Weekly';\nimport Tasks from './Tasks';\nimport cronstrue from 'cronstrue';\nimport axios from \"axios\";\nimport {fetchTasks} from '../../apiCall/intelli';\nimport {createJob} from '../../apiCall/agenda';\nimport uniqid from 'uniqid';\nimport {fetchData} from '../../apiCall/midatalakes';\nimport {fetchIntelliData} from '../../apiCall/intelli';\nimport { fetchGoogleData} from '../../apiCall/google';\nimport {SERVER_URL} from '../../config';\n\n\n\nclass Cron extends Component {\n\n state  = {repo:'',\n           value: ['0', '0', '*',  '*',  '*'],\n          interval:\"0 0 * * *\",\n           gen:'' ,\n           message:''\n      }\n\n   \n\n      componentDidMount(){      \n          fetchTasks(this.props.email, this.props.sub, this.props.retrieveTasks );\n          fetchGoogleData(this.props.email, this.props.sub, this.props.gooRetrieveCreds );\n          fetchData(this.props.email, this.props.sub, this.props.miretrieveCreds );\n          fetchIntelliData(this.props.email, this.props.sub, this.props.retrieveCreds );\n        fetchData(this.props.email, this.props.sub, this.props.miretrieve2Creds);\n      }\n\n      onValueChange=(val)=> {\n        if (val && val.length) {\n          this.setState({\n            value: val\n          });\n        } else {\n          this.setState({\n            value: ['0', '0', '*',  '*',  '*']\n          });\n          val = [ '0', '0', '*', '*',  '*'];\n        }\n        console.log(\"val from cron \", val)\n       this.parentChange(val);\n      }\n\n      parentChange=(val)=> {\n        var newVal = '';\n      \n      if (val[4] === '*') {newVal = '*'}\n      else{\n      var inorder = val[4].split(\"!\").map(Number).sort().toString().replace(/,/g, '!');\n       val.splice(4, 1, inorder);\n        \n        newVal = val.toString().replace(/,/g, ' ');\n        newVal = newVal.replace(/!/g, ',');\n      }\n       console.log(\"newVal \", newVal)\n        this.setState({interval:newVal})\n      }\n\n      \n\n      getVal=() =>{\n\n     if(this.state.interval !== '*'){\n         var val = cronstrue.toString(this.state.interval);\n         \n         if (val.search('undefined') === -1) {\n           return val;\n         }\n   \n         return '-';\n        }    \n       }\n\n      handleChange = event => {\n       \n        this.setState({\n          repo: event.target.value,\n          gen: event.target.id,\n          unique: 0,\n          message:''\n         \n        });\n      }\n      \n\n\n      resetMessage = () => {\n        this.setState({\n          \n          message: ''\n        \n        });\n      }\n\n      onSubmit = async (e) => {\n        e.preventDefault();\n      }\n\n      handleTaskSubmit = (e) => {\n        e.preventDefault();\n        if((this.props.creds.clientid && this.props.micreds.azureclientid) ||(this.props.creds.clientid && this.props.mi2creds.azureconnectstring) ||(this.props.creds.clientid && this.props.goocreds.bucket)){\n         \n       \n        let items = [...this.props.tasks.items] //[...this.state.items];\n       \n        if (this.state.value[4]==='*') {\n         \n          this.setState({message: \"please check at least one checkbox\"});\n        return;} \n      \n        if (!this.state.repo){this.setState({message: \"please select one datalake or google storage\"}); return;}\n         \n        if (items.length > 2) {this.setState({message: \"You reached maximum number of Jobs\"})}\n        else{\n        const uniq = uniqid();\n        const name = this.props.sub+\"-\"+uniq;\n       \n      \n       \n        items.push({scheduled: this.getVal(), repo: this.state.repo, position: this.props.tasks.position, name, interval:this.state.interval})\n         console.log(\"items from submit: \", items)\n   \n          this.saveTasks(items);\n          const urlapi= `http://127.0.0.1:8000/api/agenda/${this.state.gen}`;\n         \n         \n         \n         createJob(name, urlapi);\n        }\n      }\n        else {  this.setState({message: \"please go to settings and configure Intelligence and Cloud storage\"});\n      }\n       }\n\n       \n  \n\n      onButtonPosition =(index) => {\n        let items = [...this.props.tasks.items] \n\n      const newItem=  items.map((item, i)=>{ if( i === index)\n         { \n          item.position = !item.position ; }\n       \n      return item}) \n      \n     \n      this.saveTasks(newItem); \n      }\n\n\n    onItemDel =(newtem) =>{\n   this.setState({message: ''})\n   this.saveTasks(newtem);\n    }\n\n    \n     saveTasks = async (tasks) => {\n\n    \n      const url = `${SERVER_URL}/task`;\n      \n      const data ={\n        email: this.props.email,\n        sub: this.props.sub,\n        items: tasks\n       \n      }\n      \n    try { const result = await axios.post(url, data); \n    //  console.log(\"jwtStatus \",result);\n      \n     if (result.status === 200){\n         \n\n            //save in redux props\n        //    console.log(\"from cron retrived \",  )\n            this.props.retrieveTasks({items: tasks});\n\n\n            return result;\n        }\n        else {\n          \n          } \n\n    \n    } catch(err){\n     console.log(err);\n      \n      }\n      \n  }\n    \n\n      render() {\n\n       console.log(\"valeu from cron\", this.props)\n       return (\n         <div>\n      <Card style={{width:\"70%\"}}>\n     <Form >\n      <Weekly value={this.state.value}\n      onChange={this.onValueChange}  resetMessage ={this.resetMessage} />\n    \n    <div className= \"cron-builder-bg\" >{this.getVal()} </div>\n   { (this.props.showResultCron) ?   <div className= \"cron-builder-bg\"  >{this.state.value.toString().replace(/,/g, ' ').replace(/!/g, ',')}</div> :\"\" }\n   \n   <FormGroup check inline className='text_align_lake'>\n        \n    {(this.props.micreds.azureclientid)  ?   <CustomInput id=\"genv1\" type=\"radio\"  name=\"gen\" value=\"Datalake Gen v1\" checked={this.state.repo === \"Datalake Gen v1\"} label=\"Datalake Gen v1\" className=\"pr-2\" onChange={this.handleChange}/> :''}\n        \n      \n    {(this.props.mi2creds.azureconnectstring)  ?   <CustomInput className=\"ml-3\" id=\"genv2\" type=\"radio\" name=\"gen\" value=\"Datalake Gen v2\" checked={this.state.repo === \"Datalake Gen v2\"} label=\"Datalake Gen v2\" onChange={this.handleChange}/>  :''}\n       \n    {(this.props.goocreds.bucket)  ?   <CustomInput className=\"ml-3\" id=\"genv3\" type=\"radio\" name=\"gen\" value=\"Google storage\" checked={this.state.repo === \"Google storage\"} label=\"Google storage\" onChange={this.handleChange}/>  :''}\n    \n\n      </FormGroup>\n   \n   <Button  variant=\"outline-dark\" size=\"sm\" block onClick={this.handleTaskSubmit}>Submit</Button>\n   \n   </Form>\n   <span className='cron-message-bg'>{this.state.message}</span>\n    </Card>\n    <Tasks  items={ this.props.tasks.items/*this.state.items*/} delitem={this.onItemDel} onButton={this.onButtonPosition} email={this.props.email} sub={this.props.sub}   />\n    </div>\n    )\n      }\n}\n\nexport default Cron","import React, { Component } from 'react';\nimport Cron from '../scheduler/Cron';\nimport { Row, Col} from 'reactstrap';\n\nclass Scheduler extends Component {\n\n  \n\n\n  render() {\n   \n    return (<div>\n          <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>All reports scheduled in WS1 Intelligence will be transfered</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n\n\n      <Cron tasks={this.props.tasks} email={this.props.email} sub={this.props.sub} selectTasks={this.props.selectTasks}  retrieveTasks={this.props.retrieveTasks}\n      miretrieveCreds={this.props.miretrieveCreds}\n      miretrieve2Creds={this.props.miretrieve2Creds}\n      retrieveCreds={this.props.retrieveCreds}\n        creds = {this.props.creds}\n        micreds = {this.props.micreds}\n        mi2creds = {this.props.mi2creds}\n        goocreds={this.props.goocreds} \n        gooRetrieveCreds={this.props.gooRetrieveCreds}\n        showResultText={true}\n        showResultCron={false}\n        />\n                            \n    </div>)\n  }\n}\n\nexport default Scheduler;","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport {SERVER_URL} from '../../config';\n\nimport {\n  \n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Col,\n  Container,\n  Row\n\n} from \"reactstrap\";\n\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \n     disabled: true,\n      feedback: '',\n      message: \"\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n      message:''\n    });\n    if (name ===\"object\" && value !== '-1'){\n      this.setState({\n        disabled: false\n      });\n    }\n    else if (name ===\"object\" && value === '-1') this.setState({\n      disabled: true\n    });\n  }\n\n\n\n  sendFeedback = async (email, name, object, feedback) => {\n\n    \n    const url = `${SERVER_URL}/contact/send`;\n     \n    const data ={\n      email,\n      name,\n      object,\n      feedback\n\n     \n    }\n    \n  try { const feed = await axios.post(url, data); \n    \n    if (feed.data === \"your message has been sent\")\n      this.setState({\n        color: \"green\",\n        message: feed.data});\n       else  this.setState({\n        color: \"red\",\n        message: feed.data});\n        console.log(\"fromapi \",feed)\n      }\n\n   catch(err){\n   console.log(err);\n    \n    }\n    \n}\n\n  handleSubmit(event) {\n    event.preventDefault();\n     \n    this.sendFeedback(this.props.email, this.props.name, this.state.object, this.state.feedback)\n\n    this.setState({feedback: '',})\n    \n  }\n  \n\n    \n  \n\n  render() {\n    \n    return (\n      <Container>\n       \n      <Row>\n       <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n           \n           <Col sm=\"8\" className=\"text-center\">\n      <h5 className=\"mb-3 title\" style={{textAlign: \"center\"}}>Send us your Feedback, {this.props.name}</h5>  \n       </Col>\n       </Row>\n       <Row>\n        <Col sm=\"8\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n\n        <div className=\"row row-content\">\n          \n\n\n\n          \n          <div className=\"col-12 col-md-9  mt-5\">\n            <Form onSubmit={this.handleSubmit}>\n             \n             \n              <FormGroup row>\n                <Label htmlFor=\"object\" md={2}>\n                  Object:\n                </Label>\n                <Col md={10}>\n                  <Input\n                    type=\"select\"\n                    id=\"object\"\n                    name=\"object\"\n                   \n                    onChange={this.handleInputChange}\n                  >\n                     <option name=\"action\" value='-1'>Select subject...</option>\n                     <option name=\"action\" value='bug'>Is it about a Bug?</option>\n                      <option name=\"action\" value='support'>Does it concern support?</option>\n                      <option name=\"action\" value='feature request'>Do you want a new feature?</option>\n                      <option name=\"action\" value='other'>Any other subject</option>\n                    </Input>\n                  \n                </Col>\n              </FormGroup>\n             \n             \n              <FormGroup row>\n                <Label htmlFor=\"feedback\" md={2}>\n                  Description:\n                </Label>\n                <Col md={10}>\n                  <Input\n                    type=\"textarea\"\n                    id=\"feedback\"\n                    name=\"feedback\"\n                    minLength=\"10\"\n                    rows=\"12\"\n                    value={this.state.feedback}\n                    onChange={this.handleInputChange}\n                    required\n                  ></Input>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\" disabled={this.state.disabled}>\n                    Send Feedback\n                  </Button>\n                  <h2 style ={{color: this.state.color}} className=\"mt-3\">{this.state.message}</h2>\n                </Col>\n              </FormGroup>\n            </Form>\n          </div>\n        </div>\n        <Row>\n       \n      </Row>\n      \n        \n      </Container>\n    );\n  }\n}\n\nexport default Contact;","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../Auth0/react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!isAuthenticated) {\n        await loginWithRedirect({\n          appState: { targetUrl: path }\n        });\n      }\n    };\n    fn();\n  }, [isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} />  : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nPrivateRoute.propTypes = {\n /* component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired, */\n  path: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]).isRequired\n};\n\nexport default PrivateRoute;\n","import React, { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport useResizeAware from \"react-resize-aware\";\nimport \"./faq.css\";\n\n\n\nconst Faq = props => {\n  const { question, answer, name } = props;\n  const [isOpen, toggleOpen] = useState(false);\n  const [resizeListener, { height }] = useResizeAware();\n  \n  const animProps = useSpring({\n    height: isOpen ? height : 0,\n    opacity: isOpen ? 1 : 0,\n  });\n  \n  return (\n     <React.Fragment>\n      <div className=\"faq-question\" onClick={() => toggleOpen(!isOpen)}>\n        <span>{`${name}: ${question}`}</span>\n      </div>\n\n      <animated.div className=\"faq-answer\" style={{ ...animProps }}>\n        <span style={{ position: \"relative\" }}>\n          {resizeListener}\n          {answer}\n        </span>\n      </animated.div>\n      </React.Fragment>\n  );\n};\n\nexport default Faq;","import React from \"react\";\n\nimport Faq from \"./Faq\";\nimport Parser from \"html-react-parser\";\nimport perm from \"./gen1.png\";\nimport intelligraph from \"./intelli.png\";\nimport gen2 from \"./gen2.png\";\nimport gen2utils from \"./gen2grapg.png\";\nimport googleapistorage from \"./googleapistorage.png\";\nimport serviceacc from \"./serviceacc.png\";\n\n\nconst genv1 = `<div><p><b>-1- Create an Active Directory web application</b></p><ul><li>Instructions: <a target=\"_blank\" href=\"https://docs.microsoft.com/en-us/azure/data-lake-store/data-lake-store-service-to-service-authenticate-using-active-directory#step-1-create-an-active-directory-web-application\"><u>Here</u></a></li><li>in Application, create a secret from certificates&secrets</li><li>In API permissions, add «Azure Storage » in « APIs my organization uses »</li><li>Application Tenant ID, Client ID and secret are required as credentials in Settings</li></ul><p><b>-2- Create a Data Lake Storage Gen1 account</b></p><ul><li> This account name is required as credential in settings</li><li>from this account, add permission to the Application you created  => go to <u>data explorer</u> and <u>access</u> menu</li><img style=\"height: 50%; width: 50%;\" src=${perm} alt=\"permissions\"><li>Instructions: <a target=\"_blank\" href=\"https://docs.microsoft.com/en-us/azure/data-lake-store/data-lake-store-service-to-service-authenticate-using-active-directory#step-3-assign-the-azure-ad-application-to-the-azure-data-lake-storage-gen1-account-file-or-folder\"><u>Here</u></a></li></ul></div>`\nconst intelli =`<ol><li>In WS1 Intelligence, go to Setting and create a Service Account </li><li>in Intelligence Settings, provide Token Endpoint, Client id and Client Secret as shown below:</li><img style=\"height: 50%; width: 50%;\" src=${intelligraph} alt=\"permissions\"></ol>`\nconst genv2 = `<div><p><b>-1- Create a Storage Account with Data Lake Storage Gen 2 enabled</b></p><ul><li>Instructions: <a target=\"_blank\" href=\"https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json#create-a-storage-account-with-azure-data-lake-storage-gen2-enabled\"><u>Here</u></a></li><li>Go to storage Account Gen2 and copy the connection string from Settings=>Access Keys as shown below:</li><img style=\"height: 50%; width: 50%;\" src=${gen2} alt=\"permissions\"></ul><p><b>-2- Provide full connection String in Microsoft Data Lakes Settings</b></p><ul><img style=\"height: 50%; width: 50%;\" src=${gen2utils} alt=\"permissions\"></ul>`\nconst aw = '<ol><li>Username &amp; Password of an admin account created on the AirWatch console with API access.</li><li>An admin API Key for the calls.</li></ol><p>&#8220;Basic Authentication&#8221; may not be enabled on your AirWatch console, to enable go the to root Organisation Group then: Groups &gt; Groups &amp; Settings &gt; System &gt; Advanced &gt; API &gt; REST &gt; Authentication</p><p>The admin API Key is generated via going to Groups &gt; Groups &amp; Settings &gt; System &gt; Advanced &gt; API &gt; REST &gt; General.</p><p>There you can tick &#8220;Enable API Access&#8221; &amp; add a service. Entering a service name will generate an API Key.</p>'\n\nconst genv3 = `<div><p>-1- Create a new project on <a target=\"_blank\" href=\"https://console.developers.google.com\"><u>Google Developer Console</u></a></p></div><div><p>-2- Enable Google Cloud Storage for your project. This API can be found by clicking on Library in the sidebar and in the searching for storage</p><img style=\"height: 60%; width: 60%; margin-bottom: 1em;\" src=${googleapistorage} alt=\"permissions\"></div><div>-3- Create a service account. This  can be found by clicking on IAM&ADMIN in the sidebar and in service account.<ul><li>Give Storage Admin permissions to the account</li><li>Create service account key json and download the file to upload later in WS1 UTILS settings</li><img style=\"height: 70%; width: 70%; margin-bottom: 1em;\" src=${serviceacc} alt=\"permissions\"><div><div><div><p>-4- Create a bucket on <a target=\"_blank\" href=\"https://console.cloud.google.com/storage\"><u>Google Cloud Storage</u></a> Note: <em>The name of the bucket needs to be unique and will be needed to complete WS1 UTILS settings</em> </p></div>`\n\n\nconst faqsData = [\n  {\n    question: \"How to navigate?\",\n    answer: \"Select product on top NavBar, sub-menu will appear on sideBar\",\n  },\n  {\n    question: \"How to configure UEM?\",\n    answer: aw,\n  },\n  {\n    question: \"How to configure intelligence?\",\n    answer: intelli,\n  },\n\n\n  {\n    question: \"How to configure Data Lake Storage Gen1?\",\n    answer: genv1\n  },\n  {\n    question: \"How to configure Data Lake Storage Gen2?\",\n    answer: genv2\n  },\n\n  {\n    question: \"How to configure Google storage?\",\n    answer: genv3\n  },\n\n  \n  {\n    question: \"How to add new Features?\",\n    answer: \"In Contact, send us a message and describe the feature you like to have\",\n  }\n\n];\n\nconst FaqsList = () => {\n  return (\n    <div className=\"question-bg\">\n      {faqsData.map((faq, i) => (\n        <Faq key={\"Q\" + i} name = {i+1} question={faq.question} answer= {Parser(faq.answer)} />\n      ))}\n    </div>\n  );\n};\n\nexport default FaqsList;","import React from 'react';\nimport { Row, Col, Form, FormGroup, Input} from 'reactstrap';\n\n\nfunction OtherSearch(props) {\n\n\n  return (\n    <Form onSubmit={props.onSubmit} > \n    <Row form>\n    <Col md={3}>\n    <FormGroup>  \n    <Input type =\"select\" className=\"form-control\" onChange={props.handleChangeSearch}>\n      <option name=\"search\" value='ImeiNumber'>Search by Imei</option>\n      <option name=\"search\" value='Serialnumber'>Search by Serial Number</option>\n      <option name=\"search\" value='Macaddress'>Search by Mac Address</option>\n      <option name=\"search\" value='Udid'>Search by udid</option>\n      <option name=\"search\" value='EasId'>Search by Easid</option>\n    </Input>\n    </FormGroup>\n            </Col>\n            <Col md={4}>\n   <FormGroup> \n            <Input type=\"text\" className=\"form-control\" id=\"deviceId\" name =\"deviceId\" value={props.deviceId}  onChange={props.handleChange} required placeholder=\"Insert value\"/>\n            </ FormGroup >\n            </Col>\n            <Col md={2}> \n            <FormGroup>\n           \n            <Input type=\"submit\" value=\"Submit\" id=\"awbut\" name=\"awbut\" className=\"btn-sm btn-block btn-info\"  />\n           \n\n          </FormGroup >\n          </Col>\n          </Row>   \n   </Form >\n  )\n  \n}\n\nexport default OtherSearch","import React, {useState, useEffect} from 'react';\nimport { Row, Col, Form, FormGroup, Input, Spinner} from 'reactstrap';\nimport { Select } from \"react-select-virtualized\";\nimport {fetchUsers} from './../../apiCall/airwatch';\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\nimport _ from 'lodash';\n\n\n\nfunction UserSearch(props) {\n\n  const [state, setState] = useState({\n    users: [],\n    loading: false,\n    message: ''   \n  })\n\n  const { user } = useAuth0();\n  const fetchDev= async ()=>{\n    \n     await fetchUsers(user.email, user.sub).then(\n      user => { \n        if (_.isString(user.data) && user.data.startsWith(\"Please56785678\")){\n          props.addmessage(\"You need to go to Settings and set up your credentials\")\n          setState({\n            ...state,\n            loading: false \n           });\n            }\n        else {\n      let newadmins = user.data.map( item => {\n          const {  Uuid: value, ...rest } = item;\n          const label = `${item.UserName} - ${item.Group}`;\n          return { label,value, ...rest }\n         })\n        \n        \n        \n      setState({...state,\n        users: newadmins,\n        loading: false})\n      }\n      }\n    )}\n  \n  \n  useEffect( () => { \n    setState({...state,\n      loading: true})\n    fetchDev() }, [] );\n\n\n  return (\n    <Form onSubmit={props.onSubmit} > \n    <Row form>\n    <Col md={4}>\n    <FormGroup> \n    <Select\n       placeholder =\"Select username...\"\n        value={props.selectedOption}\n        onChange={props.handleChange}\n        options={state.users}\n        \n         \n      />\n    \n    </FormGroup >\n    <Row className=\"mx-auto mt-3\">\n   {state.loading ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n   </Row>\n    </Col>\n    <Col md={2}> \n    <FormGroup>\n    <Input type=\"submit\" value=\"Submit\" id=\"awbut\" name=\"awbut\" className=\"btn-sm btn-block btn-info\"  disabled ={props.disable} />\n    </FormGroup >\n     </Col>\n    \n    </Row>\n    \n   </Form >\n   \n  )\n  \n}\n\nexport default UserSearch","import React, { Component} from 'react';\nimport {Container} from 'reactstrap';\nimport dateFormat from 'dateformat';\n\n\n\n\nclass DeviceInfo extends Component {\n  \n render() {\n  const data = this.props.deviceData.data\n  // const data = this.props.deviceData.data.filter(item => item.EnrollmentStatus === \"Enrolled\");\n   console.log(\"cellular \",data);\n   \n    return (\n    \n            <Container>   \n              <ul className=\"mt-4\" style={{\"listStyle\": \"none\"}}>\n            <li >\n              <div><strong>Owner: </strong>{data[0].UserEmailAddress}</div>\n              <div><strong>OG: </strong>{data[0].LocationGroupName}</div>\n              <div><strong>Model: </strong>{data[0].Model}</div>\n              <div><strong>OS: </strong>{data[0].Platform} {data[0].OperatingSystem}</div>\n              <div><strong>Last seen: </strong>{dateFormat(data[0].LastSeen, \"mediumDate\")}</div>\n              <div><strong>Security Patch: </strong>{dateFormat(data[0].SecurityPatchDate, \"mediumDate\")}</div>\n              <div><strong>Enrollment Status: </strong>{data[0].EnrollmentStatus}</div>\n              <div><strong>Compliance Status: </strong>{data[0].ComplianceStatus}</div>\n              <div><strong>Serial Number: </strong>{data[0].SerialNumber}</div>\n              <div><strong>Mac Address: </strong>{data[0].MacAddress}</div>\n              <div><strong>Imei: </strong>{data[0].Imei}</div>\n              <div><strong>Udid: </strong>{data[0].Udid}</div>\n              <div><strong>Uuid: </strong>{data[0].Uuid}</div>\n              <div><strong>Battery: </strong>{data[0].BatteryLevel}</div>\n              {  (data[0].Platform===\"Android\")?<div><strong>Disk usage Android: </strong>{((data[0].AvailablePhysicalMemory/data[0].TotalPhysicalMemory)*100).toFixed(0)}% available</div>:''}\n    {  (data[0].Platform===\"Apple\")?<div><strong>Disk usage Ios: </strong>{((data[0].AvailableDeviceCapacity/data[0].DeviceCapacity)*100).toFixed(0)}% available</div>:'' }\n    {  (data[0].Platform===\"Android\")? (\n       <React.Fragment>\n    <div><strong>Current Operator: </strong>{data[1].CellularNetworkInfo.CurrentOperator}</div>\n              <div><strong>Carrier Network: </strong>{data[1].CellularNetworkInfo.SubscriberCarrierNetwork}</div>\n    <div><strong>Roaming: </strong>{(data[1].RoamingStatus.toString())}</div>\n    </React.Fragment>) :''}\n              <div><strong>Is compromised? </strong>{(data[3].IsCompromised.toString())}</div>\n              <div><strong>Passcode: </strong>{(data[3].IsPasscodePresent.toString())}</div>\n              <div><strong>Is Passcode compliant? </strong>{(data[3].IsPasscodeCompliant.toString())}</div>\n              \n              </li>\n            </ul>\n           \n            </Container>\n        \n    );\n\n    }\n  }\n\n\nexport default DeviceInfo;\n","import React, { Component} from 'react';\nimport {Container, Row, Col, Form, FormGroup, Input, Spinner, CustomInput, Badge} from 'reactstrap';\nimport axios from 'axios';\nimport {SERVER_URL} from '../../../config';\n\n\nclass SingleApp extends Component {\n  \n  state ={\n    apps: [],\n    appid: '-1',\n    action: '-1',\n    type:'-1',\n    loading: false,\n    smartgroup: false,\n    disabled3: false,\n    color: \"green\"\n  };\n\n  \n\n\nactionApp = async (email, sub,  appid, type, action, DeviceId)=>{\n  const data ={\n    email,\n    sub,\n    appid,\n    type,\n    action,\n    DeviceId\n  }\n  const url = `${SERVER_URL}/uem/actionapp`\n  try {\n\n    console.log(\"request apps\");\n  const act = await axios.post(url,data)\n    \n  this.setState({message: act.data,\n      loading: false})\n      console.log(\"from action remover or install\", act)\n    if(act.data.includes('assigned')) this.setState({smartgroup:true,\n    color: 'red'})\n    \n   // else this.setState({message: \"Command has been sent\"})\n\n      return act.data; \n\n\n \n  }catch(err) { return err}\n\n}\n\n\n\nonSubmit = (e) => {\n  e.preventDefault();\n  this.setState({ loading: true, smartgroup: false\n    }, async () => {\n this.actionApp(this.props.email, this.props.sub, this.state.appid, this.state.type, this.state.action, this.props.deviceData.data[0].Id.Value);\n \n  })\n};\n\n\nsearchApp = async (email, sub,  type, platform, lgid) =>{\n  const data ={\n    email,\n    sub,\n    type,\n    platform,\n    lgid\n  }\n  const url = `${SERVER_URL}/uem/searchapps`\n  try {\n\n    console.log(\"request apps\");\n  const apps = await axios.post(url,data)\n    \n  this.setState({apps: apps.data,\n      loading: false})\n      console.log(\"from funciotn  in then\", apps.data)\n      return apps.data;\n\n\n \n  }catch(err) { return err}\n\n}\n\ncreateSm = async (email, sub,  DeviceId, gid, appid, type) =>{\n  \n  const data ={\n    email,\n    sub,\n    DeviceId,\n    gid,\n    appid,\n    type\n  }\n  const url = `${SERVER_URL}/uem/assignsmapp`;\n  try {\n    await axios.post(url,data)\n    this.setState({disabled3:true,\n      message: \"Smart Group created, you can install app\",\n      color: 'green',\n      loading: false})\n     \n  }catch(err) { return err}\n\n}\n\nhandleSm = (e) => {\n  if(e.target.checked) {\n    \n    this.setState({ loading: true\n      }, async () => {\n   await this.createSm(this.props.email, this.props.sub, this.props.deviceData.data[0].Id.Value,this.props.deviceData.data[0].LocationGroupId.Id.Value, this.state.appid, this.state.type);\n   \n    })\n\n  }\n\n};\n     \nhandleChangeAction = (evt) => {\n  const {value} = evt.target;\n  if (value !== '-1'){\n  \n  this.setState({action: value,\n  message:'',\n  smartgroup: false,\n  disabled3: false})\n  //this.toggleDisabled();\n  } else this.setState({action: '-1',\n  message:'',\n  smartgroup: false,\n  disabled3: false})\n};\n\nhandleChangeType = (evt) => {\n  const {value} = evt.target;\nconsole.log(this.state.action);\n  console.log(value)\n\n  if (value !== '-1'){\n   console.log(\"platfrom \", this.props.deviceData.data[0].Platform) \n  //this.setState({type: value})\n  this.setState({ loading: true,\n    type: value,\n    message:'',\n    smartgroup: false,\n    disabled3: false}, async () => {\n await this.searchApp(this.props.email, this.props.sub, value, this.props.deviceData.data[0].Platform, this.props.awcreds.lgid);\n \n  })\n \n  //this.toggleDisabled();\n  }else this.setState({type: '-1',\n  message:'',\n  smartgroup: false,\n  disabled3: false,})\n};\n\nhandleChangeApp= (evt) => {\n  const {value} = evt.target;\n  console.log(\"app id1 \", value)\n  if (value !== '-1'){\n  \n  this.setState({appid: value,\n    message:'',\n    smartgroup: false,\n    disabled3: false})\n  \n  } else this.setState({appid: '-1',\n  message:'',\n  smartgroup: false,\n  disabled3: false})\n};\n  \n render() {\n \n  const apps = this.state.apps;\n  \n  console.log(\"apss ???? \", this.props.deviceData.data[0].Platform)\n  const appsArray = this.props.deviceData.data[2].DeviceApps.filter(item => item.IsManaged);\n  const appsEvenArray = appsArray.filter((product, index) => index % 2 )\n  const appsOddArray = appsArray.filter((product, index) => !(index % 2) )\n  \n  console.log(\"test apps\", appsArray);\n  \n\n    return (\n      <Container >\n    \n     \n  <Form onSubmit={this.onSubmit} style={{ \"marginTop\": \"20px\" }}> \n  <Row form>\n  <Col md={3}>\n  <FormGroup>  \n  <Input type =\"select\" className=\"form-control\" onChange={this.handleChangeAction} >\n    <option name=\"action\" value='-1'>Select Action</option>\n    <option name=\"action\" value='install'>Install App</option>\n    <option name=\"action\" value='uninstall'>Remove App</option>\n  </Input>\n  </FormGroup>\n          </Col>\n          <Col md={3}>\n  <FormGroup>  \n  <Input type =\"select\" className=\"form-control\" onChange={this.handleChangeType} >\n    <option name=\"type\" value='-1'>Select App Type</option>\n    <option name=\"type\" value='internal'>Internal</option>\n    {(this.props.deviceData.data[0].Platform !==\"AppleOsX\")?<option name=\"type\" value='public'>Public</option>:''}\n  </Input>\n  </FormGroup>\n          </Col>\n\n\n\n          <Col md={3}>\n          <FormGroup>\n        \n        <Input type =\"select\" className=\"form-control\" onChange={this.handleChangeApp}  >\n          <option value='-1'>select App</option>\n    {(this.state.type === 'internal')?apps.map((v, i) => <option key={i} value={v.Id.Value}  name={v.BundleId}>{`${v.ApplicationName} ${v.AppVersion}`}</option>):\n    apps.map((v, i) => <option key={i} value={v.Id.Value}  name={v.BundleId}>{`${v.ApplicationName}`}</option>) }\n    \n        </Input>\n        \n        \n        </FormGroup >\n        </Col>\n        <Col md={2}>\n          <FormGroup>\n        \n       \n        \n         \n          <Input type=\"submit\" value=\"Submit\" id=\"awbut\" name=\"awbut\" className=\"btn-sm btn-block btn-info\"  disabled={(this.state.action === '-1' || this.state.type === '-1' || this.state.appid === '-1')?true:false} />\n         \n\n        </FormGroup >\n        </Col>\n        </Row>   \n </Form >\n \n     <Row>\n    <h2 className=\"mx-auto\"style={{color:this.state.color}}>{this.state.message}</h2>\n     </Row>\n    \n     <Row>\n          <Col md={5}></Col>\n          <Col>\n           {this.state.loading ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n           </Col>\n           </Row>\n      <Row>\n          {(this.state.smartgroup)? <Form  > \n           <span><Badge color=\"secondary\" >Check the box to create Smart Group assignment</Badge></span>\n           <CustomInput type =\"checkbox\" id= \"smartgroup\" disabled={this.state.disabled3} onChange={this.handleSm} label={`Dummy-sm-${this.props.deviceData.data[0].Id.Value}`} />\n            </Form>:''}\n            </Row>\n            <h6 className=\"mt-4\">List of managed apps installed</h6>\n            <Row>\n            <Col md={6} className=\"m-0 \">\n              <ul className=\"singleul\">\n            {appsEvenArray.map(item => {\n              return <li className=\"singleli hr\" key ={item.ApplicationIdentifier}>\n                <div><strong>{item.ApplicationName}</strong></div>\n             <div>{item.ApplicationIdentifier} </div>\n             <div><Badge color=\"secondary\" >{item.Type}</Badge> </div>\n               </li>\n            })}\n            </ul>\n            </Col>\n            <Col md={6} className=\"m-0 \">\n            <ul className=\"singleul\">\n            {appsOddArray.map(item => {\n             return <li className=\"singleli hr\" key ={item.ApplicationIdentifier} mb={1}>\n             <div><strong>{item.ApplicationName}</strong></div>\n             <div>{item.ApplicationIdentifier} </div>\n             <div><Badge color=\"secondary\" >{item.Type}</Badge> </div>\n            </li>\n           })} \n            </ul>\n            </Col>\n            </Row>\n </Container >\n    );\n\n    }\n  }\n\n\nexport default SingleApp;\n","import React, { Component} from 'react';\nimport {Container, Row, Col, Form, FormGroup, Input, Spinner, Badge} from 'reactstrap';\nimport axios from 'axios';\nimport {SERVER_URL} from '../../../config';\n\nclass SingleApp extends Component {\n  \n  state ={\n    profiles: [],\n    profileid: '-1',\n    action: '-1',\n    type:'-1',\n    loading: false,\n    disabled3: false,\n    color: \"green\"\n  };\n\n  \n\n\nactionProfile = async (email, sub,  profileid, action, DeviceId)=>{\n  const data ={\n    email,\n    sub,\n    profileid,\n    action,\n    DeviceId\n  }\n  const url = `${SERVER_URL}/uem/actionprofile`\n  try {\n\n    console.log(\"request apps\");\n  const act = await axios.post(url,data)\n    \n  this.setState({message: act.data,\n      loading: false})\n      console.log(\"from action remover or install\", act)\n    \n    \n   // else this.setState({message: \"Command has been sent\"})\n\n      return act.data; \n\n\n \n  }catch(err) { return err}\n\n}\n\n\n\nonSubmit = (e) => {\n  e.preventDefault();\n  this.setState({ loading: true\n    }, async () => {\n this.actionProfile(this.props.email, this.props.sub, this.state.profileid, this.state.action, this.props.deviceData.data[0].Id.Value);\n \n  })\n};\n\n\nsearchProfiles = async (email, sub,  platform, lgid) =>{\n  const data ={\n    email,\n    sub,\n    platform,\n    lgid\n  }\n  const url = `${SERVER_URL}/uem/searchprofiles`;\n  try {\n\n    console.log(\"request profiles\");\n  const profiles = await axios.post(url,data)\n    \n  this.setState({profiles: profiles.data,\n      loading: false})\n      console.log(\"from funciotn  in then\", profiles)\n      return profiles.data;\n\n\n \n  }catch(err) { return err}\n\n}\n\n\n\n\n     \n\n\nhandleChangeAction = (evt) => {\n  const {value} = evt.target;\nconsole.log(this.state.action);\n  console.log(value)\n\n  if (value !== '-1'){\n   console.log(\"platfrom \", this.props.deviceData.data[0].Platform) \n  //this.setState({type: value})\n  this.setState({ action: value,\n    message:'',\n    disabled3: false}, async () => {\n await this.searchProfiles(this.props.email, this.props.sub, this.props.deviceData.data[0].Platform, this.props.awcreds.lgid);\n \n  })\n \n  //this.toggleDisabled();\n  }else this.setState({action: '-1',\n  message:'',\n  disabled3: false})\n};\n\n\n\nhandleChangeApp= (evt) => {\n  const {value} = evt.target;\n  console.log(\"app id1 \", value)\n  if (value !== '-1'){\n  \n  this.setState({profileid: value,\n    message:'',\n    disabled3: false})\n  \n  } else this.setState({profileid: '-1',\n  message:'',\n  disabled3: false})\n};\n  \n render() {\n \n  const profiles = this.state.profiles;\n  console.log(\"profiles from render\", profiles)\n  console.log(\"apss ???? \", this.props.deviceData.data[0].Platform)\n  const appsArray = this.props.deviceData.data[4].DeviceProfiles.filter(item => item.Status === 3);\n  console.log(\"profiles array\", this.props.deviceData.data[4].DeviceProfiles)\n  const appsEvenArray = appsArray.filter((product, index) => index % 2 )\n  const appsOddArray = appsArray.filter((product, index) => !(index % 2) )\n  \n  \n  console.log(\"test apps\", appsEvenArray);\n  \n\n    return (\n      <Container >\n    \n     \n  <Form onSubmit={this.onSubmit} style={{ \"marginTop\": \"20px\" }}> \n  <Row form>\n  <Col md={3}>\n  <FormGroup>  \n  <Input type =\"select\" className=\"form-control\" onChange={this.handleChangeAction} >\n    <option name=\"action\" value='-1'>Select Action</option>\n    <option name=\"action\" value='install'>Install Profile</option>\n    <option name=\"action\" value='remove'>Remove Profile</option>\n  </Input>\n  </FormGroup>\n          </Col>\n          \n\n\n\n          <Col md={5}>\n          <FormGroup>\n        \n        <Input type =\"select\" className=\"form-control\" onChange={this.handleChangeApp}  >\n          <option value='-1'>select Profile</option>\n    {\n    profiles.map((v, i) => <option key={i} value={v.Id.Value}  name={v.ProfileName}>{`${v.ProfileName}`}</option>) }\n    \n        </Input>\n        \n        \n        </FormGroup >\n        </Col>\n        <Col md={2}>\n          <FormGroup>\n        \n       \n        \n         \n          <Input type=\"submit\" value=\"Submit\" id=\"awbut\" name=\"awbut\" className=\"btn-sm btn-block btn-info\"  disabled={(this.state.action === '-1' ||  this.state.profileid === '-1')?true:false} />\n         \n\n        </FormGroup >\n        </Col>\n        </Row>   \n </Form >\n \n     <Row>\n    <h2 className=\"mx-auto\"style={{color:this.state.color}}>{this.state.message}</h2>\n     </Row>\n    \n     <Row>\n          <Col md={5}></Col>\n          <Col>\n           {this.state.loading ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n           </Col>\n           </Row>\n     \n            <h6 className=\"mt-4\">List of profiles installed</h6>\n            <Row>\n            <Col md={6} className=\"m-0 \">\n              <ul className=\"singleul\">\n            {appsEvenArray.map(item => {\n              return <li className=\"singleli hr\" key ={item.Id.Value}>\n                <div><strong>{item.Name}</strong></div>\n             <div>{item.Description} </div>\n             <div>Current Version: {item.CurrentVersion} </div>\n             <div><Badge color=\"secondary\" >Installed Version: {item.InstalledProfileVersion}</Badge> </div>\n               </li>\n            })}\n            </ul>\n            </Col>\n            <Col md={6} className=\"m-0 \">\n            <ul className=\"singleul\">\n            {appsOddArray.map(item => {\n             return <li className=\"singleli hr\" key ={item.Id.Value} mb={1}>\n             <div><strong>{item.Name}</strong></div>\n             <div>{item.Description} </div>\n             <div>Current Version: {item.CurrentVersion} </div>\n             <div><Badge color=\"secondary\" >Installed Version: {item.InstalledProfileVersion}</Badge> </div>\n            </li>\n           })} \n            </ul>\n            </Col>\n            </Row>\n </Container >\n    );\n\n    }\n  }\n\n\nexport default SingleApp;\n","import React, { useState } from 'react';\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\nimport DeviceInfo from './Tabs/DeviceInfo';\nimport SingleApp from './Tabs/SingleApp';\nimport SingleProfile from './Tabs/SingleProfile';\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\n\nfunction DeviceTabs(props) {\n\n\n  const { user } = useAuth0();\n\n\n  \n\n\n\n  const [activeTab, setActiveTab] = useState('1');\n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink className={activeTab == '1' ? 'active' : ''}  onClick={() => setActiveTab('1')}>\n            Device Info\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink className={activeTab == '2' ? 'active' : ''} onClick={() => setActiveTab('2')}>\n            Apps\n          </NavLink>\n          \n        </NavItem>\n        <NavItem>\n          <NavLink className={activeTab == '3' ? 'active' : ''} onClick={() => setActiveTab('3')}>\n           Profiles\n          </NavLink>\n          \n        </NavItem>\n        \n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\"><DeviceInfo deviceData={props.deviceData}/></TabPane>\n        <TabPane tabId=\"2\"><SingleApp deviceData={props.deviceData} email={user.email} sub={user.sub} awcreds={props.awcreds}/></TabPane>\n        <TabPane tabId=\"3\"><SingleProfile deviceData={props.deviceData} email={user.email} sub={user.sub} awcreds={props.awcreds}/></TabPane>\n      </TabContent>\n    </div>\n  );\n}\n\nexport default DeviceTabs","import React, {Component} from \"react\";\nimport {Container, Row, Col, Form, FormGroup, Input, Spinner, Label, Table} from 'reactstrap';\nimport OtherSearch from './OtherSearch';\nimport UserSearch from './UserSearch';\nimport DeviceTabs from './DeviceTabs';\nimport axios from 'axios';\nimport {getDevPerUser} from './../../apiCall/airwatch';\nimport _ from 'lodash';\nimport {SERVER_URL} from '../../config';\n\n\nclass Airwatch extends Component  {\n\n    state = {\n      search: \"ImeiNumber\",\n      deviceId: \"\",\n      deviceData:'',\n      disabled:'',\n      loading: false,\n      message:'',\n      radioswitch:'',\n      selectedOption: null,\n      disuser: true,\n      devices: ''\n    }\n\n    toggleClass() {\n      const currentState = this.state.disabled;\n      this.setState({ disabled: !currentState });\n  };\n  \n\n    \n       handleChange = (evt) => {\n            const {value,name} = evt.target;\n            console.log(\"event target \", name)\n            \n            this.setState({\n              [name]: value,\n              message:''\n            }); \n            \n            console.log(\"onChange \", this.state );\n          }\n\n           handleChangeSearch = (evt) => {\n            const {value} = evt.target;\n            \n            this.setState({\n        \n              search: value,\n              message:''\n              \n            }); \n            \n            console.log(\"onChange \", this.state );\n          }\n\n          handleChangeRadio1 =(evt) =>{\n            if (evt.target.checked) {\n              this.setState({\n                radioswitch: \"radio1\",\n                deviceData: '',\n                message:''\n                \n              })\n              console.log(this.state.radioswitch);\n            }\n          }\n\n          handleChangeRadio2 =(evt) =>{\n            if (evt.target.checked) {\n              this.setState({\n                radioswitch: \"radio2\",\n                deviceData: '',\n                devices: '',\n                message:''\n              })\n\n              console.log(this.state.radioswitch);\n            }\n          }\n\n         \n          handleChangeUser = selectedOption => {\n            \n         //   if(this.state.selectedOption){\n        if( _.isObject(selectedOption)) {  this.setState({ \n                message: '',\n                selectedOption,\n                disuser:false});\n\n          \n          } else {\n              this.setState({ selectedOption,\n                message: '',\n                disuser: true,\n                devices: ''}); \n          \n           }\n            console.log(`Option selected:`, selectedOption);\n          };\n\n\n\n      \n          getDeviceData = async (search, id) => {\n\n    \n            const url = `${SERVER_URL}/uem/searchdevice`;\n             \n            const data ={\n              email: this.props.email,\n              sub: this.props.sub,\n              search,\n              id\n             \n            }\n            \n          try { const deviceData = await axios.post(url, data); \n            \n            if (_.isString(deviceData.data) && deviceData.data.startsWith(\"Please56785678\")){\n              this.setState({\n              \n                loading: false ,\n                message: \"You need to go to Settings and set up your credentials\"});\n                }\n       else {\n            if(deviceData.data.toString().startsWith('Error:')){\n              console.log(deviceData.data);\n              this.setState({ loading: false,\n                message: deviceData.data});\n               \n          }else\n            this.setState({deviceData,\n            loading: false,\n           \n          })\n          console.log(\"fromapi \",deviceData)\n        }\n          } catch(err){\n           console.log(err);\n            \n            }\n            \n        }\n\n        addmessage =(message) => {this.setState({message})}\n\n       onSubmit =  (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n       console.log(\"state submit \", this.state);\n       \n       this.setState({ loading: true, message:''}, async () => {\n      await  this.getDeviceData(this.state.search, this.state.deviceId)\n     \n       })\n        \n       \n        console.log(\"state \",this.state);\n        \n    }\n\n    onDevChange = (e) => {\n      e.persist()\n      this.setState({ loading: true, message:''}, async () => {\n        console.log(\"target \", e.target.value);\n        await  this.getDeviceData('Serialnumber', e.target.value)\n       \n         })\n    }\n\n    onSubmitUser =  (e) => {\n      e.preventDefault();\n      \n     console.log(\"state submit \", this.state);\n     \n     this.setState({ loading: true, message:''}, async () => {\n      await  getDevPerUser(this.props.email, this.props.sub, this.state.selectedOption.UserName,this.state.selectedOption.LocationGroupId ).then(\n      devices =>{\n        if(_.isString(devices.data)){\n\n          \n          this.setState({loading: false,\n            message:devices.data,\n          devices:'' })\n\n        }\n       else {\n        const filterdevices = devices.data.Devices.filter(item =>{console.log(\"enr \", item.EnrollmentStatus)\n          return item.UserName === this.state.selectedOption.UserName  && item.LocationGroupName === this.state.selectedOption.Group &&  item.EnrollmentStatus === \"Enrolled\" && item.Platform !== \"WindowsMobile\"});\n\n        \n        if (!_.isEmpty(filterdevices)) {\n          console.log(\"filter \", filterdevices);\n      this.setState({loading: false,\n        devices:filterdevices\n                     // devices:devices.data.Devices \n                    })}\n                    else {this.setState({loading: false,\n                      message: \"no enrolled device found for this user\"\n                                   // devices:devices.data.Devices \n                                  })}\n                  \n                  \n                  \n                  }\n      }\n    )\n   \n     })\n         \n      console.log(\"state \",this.state);\n      \n  }\n\n   renderDeviceTable =() => {\n       \n    return this.state.devices.map((item, i) => {  \n       return (  <tr className=\"my-0 and py-0\" key={i} >\n            <td className=\"my-0 and py-0\"> <Input type=\"radio\" name=\"userdev\" value={item.SerialNumber} onChange={this.onDevChange}/></td>\n         <td className=\"my-0 and py-0\">{item.DeviceFriendlyName}</td>\n           <td className=\"my-0 and py-0\">{item.Platform}</td>\n      <td className=\"my-0 and py-0\">{item.LocationGroupName}</td>\n       </tr> ) \n   \n   } )\n  }\n\n\n    render(){\n      let loading = this.state.loading;\n\n      console.log(\"message \", this.state.message)\n      console.log(\"devices \", this.state.devices)\n      console.log(\"devicedata \", this.state.deviceData)\n\n\n    \n      return (\n      \n      \n        <Container >\n            <Row>\n        <Col sm=\"4\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n            <h5  className=\"mb-3 title\">Search for device to manage</h5>\n         \n            <Col sm=\"4\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n         <Form className=\"mb-4\">\n            <FormGroup check>\n          <Label check>\n            <Input type=\"radio\" name=\"radio1\" onChange={this.handleChangeRadio1}/>{' '}\n            Search device by username\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input type=\"radio\" name=\"radio1\" onChange={this.handleChangeRadio2}/>{' '}\n            Search by Imei, Serial number ...\n          </Label>\n        </FormGroup>\n        </Form>\n\n        { (this.state.radioswitch === \"radio1\") ?<UserSearch username={this.state.username} disable={this.state.disuser} handleChange={this.handleChangeUser}  addmessage = {this.addmessage} onSubmit={this.onSubmitUser}/> :'' }\n      { (this.state.radioswitch === \"radio2\") ?<OtherSearch deviceId={this.state.deviceId} handleChange={this.handleChange} handleChangeSearch={this.handleChangeSearch} onSubmit={this.onSubmit}/> :'' }\n     \n       \n           <Row>\n           <h2 >{this.state.message}</h2>\n           </Row>\n           <Row>\n          <Col md={3}></Col>\n          <Col>\n           {loading ? <Spinner  animation=\"border\" variant=\"warning\" /> : \"\" }\n           </Col>\n           </Row>\n          \n           {(_.isArray(this.state.devices)) ?     \n      <Table borderless size=\"sm\" className='table-condensed' style={{width: '80%'}}>\n      <thead>\n        <tr className=\"my-0 and py-0\">\n          <th className=\"my-0 and py-0 \"></th>\n          <th className=\"my-0 and py-0 \" >Friendly Name</th>\n          <th className=\"my-0 and py-0 \">Platform</th>\n          <th className=\"my-0 and py-0 \">OG</th>     \n        </tr>\n        {this.renderDeviceTable()}\n      </thead>\n      <tbody>\n     \n      \n      </tbody>\n    </Table> :''}\n    \n    {(this.state.deviceData && this.state.deviceData.data !== \"Unprocessable Entity\") ? <DeviceTabs  deviceData={this.state.deviceData} email={this.props.email} sub={this.props.sub} awcreds={this.props.awcreds}/>:\"\" }\n       </Container >\n\n     \n\n\n\n    )\n    }\n }\n  \n\nexport default Airwatch;\n\n","import React, { Component} from 'react';\nimport { Select } from \"react-select-virtualized\";\nimport { Button, Spinner, Container, Row, Form, FormGroup, Input, Col, Badge, CustomInput, Table, Popover, PopoverHeader, PopoverBody} from 'reactstrap';\nimport {getAdmins, changePass, getOgs, getLgId, fetchUsers} from '../../apiCall/airwatch';\nimport generator from 'generate-password';\nimport _ from 'lodash';\n\n\n \nclass Admin extends Component {\n  _isMounted = false;\n  state = {\n    selectedOptionAdmin: null,\n    selectedOptionOg: null,\n    admins: [],\n    ogs: [],\n    loading: false,\n    loadingOg: false,\n    pass:'',\n    passwords:[],\n    color: 'red',\n    checked: false,\n    lgtoogle: false,\n    lgid:'',\n    popoverOpen: false,\n    users: []\n   \n  };\n\n  togglePopOver = () =>{\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n  }\n\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    this.setState({ loading: true, loadingOg: true}, async () => {\n\n\n\n\n    await getAdmins(this.props.email, this.props.sub).then(admin=>\n      {\n      console.log(\"admin \", admin);\n        if (_.isString(admin.data) && admin.data.startsWith(\"Please56785678\")){\n          this.setState({loading: false ,\n            message: \"You need to go to Settings and set up your credentials\"});\n            }\n        else {\n        if (this._isMounted){\n        console.log(\"admin data \", admin.data)\n        if (Array.isArray(admin.data)){\n        const newadmins = admin.data.map( item => {\n          const { UserName: label, Uuid: value, ...rest } = item;\n          return { label,value, ...rest }\n         }\n        );  \n        console.log(\"newadmins\", newadmins);\n        this.setState({admins: newadmins,\n          loading: false\n       })\n      \n        } else {\n          \n          this.setState({\n            loading: false,\n         message: admin.data})\n        }\n      }\n      }\n    })\n\n    await getOgs(this.props.email, this.props.sub).then(og=>\n      {\n        \n        console.log(\"og \", og);\n        if (_.isString(og.data) && og.data.startsWith(\"Please56785678\")){\n          this.setState({loadingOg: false ,\n            messageOg: \"You need to go to Settings and set up your credentials\"});\n            }\n        else {\n        \n        if (this._isMounted){\n        console.log(\"og data \", og.data)\n        if (Array.isArray(og.data)){\n\n          const newogs = og.data.map( item => {\n            const { Name: label, Name: value, ...rest } = item;\n            return { label,value, ...rest }\n           }\n          );  \n          console.log(\"newogs\", newogs);\n        \n     \n\n\n        this.setState({ogs: newogs,\n          loadingOg: false\n       })\n\n\n      \n        } else {\n          \n          this.setState({\n            loadingOg: false,\n         messageOg: og.data})\n        }\n      }\n    }\n    })\n  \n    })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\n  toggleClass() {\n    const currentState = this.state.checked;\n    this.setState({ checked: !currentState });\n};\n\n  handleChangeAdmin = selectedOptionAdmin => {\n    this.setState({ selectedOptionAdmin,  messageLg:'',\n    message:'',\n    messageOg:'' });\n    console.log(`Option selected:`, selectedOptionAdmin);\n  };\n  handleChangeOgs = async selectedOptionOg => {\n    this.setState({ \n      users: [],\n      popoverOpen: false\n    });\n    if (selectedOptionOg){\n      this.setState({ loadingOg : true})\n    const users = await fetchUsers(this.props.email, this.props.sub,selectedOptionOg.Id.Value)\n    this.setState({ \n      users: users.data\n    });\n    }\n    \n    this.setState({ \n      selectedOptionOg,  messageLg:'',\n    message:'',\n    messageOg:'',\n    loadingOg : false });\n    console.log(`Option selected:`, selectedOptionOg);\n  };\n\n\n  handleChangepass = evt => {\n    this.setState({ pass: evt.target.value, messageLg:'',\n    message:'',\n    messageOg:'' });\n    console.log(\"pass:\", this.state.pass);\n  };\n\n\n\n  handleRandomPass = (e) => {\n    this.toggleClass();\n    if(e.target.checked) {\n      var passwords = generator.generateMultiple(5, {\n        length: 12,\n        symbols: false,\n        numbers: true,\n        uppercase: true,\n        strict: true\n    });\n\n    passwords = passwords.map(i =>  i +'Test12!'\n    \n    );\n    this.setState({passwords,\n    message:''})\n      console.log(passwords);\n  \n    } else {this.setState({passwords: [], message:''}, () =>console.log(\"passwords unchek\", this.state.passwords))\n    }\n  };\n\n  handleChangeLgId = (evt) => {\n    const {value,name} = evt.target;\n    console.log(\"event target \", name)\n    this.setState({\n      lgtoogle: false,\n      lgid: value,\n      messageLg:'',\n      message:'',\n      messageOg:''\n    });  \n    \n  }\n\n\nonSubmitLgId= async (e)=>{\n  e.preventDefault();\n  const lgids = await getLgId(this.props.email, this.props.sub, this.state.lgid);\n\n  if (_.isString(lgids.data) && lgids.data.startsWith(\"Please56785678\")){\n    this.setState({lgtoogle: false ,\n      messageLg: \"You need to go to Settings and set up your credentials\"});\n      }\n  else {\n\n  if (_.isString(lgids.data)){\n    this.setState({messageLg: lgids.data,\n      lgtoogle:false,\n      color: 'red'})\n  }\n  else{this.setState({lgids: lgids.data,\n  lgtoogle:true,\n  messageLg:''})\n  console.log(\"lgids \", lgids.data)\n  }\n  }  \n}\n\n  onSubmit=(e)=>{\n    e.preventDefault();\n    console.log(\"onsubmit pass\", this.state);\n    let mess ='';\n    //console.log(this.state.pass);\n    console.log(this.state.selectedOptionAdmin.Id.Value)\n    this.setState({ loading: true}, async () => {\n      const passes =  this.state.passwords;\n      console.log(\"passes \",passes);\n      console.log(\"pass \", this.state.pass)\n      passes.push(this.state.pass);\n  //    passes.unshift(this.state.pass);\n      console.log(\"all \",passes)\n\n     for (var i =0; i<passes.length; i++){\n       await changePass(this.props.email, this.props.sub, this.state.selectedOptionAdmin.Id.Value, passes[i]).then(\n        pass =>{ console.log(\"pass\", pass.data+\" \"+i);\n      mess = pass.data;\n      if (pass.data === \"OK\") {this.setState({color:\"green\"}) }else {this.setState({color:\"red\"})};\n      \n      }\n        )\n   //    if (mess.includes(\"complexity\")) {break}; \n     }\n   /*   passes.forEach(async (item, i)=>{\n        mes = await changePass(this.props.email, this.props.sub, this.state.selectedOption.Id.Value, item).then(\n        pass =>{ console.log(\"pass\", pass.data+\" \"+i);\n        if (pass.data === \"OK\") {this.setState({color:\"green\"}) }else this.setState({color:\"red\"});\n         this.setState({loading: false,\n        message: pass.data})}\n        )\n         }) */\n        \n         this.setState(\n           \n           {loading:false,\n            message: mess,\n            checked: false,\n             passwords: []},\n             )\n      })  \n  }\n\n  render() {\n    console.log(\"users render\", this.state.users);\n\n    \n\n    const { selectedOptionAdmin, selectedOptionOg, lgids } = this.state;\n\n    const customStyles = {\n      control: (base, state) => ({\n        ...base,\n        border: '1px solid rgb(116, 135, 141)',\n        boxShadow: 'none',\n        '&:hover': {\n            border: '1px solid rgb(76, 81, 82)' , \n        }\n    })\n};\n\n    return (\n      <Container>\n        <Row>\n        <Col sm=\"4\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n           <Row >\n      <Col sm=\"4\">\n      <h5 className=\"mb-3 title\">Basic Admin password reset</h5>\n      <Select\n       placeholder =\"Select username...\"\n        value={selectedOptionAdmin}\n        onChange={this.handleChangeAdmin}\n        options={this.state.admins}\n        \n        styles = { customStyles } \n         \n      />\n\n      <Row className=\"mx-auto mt-3\">\n      {this.state.loading ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n      </Row>\n       </Col>\n      </Row>\n     \n  \n  \n    <Form className=\"mt-2\"onSubmit={this.onSubmit} >  \n    \n   \n    <Row>\n           <CustomInput type =\"checkbox\" className=\"ml-3 mb-4\" id= \"smartgroup\"  onChange={this.handleRandomPass} checked={this.state.checked} label={ <span><Badge color=\"secondary\" >Check to bypass remembered password policy and reuse same password</Badge></span>}/>\n           </Row>\n    <Row>    \n    <Col sm=\"4\">\n        <FormGroup>\n          \n                <Input type=\"text\" className=\"form-control\" id=\"awpass\" name=\"awpass\" value={this.state.pass} onChange={this.handleChangepass} placeholder=\"Password...\"/>\n                </ FormGroup > \n            </Col>\n         <Col sm=\"2\">\n       <Input type=\"submit\" value=\"Submit\" className=\"btn-sm  btn-info\"  />\n       </Col>\n       </Row>\n       </Form >\n       <Row>\n      <h2 style ={{color: this.state.color}}>{this.state.message}</h2> \n      </Row>\n      <Col sm=\"4\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n      <h5 className=\"mb-3 title\">Get OG details per Name</h5>\n           <Row>\n      <Col sm=\"4\">\n       \n      <Select\n       placeholder =\"Select OG name...\"\n        value={selectedOptionOg}\n        onChange={this.handleChangeOgs}\n        options={this.state.ogs}\n        styles = { customStyles }      \n      />\n\n      <Row className=\"mx-auto mt-3\">\n      {this.state.loadingOg ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n      </Row>\n       </Col>\n\n\n      </Row>\n\n      <Row>\n      <h2 style ={{color: this.state.color}}>{this.state.messageOg}</h2> \n      </Row>\n      {(selectedOptionOg)? \n      <Table bordered>\n      <thead>\n        <tr>\n          <th>Group Id</th>\n          <th>Lgid</th>\n          <th>Type</th>\n          <th>Users</th>\n          <th>Devices</th>\n          <th>Admins</th>      \n        </tr>\n      </thead>\n      <tbody>\n      <tr>   \n          <td>{selectedOptionOg.GroupId}</td>\n          <td>{selectedOptionOg.Id.Value}</td>\n          <td>{selectedOptionOg.LocationGroupType}</td>\n         \n          <td>\n        \n      <Button id=\"Popover1\" type=\"button\" color=\"primary\" block size=\"sm\">\n      {selectedOptionOg.Users}\n      </Button>\n      {(this.state.users)?\n      <Popover placement=\"right\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.togglePopOver}>\n        <PopoverHeader>Usernames</PopoverHeader>\n        <PopoverBody>\n          <ul className=\"nobull pl-0\">\n          {this.state.users.map((item,i) => <li key={i}>{item.UserName}</li>)}\n          </ul>\n        </PopoverBody>\n      </Popover>:''}\n      \n            </td>\n          \n          \n          <td>{selectedOptionOg.Devices}</td>\n          <td>{selectedOptionOg.Admins}</td>\n        </tr>\n      \n      </tbody>\n    </Table>\n    : \"\"}\n   \n   \n   \n   <Col sm=\"4\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n    <Form onSubmit={this.onSubmitLgId}>\n    <h5 className=\"mb-3 title\">Get OG details per lgid</h5>\n  <Row>\n    <Col md=\"4\" >\n      \n       <FormGroup> \n                <Input type=\"number\" maxLength=\"8\" className=\"form-control\" id=\"lgid\" name =\"lgid\" value={this.state.lgid}  onChange={this.handleChangeLgId} required placeholder=\"Insert lgid...\"/>\n                </ FormGroup >\n                </Col>\n                <Col md={2}> \n                <FormGroup>\n               \n                <Input type=\"submit\" value=\"Submit\" id=\"awlg\" name=\"awlg\" className=\"btn-sm btn-block btn-info\"  />\n               \n\n              </FormGroup >\n              </Col>\n              </Row>\n</Form>\n<Row>\n      <h2 style ={{color: this.state.color}}>{this.state.messageLg}</h2> \n      </Row>\n\n    <Row>\n      {(this.state.lgtoogle)? \n      <Table bordered>\n      <thead>\n        <tr>\n          <th>OG Name</th>\n          <th>Group Id</th>\n          <th>Lg level</th>\n          <th>Users</th>\n          <th>Devices</th>\n          <th>Admins</th>      \n        </tr>\n      </thead>\n      <tbody>\n      <tr>   \n          <td>{lgids.Name}</td>\n          <td>{lgids.GroupId}</td>\n          <td>{lgids.LgLevel}</td>\n          <td>{lgids.Users}</td>\n          <td>{lgids.Devices}</td>\n          <td>{lgids.Admins}</td>\n        </tr>\n      </tbody>\n    </Table>\n    : \"\"}\n    </Row>\n \n     \n    </Container>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { Component} from 'react';\n//import Select from 'react-select';\nimport { Select } from \"react-select-virtualized\";\nimport { Spinner, Container, Row,Col, Button, Table, Popover, PopoverHeader, PopoverBody} from 'reactstrap';\nimport { getOgs, getAppId, getDevPerApp,getAlldevOg } from '../../apiCall/airwatch';\n\nimport _ from 'lodash';\n\n\n \nclass Licences extends Component {\n  _isMounted = false;\n  state = {\n    \n    selectedOptionOg: null,\n    \n    ogs: [],\n    \n    loadingOg: false,\n    \n    color: 'red',\n    popoverOpen: false,\n    switch: false\n    \n    \n    \n   \n  };\n  togglePopOver = () =>{\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({  loadingOg: true}, async () => {\n\n    await getOgs(this.props.email, this.props.sub).then(og=>\n      {if (_.isString(og.data) && og.data.startsWith(\"Please56785678\")){\n        this.setState({loadingOg: false ,\n          messageOg: \"You need to go to Settings and set up your credentials\"});\n          }\n      else {\n        \n        \n        \n        if (this._isMounted){\n        console.log(\"og data \", og.data)\n        if (Array.isArray(og.data)){\n\n          const newogs = og.data.map( item => {\n            const { Name: label, GroupId: value, ...rest } = item;\n            return { label,value, ...rest }\n           }\n          );  \n          console.log(\"newogs\", newogs);\n         \n        this.setState({ogs: newogs,\n          loadingOg: false\n       })\n      \n        } else {\n          \n          this.setState({\n            loadingOg: false,\n         messageOg: og.data})\n        }\n      }\n    }\n    })\n\n\n    })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\n  handleChange = async selectedOptionOg => {\n\n\n    this.setState({ \n      selectedOptionOg:'',\n      popoverOpen: false,\n      switch: false\n    });\n\n    if(selectedOptionOg){\n    this.setState({ selectedOptionOg,\n        messageLg:'',\n    message:'',\n    messageOg:'',\n  loadingOg:true });\n    \n   \n    const compareArray = (arr1, arr2) => {\n      const final = [];\n      arr1.forEach((e1)=> arr2.forEach((e2)=>\n                                \n                       {\n          if(e1 === e2){\n              final.push(e1)\n          }\n      }         ));\n      return final;\n  }\n\n   const  Apps = [\n    \n    \"com.airwatch.contentlocker\",\n      \"com.boxer.email\",\n      \"com.airwatch.browser\",\n      \"com.airwatch.vmsend\",\n      \"com.airwatch.tunnel\",\n      \"com.workspaceone.pivd\",\n      \"com.vmware.folio\",\n      \"com-air-watch.content.locker\",\n      \"com.air-watch.boxer\",\n      \"com-air-watch.secure.browser\",\n      \"com-air-watch.pivd\",\n      \"com.vmware.ios-tunnel\",\n      \"com.vmware.verify\",\n      \"com.air-watch.vmsend\"\n      ]\n   const appids = [];\n   let deviceids=[];\n   let uniq = a => [...new Set(a)];\n     \n    \n    console.log(`Option selected lgid:`, selectedOptionOg);\n    console.log(`Option selected devices:`, selectedOptionOg.Devices);\n    \n   /* const appids =  await getAppId(this.props.email, this.props.sub, selectedOptionOg.Id.Value ,\"com.boxer.email\");\n   if(!_.isEmpty(appids.data)) console.log(\"appid \", appids.data.Application[0])\n   else{console.log(\" not used\")}; */\n\n\n    for (var i =0; i< Apps.length; i++){\n      await getAppId(this.props.email, this.props.sub, selectedOptionOg.Id.Value, Apps[i])\n      .then( \n       id =>{ if(!_.isEmpty(id.data)) {console.log(\"passid\", id.data.Application[0].Id.Value);\n                 appids.push(id.data.Application[0].Id.Value);\n              } \n            }\n    \n       ) \n    }\n\n    console.log(\"array of appid \", appids)\n/*\n    const boxerCount = await getDevPerApp(this.props.email, this.props.sub, selectedOptionOg.Id.Value, appids.data.Application[0].Id.Value )\n    console.log(\"boxer \", boxerCount.data.DeviceId)\n  */ \n if(!_.isEmpty(appids))\n for (var i =0; i< appids.length; i++){\n  await getDevPerApp(this.props.email, this.props.sub, selectedOptionOg.Id.Value, appids[i])\n  .then( \n   id =>{ if(!_.isEmpty(id.data)) {console.log(\"deviceid\", id.data.DeviceId);\n   deviceids = deviceids.concat(...id.data.DeviceId);\n   console.log(\"from inside \", deviceids);\n   \n          } \n        }\n   ) \n}\n\nconst devices = await getAlldevOg(this.props.email, this.props.sub, selectedOptionOg.Id.Value);\nconsole.log(\"devices \", devices.data.filter(item => item.OrganizationGroup === selectedOptionOg.label))\n\nconst alldevfromog = devices.data.filter(item => item.OrganizationGroup === selectedOptionOg.label);\nconst applefromog = alldevfromog.filter(item => item.Platform === \"Apple\");\nconst androidfromog = alldevfromog.filter(item => item.Platform === \"Android\");\nconst macfromog = alldevfromog.filter(item => item.Platform === \"AppleOsX\");\nconst winfromog = alldevfromog.filter(item => item.Platform === \"WinRT\");\n\n\n\nconst alldevids = alldevfromog.map( item => {\n  const { DeviceID } = item;\n  return { DeviceID }\n }\n).map(a => a.DeviceID); \n\nconsole.log(\"alldevids \", alldevids);\n  const advancedArr =compareArray(alldevids, deviceids);\n  console.log(\"advanced length \", advancedArr.length)\nconst advanced= advancedArr.length + macfromog.length +winfromog.length;\nconst basic= alldevfromog.length - advanced\n  this.setState({\n    totalDev: alldevfromog.length,\n     apple: applefromog.length,\n     mac: macfromog.length,\n     windows: winfromog.length,\n     android: androidfromog.length,\n     advanced,\n     basic,\n     loadingOg:false,\n     switch: true\n\n  })\n\n\n\n/*\nconst telecom = await getAlldevTelecom(this.props.email, this.props.sub, selectedOptionOg.Id.Value);\nconsole.log(\"telecom \", telecom.data)\ndeviceids = deviceids.concat(...telecom.data.data);\n  deviceids = uniq(deviceids)\nconsole.log(\"array of devices \", deviceids)\n  */\n}\n  };\n  \n\n  render() {\n   \n    const { selectedOptionOg } = this.state;\n\n    const customStyles = {\n      control: (base, state) => ({\n        ...base,\n        border: '1px solid rgb(116, 135, 141)',\n        boxShadow: 'none',\n        '&:hover': {\n            border: '1px solid rgb(76, 81, 82)' , \n        }\n    })\n};\n\n    return (\n      <Container>\n        <Row>\n        <Col sm=\"4\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n        </Row>\n       \n        <h5 className=\"mb-3 title\">Get licences details per OG</h5>\n     \n      <Col sm=\"4\">\n      <hr className=\"style-two\"></hr>\n      </Col>\n      \n           <Row>\n      <Col sm=\"4\">\n       \n      <Select\n       placeholder = \"Select OG name...\"\n        value={selectedOptionOg}\n        onChange={this.handleChange}\n        options={this.state.ogs}\n        styles = { customStyles }      \n      />\n\n      <Row className=\"mx-auto mt-3\">\n      {this.state.loadingOg ? <Spinner className=\"mx-auto\" animation=\"border\" variant=\"warning\" /> : \"\" }\n      </Row>\n       </Col>\n      </Row>\n\n      <Row>\n      <h2 style ={{color: this.state.color}}>{this.state.messageOg}</h2> \n      </Row>\n      {(this.state.switch)? \n      <Table bordered>\n      <thead>\n        <tr>\n          <th>Group Id</th>\n          <th>type</th>\n          <th>Total devices</th>\n          <th>Advanced</th>\n          <th>basic</th>      \n        </tr>\n      </thead>\n      <tbody>\n      <tr>   \n          <td>{selectedOptionOg.value}</td>\n          <td>{selectedOptionOg.LocationGroupType}</td>\n          <td> <Button id=\"Popover1\" type=\"button\" color=\"primary\" block size=\"sm\">\n      {this.state.totalDev}\n      </Button>\n      \n      <Popover placement=\"right\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.togglePopOver}>\n        <PopoverHeader>Usernames</PopoverHeader>\n        <PopoverBody>\n          <ul className=\"nobull pl-0\">\n           <li >Android: {this.state.android}</li>\n           <li >IOS: {this.state.apple}</li>\n           <li >Mac: {this.state.mac}</li>\n           <li >Windows: {this.state.windows}</li>\n          </ul>\n        </PopoverBody>\n      </Popover></td>\n          <td>{this.state.advanced}</td>\n          <td>{this.state.basic}</td>\n        </tr>\n      </tbody>\n    </Table>\n    : \"\"}\n   \n   \n   \n  \n \n     \n    </Container>\n    );\n  }\n}\n\nexport default Licences;\n","import React from 'react';\nimport { Switch, withRouter} from 'react-router-dom';\nimport Intelligence from \"../Settings/Intelligence\";\nimport Airwatch from \"../Settings/Airwatch\";\nimport Datalakes from \"../Settings/Datalakes\";\nimport Google from \"../Settings/Google\";\nimport Report from \"../Reports/Report\";\nimport Transfer from \"../Reports/ReportsTransfer\";\nimport Transfer2 from \"../Reports/ReportsTransferv2\";\nimport TransferGoogle from \"../Reports/ReportsTransGoogle\";\nimport Scheduler from \"../Reports/Scheduler\";\nimport Contact from \"../Contacts/Contact\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport FaqsList from \"../Faqs/FaqsList\";\nimport AwData from \"../Airwatch/AwData\";\nimport Admin from \"../Airwatch/Admin\";\nimport Licences from \"../Airwatch/Licences\";\nimport { connect } from 'react-redux';\nimport { selectIntelliCreds, retrieveIntelliCreds ,retrieveLake1Creds, selectLake1Creds, retrieveLake2Creds, selectLake2Creds, selectTasks, retrieveTasks, selectAwCreds, retrieveAwCreds, selectGoogleCreds, retrieveGoogleCreds} from '../redux/actions/ActionCreators';\n\n\nconst Content = props => {\n\n  const email= props.email;\n  const sub= props.sub;\n  const name= props.name;\n\n\n   \n    return (\n      <Switch>\n       <PrivateRoute exact path=\"/\" component={() => <FaqsList/> } />\n        <PrivateRoute exact path=\"/about\" component={() => \"About\" } />\n        <PrivateRoute exact path=\"/Pages\" component={() => \"Pages\" } />\n        <PrivateRoute exact path=\"/faq\" component={() => <FaqsList/> } />\n        <PrivateRoute exact path=\"/contact\" component={() => <Contact email={email} name={name}/> } />\n        <PrivateRoute exact path=\"/datalakes\" render={()=><Datalakes micreds={props.lake1credentials}  miselectCreds = {props.selectLake1Creds} miretrieveCreds= {props.retrieveLake1Creds } mi2creds={props.lake2credentials} miselect2Creds = {props.selectLake2Creds} miretrieve2Creds= {props.retrieveLake2Creds }/> }  /> \n        <PrivateRoute exact path=\"/intelli\" render={()=><Intelligence creds={props.intellicredentials}  selectCreds = {props.selectIntelliCreds} retrieveCreds= {props.retrieveIntelliCreds}/> }  />\n        <PrivateRoute exact path=\"/gcp\" render={() => <Google goocreds={props.goocreds}  selectCreds = {props.selectGoogleCreds} retrieveCreds= {props.retrieveGoogleCreds}/> } />\n        <PrivateRoute exact path=\"/reports\" render={()=><Report creds={props.intellicredentials} email={email} sub={sub} retrieveCreds= {props.retrieveIntelliCreds}  /> } />\n        <PrivateRoute exact path=\"/transfer\" render={()=><Transfer micreds={props.lake1credentials} miretrieveCreds={props.retrieveLake1Creds} creds={props.intellicredentials} email={email} sub={sub} retrieveCreds= {props.retrieveCreds}  /> } />\n        <PrivateRoute exact path=\"/transfer2\" render={()=><Transfer2 mi2creds={props.lake2credentials} miretrieve2Creds= {props.retrieveLake2Creds } creds={props.intellicredentials} email={email} sub={sub} retrieveCreds= {props.retrieveCreds}  /> } />\n        <PrivateRoute exact path=\"/transfergoogle\" render={()=><TransferGoogle goocreds={props.goocreds} gooRetrieveCreds={props.retrieveGoogleCreds} creds={props.intellicredentials} email={email} sub={sub} retrieveCreds= {props.retrieveCreds}  /> } />\n        <PrivateRoute exact path=\"/schedule\" render={()=><Scheduler goocreds={props.goocreds} gooRetrieveCreds={props.retrieveGoogleCreds} creds={props.intellicredentials} retrieveCreds= {props.retrieveIntelliCreds} mi2creds={props.lake2credentials} miretrieve2Creds= {props.retrieveLake2Creds} micreds={props.lake1credentials} miretrieveCreds={props.retrieveLake1Creds} tasks={props.tasks} email={email} sub={sub}  selectTasks = {props.selectTasks} retrieveTasks= {props.retrieveTasks} /> } />\n        <PrivateRoute exact path=\"/airwatch\" render={()=><Airwatch awcreds={props.awcreds}  selectCreds = {props.selectAwCreds} retrieveCreds= {props.retrieveAwCreds}/> }  />  \n        <PrivateRoute exact path=\"/awdevice\" component={()=><AwData email={email} sub={sub} awcreds={props.awcreds}/>} />\n        <PrivateRoute exact path=\"/admin\" component={()=><Admin email={email} sub={sub} />} />\n        <PrivateRoute exact path=\"/licences\" component={()=><Licences email={email} sub={sub} />} />\n                \n      </Switch>\n    )\n    }\n\n    const mapStateToProps = state => {\n      return {\n          intellicredentials: state.icreds,\n          lake1credentials: state.lake1creds,\n          lake2credentials: state.lake2creds,\n          tasks: state.tasks,\n          awcreds: state.awcreds,\n          goocreds: state.goocreds\n      };\n  }; \n\n  const mapDispatchToProps = \n    {selectIntelliCreds,\n     retrieveIntelliCreds,\n     selectLake1Creds,\n     retrieveLake1Creds, \n     selectLake2Creds,\n     retrieveLake2Creds,\n     selectTasks,\n     retrieveTasks,\n     selectAwCreds,\n     retrieveAwCreds,\n     selectGoogleCreds,\n     retrieveGoogleCreds}\n\n  \n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Content));  //Shorthand\n","\n\n\nimport * as ActionTypes from './ActionTypes';\n\nexport function selectIntelliCreds(intelliname, intellivalue){\n    \n    return {\n        type : ActionTypes.INTELLI_SELECTED,\n        payload :  {[intelliname]: intellivalue}\n    }\n}\n\n\nexport function retrieveIntelliCreds(intellicreds){\n   \n    return {\n        type : ActionTypes.INTELLI_RETRIEVED,\n        payload : intellicreds\n    }\n}\n\n\nexport function selectLake1Creds(lake1name, lake1value){\n    \n    return {\n        type : ActionTypes.LAKE1_SELECTED,\n        payload :  {[lake1name]: lake1value}\n    }\n}\n\n\nexport function retrieveLake1Creds(lake1creds){\n   \n    return {\n        type : ActionTypes.LAKE1_RETRIEVED,\n        payload : lake1creds\n    }\n}\n\nexport function selectLake2Creds(lake2name, lake2value){\n    \n    return {\n        type : ActionTypes.LAKE2_SELECTED,\n        payload :  {[lake2name]: lake2value}\n    }\n}\n\n\nexport function retrieveLake2Creds(lake2creds){\n   \n    return {\n        type : ActionTypes.LAKE2_RETRIEVED,\n        payload : lake2creds\n    }\n}\n\nexport function selectTasks(taskname, taskvalue){\n    \n    return {\n        type : ActionTypes.TASK_SELECTED,\n        payload :  {[taskname]: taskvalue}\n    }\n}\n\n\nexport function retrieveTasks(task){\n    \n    return {\n        type : ActionTypes.TASK_RETRIEVED,\n        payload : task\n    }\n}\n\nexport function selectAwCreds(awname, awvalue){\n    \n    return {\n        type : ActionTypes.AW_SELECTED,\n        payload :  {[awname]: awvalue}\n    }\n}\n\n\nexport function retrieveAwCreds(awcreds){\n   \n    return {\n        type : ActionTypes.AW_RETRIEVED,\n        payload : awcreds\n    }\n}\n\nexport function selectGoogleCreds(gooname, goovalue){\n    \n    return {\n        type : ActionTypes.GOOGLE_SELECTED,\n        payload :  {[gooname]: goovalue}\n    }\n}\n\n\nexport function retrieveGoogleCreds(goocreds){\n   \n    return {\n        type : ActionTypes.GOOGLE_RETRIEVED,\n        payload : goocreds\n    }\n}","import React, { Component} from 'react';\nimport {Container, Row, Col} from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Dashboard extends Component {\n  \n render() {\n  \n    return (\n      <Container id=\"\" fluid={true} >\n     \n\n     \n     <header className=\"masthead text-white text-center\">\n    <div className=\"overlay\"></div>\n    <div className=\"container\">\n      <Row>\n        <div className=\"col-xl-12 mx-auto\">\n          <h1 className=\"mb-5\">WS1 UTILS provides complementary features to VMware Workspace One Suite using the power of VMware API's.</h1>\n        </div>\n       \n      </Row>\n    </div>\n  </header>\n    \n \n    <Container >\n      <Row className=\"text-center\">\n        <Col sm=\"4\">\n          \n           \n             \n              <FontAwesomeIcon icon=\"desktop\" className=\"fa-6x mb-1\" />\n          \n            <h3 class=\"dashboard\">UEM</h3>\n            <p class=\"lead mb-0\">Unit testing of device in safely way</p>\n            <p class=\"lead mb-0\">Get your licence usage sorted out</p>\n         \n        </Col>\n        <Col sm=\"4\">\n        <FontAwesomeIcon icon=\"lightbulb\" className=\"fa-6x mb-1\" />\n            <h3 class=\"dashboard\">Intelligence</h3>\n            <p class=\"lead mb-0\">Download your reports easily</p>\n            <p class=\"lead mb-0\">Schedule and transfer your reports to Azure or Google cloud</p>\n         \n          </Col>\n          <Col sm=\"4\">\n          <FontAwesomeIcon icon=\"check\" className=\"fa-6x mb-1\" />\n            <h3 class=\"dashboard\">Easy to Use</h3>\n            <p class=\"lead mb-0\">Simple interface and integrated workflow  make an easy user experience </p>\n         \n          </Col>\n      </Row>\n\n\n      </Container>\n      \n       <Container fluid className=\"mt-5 row-padded\">\n  <Row className=\"overlay \">\n         <Col sm=\"6\">\n        <span> Powered and Secured by\n         <a href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><u> Auth0</u></a></span>\n         </Col>\n\n         <Col sm=\"6\" className=\"text-md-right\">\n         <span>&copy; 2020 JLB</span>\n         </Col>\n       </Row>\n     \n       </Container>\n  \n</Container> \n\n\n     \n    );\n\n    }\n  }\n\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from 'classnames';\nimport SideBar from \"../Sidebar/SideBar\";\nimport Content from '../content/Content';\nimport './navbar.css';\nimport Dasboard from '../Dashboard'\n\n\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport { useAuth0 } from \"../../Auth0/react-auth0-spa\";\n\nconst NavBar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  const toggle = () => setIsOpen(!isOpen);\n\n  const [state, setState] = useState({\n    color1:'primary',\n    color2:'info'\n      \n  })\n\n  const logoutWithRedirect = () =>\n    logout({\n      returnTo: window.location.origin\n    });\n\n    //const items = {...localStorage};\n    const [menu, setMenu]= useState(1);\n\n   \n\n\n  return (\n    <div className=\"nav-container\">\n      <Navbar color=\"light\" light expand=\"md\" className=\" \" >\n        <Container>\n          <NavbarBrand className=\"logo\" />\n       \n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n            \n              {isAuthenticated && (\n                <React.Fragment>\n              <NavItem>\n                  <Button\n                  color={state.color1}\n                   className=\"mx-5 \" \n                   onClick={() => {setMenu(1);\n                    setState({\n                      color1:'primary',\n                     color2:'info'\n                    })\n                    } \n                  }\n                    >\n                      <FontAwesomeIcon icon=\"mobile-alt\" className=\"mr-3\" />\n                     \n                     UEM\n                     \n                  </Button>\n                </NavItem>\n                \n                 <NavItem>\n                 <Button\n                color={state.color2}\n                  className=\"mx-5\" \n                 \n                  onClick={() => {setMenu(2);\n                    setState({\n                      color1:'info',\n                     color2:'primary'\n                    })\n                    } \n                  }\n                   >\n                     <FontAwesomeIcon icon=\"lightbulb\" className=\"mr-3\" />\n                    INTELLIGENCE\n                    \n                 </Button>\n               </NavItem>\n               </React.Fragment>\n              )}\n\n\n\n\n              \n\n            </Nav>\n            <Nav className=\"d-none d-md-block\" navbar>\n              {!isAuthenticated && (\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    className=\"btn-margin\"\n                    onClick={() => {loginWithRedirect({});\n                  }}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              )}\n              {isAuthenticated && (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret id=\"profileDropDown\">\n                    <img\n                      src={user.picture}\n                      alt=\"Profile\"\n                      className=\"nav-user-profile rounded-circle\"\n                      width=\"50\"\n                    />\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>{user.name}</DropdownItem>\n\n\n\n                    \n                    \n                    <DropdownItem\n                      id=\"qsLogoutBtn\"\n                      onClick={() => logoutWithRedirect()}\n                    >\n                      <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" /> Log\n                      out\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              )}\n            </Nav>\n            {!isAuthenticated && (\n              <Nav className=\"d-md-none\" navbar>\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    block\n                    onClick={() => loginWithRedirect({})}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              </Nav>\n            )}\n            {isAuthenticated && (\n              <Nav\n                className=\"d-md-none justify-content-between\"\n                navbar\n                style={{ minHeight: 170 }}\n              >\n                <NavItem>\n                  <span className=\"user-info\">\n                    <img\n                      src={user.picture}\n                      alt=\"Profile\"\n                      className=\"nav-user-profile d-inline-block rounded-circle mr-3\"\n                      width=\"50\"\n                    />\n                    <h6 className=\"d-inline-block\">{user.name}</h6>\n                  </span>\n                </NavItem>\n               \n                <NavItem>\n\n                  <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" />\n                  <RouterNavLink\n                    to=\"#\"\n                    id=\"qsLogoutBtn\"\n                    onClick={() => { \n                      logoutWithRedirect()}}\n                  >\n                    Log out\n                  </RouterNavLink>\n                </NavItem>\n              </Nav>\n            )}\n          </Collapse>\n        </Container>\n      </Navbar>\n      {isAuthenticated && (   <Row>\n         <Col sm=\"3\" className=\"pr-0\">\n      <SideBar toggle={toggle} isOpen={!isOpen} menu={menu}/>\n      </Col>\n      <Col sm=\"8\" offset-sm-1=\"true\" className=\"pl-0\">\n    \n    <Container fluid className={classNames('content', {'is-open': isOpen})}>\n     \n     <Content email={user.email} sub={user.sub} name={user.name}/>\n    </Container>\n    </Col>\n    </Row> )}\n    {!isAuthenticated && (   \n         <Dasboard />\n          )}\n\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLink, faPowerOff, faUser, faCog, faLightbulb, faMobileAlt, faHome, faDesktop, faCheck}  from \"@fortawesome/free-solid-svg-icons\";\n\nfunction initFontAwesome() {\n  library.add(faLink);\n  library.add(faUser);\n  library.add(faHome);\n  library.add(faPowerOff);\n  library.add(faCog);\n  library.add(faLightbulb);\n  library.add(faMobileAlt);\n  library.add(faDesktop);\n  library.add(faCheck);\n}\n\nexport default initFontAwesome;\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\n\n\nimport { ConfigureStore } from './Components/redux/configureStore';\n\nimport Loading from \"./Components/Loading\";\nimport NavBar from \"./Components/Navbar/NavBar\";\n//import Footer from \"./components/Footer\";\n//import Home from \"./views/Home\";\n//import NavSettings from \"./views/NavSettings\";\n\nimport { useAuth0 } from \"./Auth0/react-auth0-spa\";\nimport history from \"./utils/history\";\nimport { Provider } from 'react-redux';\n\n// styles\nimport \"./App.css\";\n\nimport initFontAwesome from \"./utils/initFontAwesome\";\ninitFontAwesome();\n\n\n\nconst store = ConfigureStore();\n\n\nconst App = () => {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Provider store={ store }>\n    <Router history={history}>\n      <div id=\"app\" className=\"app d-flex flex-column h-100\">\n        <NavBar store= {store}/>\n    {/*   <Container className=\"flex-grow-1 mt-5\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <PrivateRoute path=\"/settings\"  component={NavSettings} />\n         <PrivateRoute path=\"/profile\" component={Profile} />  \n          </Switch>\n  </Container>  */}\n        \n      </div>\n    </Router>\n    </Provider>\n  );\n};\n\nexport default App;","import { createStore} from 'redux';\n\n\n//import thunk from 'redux-thunk';\n//import logger from 'redux-logger';\n\n\nimport rootReducer from './reducers';\n\n\n    export const ConfigureStore = () => {\n  \n  const store = createStore(rootReducer);  //prod\n  \n  // const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n    return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./Auth0/react-auth0-spa\";\nimport config from \"./Auth0/auth_config.json\";\nimport history from \"./utils/history\";\n\n\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    audience={config.audience}  \n    onRedirectCallback={onRedirectCallback}\n  >\n    \n    <App />\n   \n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}